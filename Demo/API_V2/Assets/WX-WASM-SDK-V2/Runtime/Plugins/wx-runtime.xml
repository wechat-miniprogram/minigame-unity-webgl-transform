<?xml version="1.0"?>
<doc>
    <assembly>
        <name>wx-runtime</name>
    </assembly>
    <members>
        <member name="T:WeChatWASM.Cloud">
            <summary>
            云函数，调用前必须先Init初始化
            </summary>
        </member>
        <member name="M:WeChatWASM.Cloud.Init(WeChatWASM.CallFunctionInitParam)">
            <summary>
            初始化，详见 https://developers.weixin.qq.com/minigame/dev/wxcloud/reference-sdk-api/init/client.init.html
            </summary>
            <param name="param"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:WeChatWASM.Cloud.CallFunction(WeChatWASM.CallFunctionParam)" -->
        <member name="M:WeChatWASM.Cloud.CloudID(System.String)">
            <summary>
            声明字符串为 CloudID（开放数据 ID），该接口传入一个字符串，返回一个 CloudID 特殊字符串，将该对象传至云函数可以获取其对应的开放数据。详见 https://developers.weixin.qq.com/minigame/dev/wxcloud/reference-sdk-api/open/Cloud.CloudID.html
            </summary>
            <param name="cloudID">通过开放能力在小程序端 / web 端获取得到的 CloudID</param>
            <returns>返回字符串，原样传回云函数调用就好</returns>
        </member>
        <member name="T:WeChatWASM.WXBannerAd">
            <summary>
            Banner 广告,详见 https://developers.weixin.qq.com/minigame/dev/guide/open-ability/ad/banner-ad.html
            </summary>
        </member>
        <member name="M:WeChatWASM.WXBannerAd.OnResize(System.Action{WeChatWASM.WXADResizeResponse})">
            <summary>
            监听 banner 广告尺寸变化事件。
            </summary>
            <param name="action">banner 广告尺寸变化事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXBannerAd.OffResize(System.Action{WeChatWASM.WXADResizeResponse})">
            <summary>
            取消监听 banner 广告尺寸变化事件
            </summary>
            <param name="action">banner 广告尺寸变化事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXBannerAd.Hide">
            <summary>
            隐藏 banner 广告。
            </summary>
        </member>
        <member name="T:WeChatWASM.WXBaseAd">
            <summary>
            广告的基类
            </summary>
        </member>
        <member name="M:WeChatWASM.WXBaseAd.Show(System.Action{WeChatWASM.WXTextResponse},System.Action{WeChatWASM.WXTextResponse})">
            <summary>
            显示广告。
            </summary>
            <param name="success">成功回调</param>
            <param name="failed">失败回调</param>
        </member>
        <member name="M:WeChatWASM.WXBaseAd.Show(System.String,System.String,System.Action{WeChatWASM.WXTextResponse},System.Action{WeChatWASM.WXTextResponse})">
            <summary>
            显示广告。
            </summary>
            <param name="success">成功回调</param>
            <param name="failed">失败回调</param>
        </member>
        <member name="M:WeChatWASM.WXBaseAd.OnError(System.Action{WeChatWASM.WXADErrorResponse})">
            <summary>
            监听广告错误事件。
            </summary>
            <param name="action">广告错误事件的回调函数,可详见 https://developers.weixin.qq.com/minigame/dev/api/ad/BannerAd.onError.html</param>
        </member>
        <member name="M:WeChatWASM.WXBaseAd.OnLoad(System.Action{WeChatWASM.WXADLoadResponse})">
            <summary>
            监听 banner 广告加载事件。
            </summary>
            <param name="action">广告加载事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXBaseAd.OffError(System.Action{WeChatWASM.WXADErrorResponse})">
            <summary>
            取消监听广告错误事件
            </summary>
            <param name="action">广告错误事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXBaseAd.OffLoad(System.Action{WeChatWASM.WXADLoadResponse})">
            <summary>
            取消监听广告加载事件
            </summary>
            <param name="action">广告加载事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXBaseAd.Destroy">
            <summary>
            销毁广告,如果是激励视频广告且multiton参数默认设置为false,则请慎用Destroy,调用后，后续可能无法再创建激励视频广告
            </summary>
        </member>
        <member name="T:WeChatWASM.WXCamera">
            <summary>
            微信相机
            </summary>
        </member>
        <member name="M:WeChatWASM.WXCamera.WXCameraCloseFrameChange(System.String)">
            <summary>
            [Camera.closeFrameChange()](https://developers.weixin.qq.com/minigame/dev/api/media/camera/Camera.closeFrameChange.html)
            需要基础库： `2.9.0`
            关闭监听帧数据
            </summary>
        </member>
        <member name="M:WeChatWASM.WXCamera.WXCameraDestroy(System.String)">
            <summary>
            [Camera.destroy()](https://developers.weixin.qq.com/minigame/dev/api/media/camera/Camera.destroy.html)
            需要基础库： `2.9.0`
            销毁相机
            </summary>
        </member>
        <member name="M:WeChatWASM.WXCamera.WXCameraListenFrameChange(System.String)">
            <summary>
            [Camera.listenFrameChange()](https://developers.weixin.qq.com/minigame/dev/api/media/camera/Camera.listenFrameChange.html)
            需要基础库： `2.9.0`
            开启监听帧数据
            </summary>
        </member>
        <member name="M:WeChatWASM.WXCamera.WXCameraOnAuthCancel(System.String)">
            <summary>
            [Camera.onAuthCancel(function callback)](https://developers.weixin.qq.com/minigame/dev/api/media/camera/Camera.onAuthCancel.html)
            需要基础库： `2.9.0`
            监听用户不允许授权使用摄像头的情况
            </summary>
        </member>
        <member name="M:WeChatWASM.WXCamera.WXCameraOnCameraFrame(System.String)">
            <summary>
            [Camera.onCameraFrame(function callback)](https://developers.weixin.qq.com/minigame/dev/api/media/camera/Camera.onCameraFrame.html)
            需要基础库： `2.9.0`
            监听摄像头实时帧数据
            </summary>
        </member>
        <member name="M:WeChatWASM.WXCamera.WXCameraOnStop(System.String)">
            <summary>
            [Camera.onStop(function callback)](https://developers.weixin.qq.com/minigame/dev/api/media/camera/Camera.onStop.html)
            需要基础库： `2.9.0`
            监听摄像头非正常终止事件，如退出后台等情况
            </summary>
        </member>
        <member name="F:WeChatWASM.OnCameraFrameCallbackResult.data">
            <summary>
            图像像素点数据，一维数组，每四项表示一个像素点的 rgba
            </summary>
        </member>
        <member name="F:WeChatWASM.OnCameraFrameCallbackResult.height">
            <summary>
            图像数据矩形的高度
            </summary>
        </member>
        <member name="F:WeChatWASM.OnCameraFrameCallbackResult.width">
            <summary>
            图像数据矩形的宽度
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateCameraOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateCameraOption.devicePosition">
            <summary>
            摄像头朝向，值为 front, back
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateCameraOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateCameraOption.flash">
            <summary>
            闪光灯，值为 auto, on, off
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateCameraOption.height">
            <summary>
            相机的高度
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateCameraOption.size">
            <summary>
            帧数据图像尺寸，值为 small, medium, large
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateCameraOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateCameraOption.width">
            <summary>
            相机的宽度
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateCameraOption.x">
            <summary>
            相机的左上角横坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateCameraOption.y">
            <summary>
            相机的左上角纵坐标
            </summary>
        </member>
        <member name="T:WeChatWASM.WXCanvas">
            <summary>
            调用客户端的canvas
            </summary>
        </member>
        <member name="M:WeChatWASM.WXCanvas.ToTempFilePathSync(WeChatWASM.WXToTempFilePathSyncParam)">
            <summary>
            同步的将当前 Canvas 保存为一个临时文件
            华为机型分享有已知bug，推荐使用异步版本
            </summary>
            <returns>canvas 生成的临时文件路径 (本地路径)</returns>
        </member>
        <member name="M:WeChatWASM.WXCanvas.ToTempFilePath(WeChatWASM.WXToTempFilePathParam)">
            <summary>
            异步的将当前 Canvas 保存为一个临时文件
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:WeChatWASM.WXChat" -->
        <member name="M:WeChatWASM.WXChat.WXChatOn(System.String)">
            <summary>
            监听用户操作
            </summary>
        </member>
        <member name="M:WeChatWASM.WXChat.WXChatOff(System.String)">
            <summary>
            停止监听用户操作
            </summary>
        </member>
        <member name="M:WeChatWASM.WXChat.WXChatHide">
            <summary>
            隐藏入口
            </summary>
        </member>
        <member name="M:WeChatWASM.WXChat.WXChatShow(System.String)">
            <summary>
            显示入口
            </summary>
        </member>
        <member name="M:WeChatWASM.WXChat.WXChatClose">
            <summary>
            强制关闭
            </summary>
        </member>
        <member name="M:WeChatWASM.WXChat.WXChatOpen(System.String)">
            <summary>
            打开组件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXChat.WXChatSetTabs(System.String)">
            <summary>
            设置组件tab
            </summary>
        </member>
        <member name="M:WeChatWASM.WXChat.WXChatSetSignature(System.String)">
            <summary>
            设置签名，用于聊天房发消息验证
            </summary>
        </member>
        <member name="F:WeChatWASM.WXChatOptions.x">
            <summary>
            显示的横坐标，屏幕物理坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.WXChatOptions.y">
            <summary>
            显示的纵坐标，屏幕物理坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.WXChatOptions.logoUrl">
            <summary>
            自定义入口 icon cdn 地址
            </summary>
        </member>
        <member name="F:WeChatWASM.WXChatOptions.movable">
            <summary>
            是否可拖拽
            </summary>
        </member>
        <member name="F:WeChatWASM.WXChatOptions.enableSnap">
            <summary>
            是否会吸附到左右
            </summary>
        </member>
        <member name="F:WeChatWASM.WXChatOptions.scale">
            <summary>
            面板缩放比例，默认大小 40x40，低于 375 宽度的屏幕会等比缩小
            </summary>
        </member>
        <member name="T:WeChatWASM.WXCustomAd">
            <summary>
            插屏广告组件广告,详见 https://developers.weixin.qq.com/minigame/dev/api/ad/CustomAd.html
            </summary>
        </member>
        <member name="M:WeChatWASM.WXCustomAd.OnClose(System.Action)">
            <summary>
            监听广告关闭事件
            </summary>
            <param name="action">广告关闭事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXCustomAd.OnHide(System.Action)">
            <summary>
            监听广告隐藏事件
            </summary>
            <param name="action">广告关闭事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXCustomAd.OffClose(System.Action)">
            <summary>
            取消监听广告关闭事件
            </summary>
            <param name="action">广告关闭事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXCustomAd.OffHide(System.Action)">
            <summary>
            取消监听广告隐藏事件
            </summary>
            <param name="action">广告关闭事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXCustomAd.Hide(System.Action{WeChatWASM.WXTextResponse},System.Action{WeChatWASM.WXTextResponse})">
            <summary>
            隐藏原生模板广告。（某些模板广告无法隐藏）
            </summary>
            <param name="success">成功回调</param>
            <param name="failed">失败回调</param>
        </member>
        <member name="M:WeChatWASM.WXDownloadTask.WX_DownloadTaskAbort(System.String)">
            <summary>
            [DownloadTask.abort()](https://developers.weixin.qq.com/minigame/dev/api/network/download/DownloadTask.abort.html)
            需要基础库： `1.4.0`
            中断下载任务
            </summary>
        </member>
        <member name="M:WeChatWASM.WXDownloadTask.WX_DownloadTaskOffHeadersReceived(System.String)">
            <summary>
            [DownloadTask.offHeadersReceived(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/download/DownloadTask.offHeadersReceived.html)
            需要基础库： `2.1.0`
            移除 HTTP Response Header 事件的监听函数
            **示例代码**
            ```js
            const listener = function (res) { console.log(res) }
            DownloadTask.onHeadersReceived(listener)
            DownloadTask.offHeadersReceived(listener) // 需传入与监听时同一个的函数对象
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXDownloadTask.WX_DownloadTaskOffProgressUpdate(System.String)">
            <summary>
            [DownloadTask.offProgressUpdate(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/download/DownloadTask.offProgressUpdate.html)
            需要基础库： `2.1.0`
            移除下载进度变化事件的监听函数
            **示例代码**
            ```js
            const listener = function (res) { console.log(res) }
            DownloadTask.onProgressUpdate(listener)
            DownloadTask.offProgressUpdate(listener) // 需传入与监听时同一个的函数对象
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXDownloadTask.WX_DownloadTaskOnHeadersReceived(System.String)">
            <summary>
            [DownloadTask.onHeadersReceived(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/download/DownloadTask.onHeadersReceived.html)
            需要基础库： `2.1.0`
            监听 HTTP Response Header 事件。会比请求完成事件更早
            </summary>
        </member>
        <member name="M:WeChatWASM.WXDownloadTask.WX_DownloadTaskOnProgressUpdate(System.String)">
            <summary>
            [DownloadTask.onProgressUpdate(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/download/DownloadTask.onProgressUpdate.html)
            需要基础库： `1.4.0`
            监听下载进度变化事件
            </summary>
        </member>
        <member name="P:WeChatWASM.WXEnv.USER_DATA_PATH">
            <summary>
            Gets 微信提供了一个用户文件目录给开发者，开发者对这个目录有完全自由的读写权限。通过 WX.env.USER_DATA_PATH 可以获取到这个目录的路径。
            </summary>
        </member>
        <member name="P:WeChatWASM.WXFeedbackButton.style">
            <summary>
            按钮的样式
            </summary>
        </member>
        <member name="P:WeChatWASM.WXFeedbackButton.type">
            <summary>
            按钮的类型。
            可选值：
            - 'text': 可以设置背景色和文本的按钮;
            - 'image': 只能设置背景贴图的按钮，背景贴图会直接拉伸到按钮的宽高;
            </summary>
        </member>
        <member name="P:WeChatWASM.WXFeedbackButton.image">
            <summary>
            按钮的背景图片，仅当 type 为 `image` 时有效
            </summary>
        </member>
        <member name="P:WeChatWASM.WXFeedbackButton.text">
            <summary>
            按钮上的文本，仅当 type 为 `text` 时有效
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFeedbackButton.WX_FeedbackButtonDestroy(System.String)">
            <summary>
            [FeedbackButton.destroy()](https://developers.weixin.qq.com/minigame/dev/api/open-api/feedback/FeedbackButton.destroy.html)
            销毁意见反馈按钮
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFeedbackButton.WX_FeedbackButtonHide(System.String)">
            <summary>
            [FeedbackButton.hide()](https://developers.weixin.qq.com/minigame/dev/api/open-api/feedback/FeedbackButton.hide.html)
            隐藏意见反馈按钮。
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFeedbackButton.WX_FeedbackButtonOffTap(System.String)">
            <summary>
            [FeedbackButton.offTap(function listener)](https://developers.weixin.qq.com/minigame/dev/api/open-api/feedback/FeedbackButton.offTap.html)
            移除意见反馈按钮的点击事件的监听函数
            **示例代码**
            ```js
            const listener = function (res) { console.log(res) }
            FeedbackButton.onTap(listener)
            FeedbackButton.offTap(listener) // 需传入与监听时同一个的函数对象
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFeedbackButton.WX_FeedbackButtonOnTap(System.String)">
            <summary>
            [FeedbackButton.onTap(function listener)](https://developers.weixin.qq.com/minigame/dev/api/open-api/feedback/FeedbackButton.onTap.html)
            监听意见反馈按钮的点击事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFeedbackButton.WX_FeedbackButtonShow(System.String)">
            <summary>
            [FeedbackButton.show()](https://developers.weixin.qq.com/minigame/dev/api/open-api/feedback/FeedbackButton.show.html)
            显示意见反馈按钮
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WriteFileSync(System.String,System.String,System.String)">
            <summary>
            同步写文件，详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.writeFileSync.html
            </summary>
            <param name="filePath">要写入的文件路径 (本地路径)</param>
            <param name="data">要写入的文本</param>
            <param name="encoding">指定写入文件的字符编码</param>
            <returns>错误信息，如果成功的话返回ok</returns>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WriteFileSync(System.String,System.Byte[],System.String)">
            <summary>
            同步写文件，详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.writeFileSync.html
            </summary>
            <param name="filePath">要写入的文件路径 (本地路径)</param>
            <param name="data">要写入的二进制数据</param>
            <param name="encoding">指定写入文件的字符编码</param>
            <returns>错误信息，如果成功的话返回ok</returns>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WriteFile(WeChatWASM.WriteFileParam)">
            <summary>
            将二进制写入文件, 详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.writeFile.html
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WriteFile(WeChatWASM.WriteFileStringParam)">
            <summary>
            将字符串写入文件, 详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.appendFile.html
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.AppendFile(WeChatWASM.WriteFileParam)">
            <summary>
            在文件结尾追加二进制内容, 详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.appendFile.html
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.AppendFile(WeChatWASM.WriteFileStringParam)">
            <summary>
            在文件结尾追加文本内容, 详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.appendFile.html
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.ReadFile(WeChatWASM.ReadFileParam)">
            <summary>
            读取本地文件内容, 详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.readFile.html
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.ReadFileSync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            同步读取本地文件，详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.readFileSync.html
            </summary>
            <param name="filePath">要读取的文件的路径 (本地路径)</param>
            <param name="bytes">返回结果，失败为null</param>
            <returns></returns>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.ReadFileSync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            同步读取本地文件，详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.readFileSync.html
            </summary>
            <param name="filePath">要读取的文件的路径 (本地路径)</param>
            <param name="encoding">指定读取文件的字符编码,不能为空</param>
            <returns></returns>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.AccessSync(System.String)">
            <summary>
            同步判断文件/目录是否存在 详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.accessSync.html
            </summary>
            <param name="path">要判断是否存在的文件/目录路径 (本地路径)</param>
            <returns>成功返回 "access:ok" 其他为失败，不可访问</returns>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.Access(WeChatWASM.AccessParam)">
            <summary>
            判断文件/目录是否存在 详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.access.html
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.CopyFileSync(System.String,System.String)">
            <summary>
            同步复制文件 详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.copyFileSync.html
            </summary>
            <param name="srcPath">源文件路径，支持本地路径</param>
            <param name="destPath">目标文件路径，支持本地路径</param>
            <returns>成功返回 "copyFile:ok" 其他为失败</returns>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.CopyFile(WeChatWASM.CopyFileParam)">
            <summary>
            复制文件 详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.copyFile.html
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.UnlinkSync(System.String)">
            <summary>
            同步删除文件 详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.unlinkSync.html
            </summary>
            <param name="filePath">源文件路径，支持本地路径</param>
            <returns>成功返回 "unlink:ok" 其他为失败</returns>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.Unlink(WeChatWASM.UnlinkParam)">
            <summary>
            删除文件 详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.unlink.html
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.Mkdir(WeChatWASM.MkdirParam)">
            <summary>
            创建目录, 详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.mkdir.html
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.MkdirSync(System.String,System.Boolean)">
            <summary>
            同步创建目录,详见 https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.mkdirSync.html
            </summary>
            <param name="dirPath">创建的目录路径 (本地路径)</param>
            <param name="recursive">是否在递归创建该目录的上级目录后再创建该目录。如果对应的上级目录已经存在，则不创建该上级目录。如 dirPath 为 a/b/c/d 且 recursive 为 true，将创建 a 目录，再在 a 目录下创建 b 目录，以此类推直至创建 a/b/c 目录下的 d 目录。</param>
            <returns></returns>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.Rmdir(WeChatWASM.RmdirParam)">
            <summary>
            删除目录，https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.rmdir.html
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.RmdirSync(System.String,System.Boolean)">
            <summary>
            同步删除目录，https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.rmdirSync.html
            </summary>
            <param name="dirPath">要删除的目录路径 (本地路径)</param>
            <param name="recursive">是否递归删除目录。如果为 true，则删除该目录和该目录下的所有子目录以及文件</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerReaddirSync(System.String)" -->
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerReadCompressedFileSync(System.String,System.String)">
            <summary>
            [ArrayBuffer FileSystemManager.readCompressedFileSync(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.readCompressedFileSync.html)
            需要基础库： `2.21.1`
            同步读取指定压缩类型的本地文件内容
            **示例代码**
            ```js
            const fs = wx.getFileSystemManager()
            // 异步接口
            fs.readCompressedFile({
            filePath: '${wx.env.USER_DATA_PATH}/hello.br',
            compressionAlgorithm: 'br',
            success(res) {
            console.log(res.data)
            },
            fail(res) {
            console.log('readCompressedFile fail', res)
            }
            })
            // 同步接口
            try {
            const data = fs.readCompressedFileSync({
            filePath: '${wx.env.USER_DATA_PATH}/hello.br',
            compressionAlgorithm: 'br',
            })
            console.log(data)
            } catch (err) {
            console.log(err)
            }
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerClose(System.String,System.String)">
            <summary>
            [FileSystemManager.close(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.close.html)
            需要基础库： `2.16.1`
            关闭文件
            **示例代码**
            ```js
            const fs = wx.getFileSystemManager()
            // 打开文件
            fs.open({
            filePath: `${wx.env.USER_DATA_PATH}/hello.txt`,
            flag: 'a+',
            success(res) {
            // 关闭文件
            fs.close({
            fd: res.fd
            })
            }
            })
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerFstat(System.String,System.String)">
            <summary>
            [FileSystemManager.fstat(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.fstat.html)
            需要基础库： `2.16.1`
            获取文件的状态信息
            **示例代码**
            ```js
            const fs = wx.getFileSystemManager()
            // 打开文件
            fs.open({
            filePath: `${wx.env.USER_DATA_PATH}/hello.txt`,
            flag: 'a+',
            success(res) {
            // 获取文件的状态信息
            fs.fstat({
            fd: res.fd,
            success(res) {
            console.log(res.stats)
            }
            })
            }
            })
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerFtruncate(System.String,System.String)">
            <summary>
            [FileSystemManager.ftruncate(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.ftruncate.html)
            需要基础库： `2.16.1`
            对文件内容进行截断操作
            **示例代码**
            ```js
            const fs = wx.getFileSystemManager()
            // 打开文件
            fs.open({
            filePath: `${wx.env.USER_DATA_PATH}/hello.txt`,
            flag: 'a+',
            success(res) {
            // 对文件内容进行截断操作
            fs.ftruncate({
            fd: res.fd,
            length: 10, // 从第10个字节开始截断文件
            success(res) {
            console.log(res)
            }
            })
            }
            })
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerGetFileInfo(System.String,System.String)">
            <summary>
            [FileSystemManager.getFileInfo(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.getFileInfo.html)
            获取该小程序下的 本地临时文件 或 本地缓存文件 信息
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerGetSavedFileList(System.String,System.String)">
            <summary>
            [FileSystemManager.getSavedFileList(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.getSavedFileList.html)
            获取该小程序下已保存的本地缓存文件列表
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerOpen(System.String,System.String)">
            <summary>
            [FileSystemManager.open(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.open.html)
            需要基础库： `2.16.1`
            打开文件，返回文件描述符
            **示例代码**
            ```js
            const fs = wx.getFileSystemManager()
            fs.open({
            filePath: `${wx.env.USER_DATA_PATH}/hello.txt`,
            flag: 'a+',
            success(res) {
            console.log(res.fd)
            }
            })
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerRead(System.String,System.Byte[],System.Int32,System.String)">
            <summary>
            [FileSystemManager.read(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.read.html)
            需要基础库： `2.16.1`
            读文件
            **示例代码**
            ```js
            const fs = wx.getFileSystemManager()
            const ab = new ArrayBuffer(1024)
            // 打开文件
            fs.open({
            filePath: `${wx.env.USER_DATA_PATH}/hello.txt`,
            flag: 'a+',
            success(res) {
            // 读取文件到 ArrayBuffer 中
            fs.read({
            fd: res.fd,
            arrayBuffer: ab,
            length: 10,
            success(res) {
            console.log(res)
            }
            })
            }
            })
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerReadZipEntry(System.String,System.String)">
            <summary>
            [FileSystemManager.readZipEntry(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.readZipEntry.html)
            需要基础库： `2.17.3`
            读取压缩包内的文件
            **示例代码**
            ```js
            const fs = wx.getFileSystemManager()
            // 读取zip内某个或多个文件
            fs.readZipEntry({
            filePath: 'wxfile://from/to.zip',
            entries: [{
            path: 'some_folder/my_file.txt', // zip内文件路径
            encoding: 'utf-8', // 指定读取文件的字符编码，如果不传 encoding，则以 ArrayBuffer 格式读取文件的二进制内容
            position: 0, // 从文件指定位置开始读，如果不指定，则从文件头开始读。读取的范围应该是左闭右开区间 [position, position+length)。有效范围：[0, fileLength - 1]。单位：byte
            length: 10000, // 指定文件的长度，如果不指定，则读到文件末尾。有效范围：[1, fileLength]。单位：byte
            }, {
            path: 'other_folder/orther_file.txt', // zip内文件路径
            }],
            success(res) {
            console.log(res.entries)
            // res.entries === {
            //     'some_folder/my_file.txt': {
            //         errMsg: 'readZipEntry:ok',
            //         data: 'xxxxxx'
            //     },
            //     'other_folder/orther_file.txt': {
            //         data: (ArrayBuffer)
            //     }
            // }
            },
            fail(res) {
            console.log(res.errMsg)
            },
            })
            // 读取zip内所有文件。允许指定统一的encoding。position、length则不再允许指定，分别默认为0和文件长度
            fs.readZipEntry({
            filePath: 'wxfile://from/to.zip',
            entries: 'all'
            encoding: 'utf-8', // 统一指定读取文件的字符编码，如果不传 encoding，则以 ArrayBuffer 格式读取文件的二进制内容
            success(res) {
            console.log(res.entries)
            // res.entries === {
            //     'some_folder/my_file.txt': {
            //         errMsg: 'readZipEntry:ok',
            //         data: 'xxxxxx'
            //     },
            //     'other_folder/orther_file.txt': {
            //         errMsg: 'readZipEntry:ok',
            //         data: 'xxxxxx'
            //     }
            //  }
            },
            fail(res) {
            console.log(res.errMsg)
            },
            })
            ```
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerReaddir(System.String,System.String)" -->
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerRemoveSavedFile(System.String,System.String)">
            <summary>
            [FileSystemManager.removeSavedFile(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.removeSavedFile.html)
            删除该小程序下已保存的本地缓存文件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerRename(System.String,System.String)">
            <summary>
            [FileSystemManager.rename(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.rename.html)
            重命名文件。可以把文件从 oldPath 移动到 newPath
            **示例代码**
            ```js
            const fs = wx.getFileSystemManager()
            fs.rename({
            oldPath: `${wx.env.USER_DATA_PATH}/hello.txt`,
            newPath: `${wx.env.USER_DATA_PATH}/hello_new.txt`,
            success(res) {
            console.log(res)
            },
            fail(res) {
            console.error(res)
            }
            })
            // 同步接口
            try {
            const res = fs.renameSync(
            `${wx.env.USER_DATA_PATH}/hello.txt`,
            `${wx.env.USER_DATA_PATH}/hello_new.txt`
            )
            console.log(res)
            } catch(e) {
            console.error(e)
            }
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerRenameSync(System.String,System.String)">
            <summary>
            [FileSystemManager.renameSync(string oldPath, string newPath)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.renameSync.html)
            [FileSystemManager.rename](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.rename.html) 的同步版本
            **示例代码**
            ```js
            const fs = wx.getFileSystemManager()
            fs.rename({
            oldPath: `${wx.env.USER_DATA_PATH}/hello.txt`,
            newPath: `${wx.env.USER_DATA_PATH}/hello_new.txt`,
            success(res) {
            console.log(res)
            },
            fail(res) {
            console.error(res)
            }
            })
            // 同步接口
            try {
            const res = fs.renameSync(
            `${wx.env.USER_DATA_PATH}/hello.txt`,
            `${wx.env.USER_DATA_PATH}/hello_new.txt`
            )
            console.log(res)
            } catch(e) {
            console.error(e)
            }
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerSaveFile(System.String,System.String)">
            <summary>
            [FileSystemManager.saveFile(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.saveFile.html)
            保存临时文件到本地。此接口会移动临时文件，因此调用成功后，tempFilePath 将不可用。
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerTruncate(System.String,System.String)">
            <summary>
            [FileSystemManager.truncate(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.truncate.html)
            需要基础库： `2.16.1`
            对文件内容进行截断操作
            **示例代码**
            ```js
            const fs = wx.getFileSystemManager()
            fs.truncate({
            filePath: `${wx.env.USER_DATA_PATH}/hello.txt`,
            length: 10, // 从第10个字节开始截断
            success(res) {
            console.log(res)
            }
            })
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerUnzip(System.String,System.String)">
            <summary>
            [FileSystemManager.unzip(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.unzip.html)
            解压文件
            **示例代码**
            ```js
            const fs = wx.getFileSystemManager()
            fs.unzip({
            zipFilePath: `${wx.env.USER_DATA_PATH}/example.zip`,
            targetPath: '${wx.env.USER_DATA_PATH}/example',
            success(res) {
            console.log(res)
            },
            fail(res) {
            console.error(res)
            }
            })
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerWrite(System.String,System.Byte[],System.Int32,System.String)">
            <summary>
            [FileSystemManager.write(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.write.html)
            需要基础库： `2.16.1`
            写入文件
            **示例代码**
            ```js
            const fs = wx.getFileSystemManager()
            // 打开文件
            fs.open({
            filePath: `${wx.env.USER_DATA_PATH}/hello.txt`,
            flag: 'a+',
            success(res) {
            // 写入文件
            fs.write({
            fd: res.fd,
            data: 'some text',
            success(res) {
            console.log(res.bytesWritten)
            }
            })
            }
            })
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerReadSync(System.String,System.String)">
            <summary>
            [[ReadResult](https://developers.weixin.qq.com/minigame/dev/api/file/ReadResult.html) FileSystemManager.readSync(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.readSync.html)
            需要基础库： `2.16.1`
            读文件
            **示例代码**
            ```js
            const fs = wx.getFileSystemManager()
            const ab = new ArrayBuffer(1024)
            const fd = fs.openSync({
            filePath: `${wx.env.USER_DATA_PATH}/hello.txt`,
            flag: 'a+'
            })
            const res = fs.readSync({
            fd: fd,
            arrayBuffer: ab,
            length: 10
            })
            console.log(res)
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerFstatSync(System.String)">
            <summary>
            [[Stats](https://developers.weixin.qq.com/minigame/dev/api/file/Stats.html) FileSystemManager.fstatSync(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.fstatSync.html)
            需要基础库： `2.16.1`
            同步获取文件的状态信息
            **示例代码**
            ```js
            const fs = wx.getFileSystemManager()
            const fd = fs.openSync({
            filePath: `${wx.env.USER_DATA_PATH}/hello.txt`,
            flag: 'a+'
            })
            const stats = fs.fstatSync({fd: fd})
            console.log(stats)
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerStatSync(System.String,System.Boolean)">
            <summary>
            [[Stats](https://developers.weixin.qq.com/minigame/dev/api/file/Stats.html)|Array.&lt;[Stats](https://developers.weixin.qq.com/minigame/dev/api/file/Stats.html)&gt; FileSystemManager.statSync(string path, boolean recursive)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.statSync.html)
            [FileSystemManager.stat](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.stat.html) 的同步版本
            只支持传目录
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerWriteSync(System.String,System.Byte[],System.Int32)">
            <summary>
            [[WriteResult](https://developers.weixin.qq.com/minigame/dev/api/file/WriteResult.html) FileSystemManager.writeSync(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.writeSync.html)
            需要基础库： `2.16.1`
            同步写入文件
            **示例代码**
            ```js
            const fs = wx.getFileSystemManager()
            const fd = fs.openSync({
            filePath: `${wx.env.USER_DATA_PATH}/hello.txt`,
            flag: 'a+'
            })
            const res = fs.writeSync({
            fd: fd,
            data: 'some text'
            })
            console.log(res.bytesWritten)
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerOpenSync(System.String)">
            <summary>
            [string FileSystemManager.openSync(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.openSync.html)
            需要基础库： `2.16.1`
            同步打开文件，返回文件描述符
            **示例代码**
            ```js
            const fs = wx.getFileSystemManager()
            const fd = fs.openSync({
            filePath: `${wx.env.USER_DATA_PATH}/hello.txt`,
            flag: 'a+'
            })
            console.log(fd)
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerSaveFileSync(System.String,System.String)">
            <summary>
            [string FileSystemManager.saveFileSync(string tempFilePath, string filePath)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.saveFileSync.html)
            [FileSystemManager.saveFile](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.saveFile.html) 的同步版本
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerCloseSync(System.String)">
            <summary>
            [undefined FileSystemManager.closeSync(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.closeSync.html)
            需要基础库： `2.16.1`
            同步关闭文件
            **示例代码**
            ```js
            const fs = wx.getFileSystemManager()
            const fd = fs.openSync({
            filePath: `${wx.env.USER_DATA_PATH}/hello.txt`,
            flag: 'a+'
            })
            // 关闭文件
            fs.closeSync({fd: fd})
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerFtruncateSync(System.String)">
            <summary>
            [undefined FileSystemManager.ftruncateSync(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.ftruncateSync.html)
            需要基础库： `2.16.1`
            对文件内容进行截断操作
            **示例代码**
            ```js
            const fs = wx.getFileSystemManager()
            const fd = fs.openSync({
            filePath: `${wx.env.USER_DATA_PATH}/hello.txt`,
            flag: 'a+'
            })
            fs.ftruncateSync({
            fd: fd,
            length: 10 // 从第10个字节开始截断文件
            })
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXFileSystemManager.WX_FileSystemManagerTruncateSync(System.String)">
            <summary>
            [undefined FileSystemManager.truncateSync(Object object)](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.truncateSync.html)
            需要基础库： `2.16.1`
            对文件内容进行截断操作 (truncate 的同步版本)
            **示例代码**
            ```js
            const fs = wx.getFileSystemManager()
            fs.truncateSync({
            filePath: `${wx.env.USER_DATA_PATH}/hello.txt`,
            length: 10, // 从第10个字节开始截断
            })
            ```
            </summary>
        </member>
        <member name="T:WeChatWASM.WXGameRecorder">
            <summary>
            游戏对局回放
            </summary>
        </member>
        <member name="F:WeChatWASM.GameRecorderStartOption.bitrate">
            <summary>
            视频比特率（kbps），默认值1000，最大值 3000，最小值 600
            </summary>
        </member>
        <member name="F:WeChatWASM.GameRecorderStartOption.duration">
            <summary>
            视频的时长限制，单位为秒（s）。最大值 7200，最小值 5，到达指定时长后不会再录入。但还需要手动调用 [GameRecorder.stop()](https://developers.weixin.qq.com/minigame/dev/api/game-recorder/GameRecorder.stop.html) 来结束录制。
            </summary>
        </member>
        <member name="F:WeChatWASM.GameRecorderStartOption.fps">
            <summary>
            视频 fps
            </summary>
        </member>
        <member name="F:WeChatWASM.GameRecorderStartOption.gop">
            <summary>
            视频关键帧间隔
            </summary>
        </member>
        <member name="F:WeChatWASM.GameRecorderStartOption.hookBgm">
             <summary>
             需要基础库： `2.10.0`
            
             是否录制游戏音效（仅iOS支持）
             </summary>
        </member>
        <member name="T:WeChatWASM.WXInnerAudioContext">
            <summary>
            音频类，详见 https://developers.weixin.qq.com/minigame/dev/api/media/audio/InnerAudioContext.html
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext._HandleCallBack(System.String,System.String)">
            <summary>
            内部函数,请不要调用
            </summary>
            <param name="key"></param>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.autoplay">
            <summary>
            Gets or sets a value indicating whether 是否自动开始播放，默认为 false
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.src">
            <summary>
            Gets or sets 音频资源的地址，用于直接播放。可以设置为网络地址，或者unity中的本地路径如 Assets/xx.wav，运行时会自动和配置的音频地址前缀做拼接得到最终线上地址
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.needDownload">
            <summary>
            Gets or sets a value indicating whether 是否需要先下载后播放
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.startTime">
            <summary>
            Gets or sets 开始播放的位置（单位：s），默认为 0
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.loop">
            <summary>
            Gets or sets a value indicating whether 是否循环播放，默认为 false
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.volume">
            <summary>
            Gets or sets 音量。范围 0~1。默认为 1
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.mute">
            <summary>
            Gets or sets a value indicating whether 静音，静音时将音量设置为 0，取消静音则恢复原来的音量
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.playbackRate">
            <summary>
            Gets or sets 播放速度。范围 0.5-2.0，默认为 1。（Android 需要 6 及以上版本）
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.duration">
            <summary>
            Gets 当前音频的长度（单位 s）。只有在当前有合法的 src 时返回（只读）
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.currentTime">
            <summary>
            Gets 当前音频的播放位置（单位 s）。只有在当前有合法的 src 时返回，时间保留小数点后 6 位（只读）
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.buffered">
            <summary>
            Gets 当前音频的播放位置（单位 s）。只有在当前有合法的 src 时返回，时间保留小数点后 6 位（只读）
            </summary>
        </member>
        <member name="P:WeChatWASM.WXInnerAudioContext.paused">
            <summary>
            Gets a value indicating whether 当前是是否暂停或停止状态（只读）
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.Play">
            <summary>
            播放
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.Pause">
            <summary>
            暂停。暂停后的音频再播放会从暂停处开始播放
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.Stop">
            <summary>
            停止。停止后的音频再播放会从头开始播放。
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.Seek(System.Single)">
            <summary>
            跳转到指定位置
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.Destroy">
            <summary>
            销毁当前实例
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OnCanplay(System.Action)">
            <summary>
            监听音频进入可以播放状态的事件。但不保证后面可以流畅播放
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OffCanplay(System.Action)">
            <summary>
            监听音频进入可以播放状态的事件。但不保证后面可以流畅播放,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OnPlay(System.Action)">
            <summary>
            监听音频播放事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OffPlay(System.Action)">
            <summary>
            取消监听音频播放事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OnPause(System.Action)">
            <summary>
            监听音频暂停事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OffPause(System.Action)">
            <summary>
            取消监听音频暂停事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OnStop(System.Action)">
            <summary>
            监听音频暂停事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OffStop(System.Action)">
            <summary>
            取消监听音频暂停事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OnEnded(System.Action)">
            <summary>
            监听音频自然播放至结束的事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OffEnded(System.Action)">
            <summary>
            取消监听音频自然播放至结束的事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OnTimeUpdate(System.Action)">
            <summary>
            监听音频播放进度更新事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OffTimeUpdate(System.Action)">
            <summary>
            取消监听音频播放进度更新事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OnError(System.Action{WeChatWASM.InnerAudioContextOnErrorListenerResult})">
            <summary>
            监听音频播放错误事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OffError(System.Action{WeChatWASM.InnerAudioContextOnErrorListenerResult})">
            <summary>
            取消监听音频播放错误事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OnWaiting(System.Action)">
            <summary>
            监听音频加载中事件。当音频因为数据不足，需要停下来加载时会触发
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OffWaiting(System.Action)">
            <summary>
            取消监听音频加载中事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OnSeeking(System.Action)">
            <summary>
            监听音频进行跳转操作的事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OffSeeking(System.Action)">
            <summary>
            取消监听音频进行跳转操作的事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OnSeeked(System.Action)">
            <summary>
            监听音频完成跳转操作的事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInnerAudioContext.OffSeeked(System.Action)">
            <summary>
            取消监听音频完成跳转操作的事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInterstitialAd.Load(System.Action{WeChatWASM.WXTextResponse},System.Action{WeChatWASM.WXADErrorResponse})">
            <summary>
            加载插屏广告
            </summary>
        </member>
        <member name="M:WeChatWASM.WXInterstitialAd.OnClose(System.Action)">
            <summary>
            监听插屏广告关闭事件
            </summary>
            <param name="action">插屏广告关闭事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXInterstitialAd.OffClose(System.Action)">
            <summary>
            取消监听插屏广告关闭事件
            </summary>
            <param name="action">插屏广告关闭事件的回调函数</param>
        </member>
        <member name="T:WeChatWASM.WXLaunchOpera">
            <summary>
            微信小游戏启动剧情交互句柄
            </summary>
        </member>
        <member name="M:WeChatWASM.WXLaunchOpera.SetPercentage(System.Double)">
            <summary>
            设置游戏剩余 30% 外显进度情况
            </summary>
            <param name="value">取值 0.0 ～ 1.0 对应完整进度条的 70%～100%</param>
        </member>
        <member name="M:WeChatWASM.WXLaunchOpera.GetRunning">
            <summary>
            获取当前剧情组件的运行状态
            </summary>
            <returns>True 为正在运行；False 为未运行或已结束</returns>
        </member>
        <member name="M:WeChatWASM.WXLaunchOpera.End">
            <summary>
            提前结束正在运行的游戏
            </summary>
        </member>
        <member name="M:WeChatWASM.WXLaunchOpera.onEnd(System.Action{System.Boolean})">
            <summary>
            注册当剧情结束时的回调函数
            由于 C# 代码启动较晚，如果在开发者注册时剧情已经结束，则在注册该方法时会立即产生回调，注册的回调只会产生1次
            </summary>
            <param name="callback">回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXLaunchOpera.offEnd(System.Action{System.Boolean})">
            <summary>
            卸载当剧情结束时的回调函数
            </summary>
            <param name="callback">回调函数句柄</param>
        </member>
        <member name="M:WeChatWASM.WXLaunchOpera.SetGlobalVar(System.String,System.String)">
            <summary>
            设置剧情全局变量
            </summary>
            <param name="key">被设置的变量Key</param>
            <param name="value">被设置的变量Value</param>
        </member>
        <member name="M:WeChatWASM.WXLaunchOpera.GetGlobalVar(System.String)">
            <summary>
            读取剧情全局变量
            </summary>
            <param name="key">被读取的变量Key</param>
            <returns>返回剧情全局变量值，若返回 null 代表全局变量不存在。</returns>
        </member>
        <member name="M:WeChatWASM.WXLaunchOpera.IsPlayStoryLine(System.String)">
            <summary>
            判断是否播放了某条故事线
            </summary>
            <param name="uid">故事线uid</param>
            <returns>True 播放；False 未播放</returns>
        </member>
        <member name="M:WeChatWASM.WXLaunchOpera.todoJs(System.String,System.Object[])">
            <summary>
            运行JS函数
            </summary>
        </member>
        <member name="M:WeChatWASM.WXLogManager.WX_LogManagerDebug(System.String,System.String)">
            <summary>
            [LogManager.debug()](https://developers.weixin.qq.com/minigame/dev/api/base/debug/LogManager.debug.html)
            写 debug 日志
            </summary>
        </member>
        <member name="M:WeChatWASM.WXLogManager.WX_LogManagerInfo(System.String,System.String)">
            <summary>
            [LogManager.info()](https://developers.weixin.qq.com/minigame/dev/api/base/debug/LogManager.info.html)
            写 info 日志
            </summary>
        </member>
        <member name="M:WeChatWASM.WXLogManager.WX_LogManagerLog(System.String,System.String)">
            <summary>
            [LogManager.log()](https://developers.weixin.qq.com/minigame/dev/api/base/debug/LogManager.log.html)
            写 log 日志
            </summary>
        </member>
        <member name="M:WeChatWASM.WXLogManager.WX_LogManagerWarn(System.String,System.String)">
            <summary>
            [LogManager.warn()](https://developers.weixin.qq.com/minigame/dev/api/base/debug/LogManager.warn.html)
            写 warn 日志
            </summary>
        </member>
        <member name="T:WeChatWASM.WXLongCallBackHandler">
            <summary>
            长时间才返回的用这个
            </summary>
        </member>
        <member name="F:WeChatWASM.WXReadFileResponse.binData">
            <summary>
            如果返回二进制，则数据在这个字段
            </summary>
        </member>
        <member name="F:WeChatWASM.WXReadFileResponse.stringData">
            <summary>
            如果返回的是字符串，则数据在这个字段
            </summary>
        </member>
        <member name="F:WeChatWASM.WXRewardedVideoAdOnCloseResponse.isEnded">
            <summary>
            视频是否是在用户完整观看的情况下被关闭的,详见 https://developers.weixin.qq.com/minigame/dev/api/ad/RewardedVideoAd.onClose.html
            </summary>
        </member>
        <member name="T:WeChatWASM.WXCloudCallFunctionResponse">
            <summary>
            云函数回调 https://developers.weixin.qq.com/minigame/dev/wxcloud/reference-sdk-api/functions/Cloud.callFunction.html
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCloudCallFunctionResponse.result">
            <summary>
            后端返回的经过json序列化后的数据
            </summary>
        </member>
        <member name="F:WeChatWASM.ReferrerInfo.extraDataRaw">
            <summary>
            对应JS版里的 extraData，这里序列化成JSON字符串
            </summary>
        </member>
        <member name="F:WeChatWASM.WXUserInfo.nickName">
            <summary>
            详见 https://developers.weixin.qq.com/minigame/dev/api/open-api/user-info/UserInfo.html
            </summary>
        </member>
        <member name="T:WeChatWASM.WXCreateBannerAdParam">
            <summary>
            创建 banner 广告组件参数，参数详见 https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createBannerAd.html
            </summary>
        </member>
        <member name="T:WeChatWASM.WXCreateRewardedVideoAdParam">
            <summary>
            创建激励视频广告组件参数，参数详见 https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createRewardedVideoAd.html
            </summary>
        </member>
        <member name="T:WeChatWASM.WXCreateInterstitialAdParam">
            <summary>
            创建插屏广告组件参数,参数详见 https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createInterstitialAd.html
            </summary>
        </member>
        <member name="T:WeChatWASM.WXCreateCustomAdParam">
            <summary>
            创建原生模板广告参数，参数详见 https://developers.weixin.qq.com/minigame/dev/api/ad/wx.createCustomAd.html
            </summary>
        </member>
        <member name="T:WeChatWASM.CustomStyle">
            <summary>
            原生模板广告组件的样式
            </summary>
        </member>
        <member name="F:WeChatWASM.CustomStyle.left">
            <summary>
            原生模板广告组件的左上角横坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.CustomStyle.top">
            <summary>
            原生模板广告组件的左上角纵坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.CustomStyle.width">
            <summary>
            原生模板广告组件的宽度
            </summary>
        </member>
        <member name="T:WeChatWASM.WXToTempFilePathSyncParam">
            <summary>
            将当前 Canvas 保存为一个临时文件的同步版本,详见 https://developers.weixin.qq.com/minigame/dev/api/render/canvas/Canvas.toTempFilePathSync.html
            </summary>
        </member>
        <member name="F:WeChatWASM.ToTempFilePathParamSuccessCallbackResult.tempFilePath">
            <summary>
            canvas 生成的临时文件路径 (本地路径)
            </summary>
        </member>
        <member name="T:WeChatWASM.WXToTempFilePathParam">
            <summary>
            将当前 Canvas 保存为一个临时文件的异步版本,详见 https://developers.weixin.qq.com/minigame/dev/api/render/canvas/Canvas.toTempFilePath.html
            </summary>
        </member>
        <member name="F:WeChatWASM.WXToTempFilePathParam.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.WXToTempFilePathParam.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.WXToTempFilePathParam.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="T:WeChatWASM.AccessParam">
            <summary>
            https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.access.html
            </summary>
        </member>
        <member name="T:WeChatWASM.UnlinkParam">
            <summary>
            https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.unlink.html
            </summary>
        </member>
        <member name="T:WeChatWASM.MkdirParam">
            <summary>
            https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.mkdir.html
            </summary>
        </member>
        <member name="F:WeChatWASM.MkdirParam.dirPath">
            <summary>
            创建的目录路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.MkdirParam.recursive">
            <summary>
            是否在递归创建该目录的上级目录后再创建该目录。如果对应的上级目录已经存在，则不创建该上级目录。如 dirPath 为 a/b/c/d 且 recursive 为 true，将创建 a 目录，再在 a 目录下创建 b 目录，以此类推直至创建 a/b/c 目录下的 d 目录。
            </summary>
        </member>
        <member name="T:WeChatWASM.RmdirParam">
            <summary>
            https://developers.weixin.qq.com/miniprogram/dev/api/file/FileSystemManager.rmdir.html
            </summary>
        </member>
        <member name="F:WeChatWASM.RmdirParam.dirPath">
            <summary>
            要删除的目录路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.RmdirParam.recursive">
            <summary>
            是否递归删除目录。如果为 true，则删除该目录和该目录下的所有子目录以及文件。
            </summary>
        </member>
        <member name="T:WeChatWASM.CopyFileParam">
            <summary>
            https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.copyFile.html
            </summary>
        </member>
        <member name="F:WeChatWASM.TouchEvent.touches">
            <summary>
            当前所有触摸点的列表
            </summary>
        </member>
        <member name="F:WeChatWASM.TouchEvent.changedTouches">
            <summary>
            触发此次事件的触摸点列表,可以通过这个知道触发当前通知的事件的位置
            </summary>
        </member>
        <member name="F:WeChatWASM.TouchEvent.timeStamp">
            <summary>
            事件触发时的时间戳
            </summary>
        </member>
        <member name="T:WeChatWASM.CallFunctionParam">
            <summary>
            调用云函数 https://developers.weixin.qq.com/minigame/dev/wxcloud/reference-sdk-api/functions/Cloud.callFunction.html
            </summary>
        </member>
        <member name="F:WeChatWASM.CallFunctionParam.data">
            <summary>
            这里请将数据json序列化为字符串再赋值到data
            </summary>
        </member>
        <member name="T:WeChatWASM.CallFunctionInitParam">
            <summary>
            云函数初始化 https://developers.weixin.qq.com/minigame/dev/wxcloud/reference-sdk-api/init/client.init.html
            </summary>
        </member>
        <member name="F:WeChatWASM.CallFunctionInitParam.env">
            <summary>
            必填，环境ID，指定接下来调用 API 时访问哪个环境的云资源
            </summary>
        </member>
        <member name="F:WeChatWASM.CallFunctionInitParam.traceUser">
            <summary>
            是否在将用户访问记录到用户管理中，在控制台中可见
            </summary>
        </member>
        <member name="F:WeChatWASM.InnerAudioContextParam.src">
            <summary>
            音频资源的地址，用于直接播放。可以设置为网络地址，或者unity中的本地路径如 Assets/xx.wav，运行时会自动和配置的音频地址前缀做拼接得到最终线上地址
            </summary>
        </member>
        <member name="F:WeChatWASM.InnerAudioContextParam.loop">
            <summary>
            是否循环播放,默认为 false
            </summary>
        </member>
        <member name="F:WeChatWASM.InnerAudioContextParam.startTime">
            <summary>
            开始播放的位置（单位：s），默认为 0
            </summary>
        </member>
        <member name="F:WeChatWASM.InnerAudioContextParam.autoplay">
            <summary>
            是否自动开始播放，默认为 false
            </summary>
        </member>
        <member name="F:WeChatWASM.InnerAudioContextParam.volume">
            <summary>
            音量。范围 0~1。默认为 1
            </summary>
        </member>
        <member name="F:WeChatWASM.InnerAudioContextParam.playbackRate">
            <summary>
            播放速度。范围 0.5-2.0，默认为 1。
            </summary>
        </member>
        <member name="F:WeChatWASM.InnerAudioContextParam.needDownload">
            <summary>
            下载音频，设置为true后，会完全下载后再触发OnCanplay，方便后续音频复用，避免延迟
            </summary>
        </member>
        <member name="T:WeChatWASM.NetworkStatus">
            <summary>
            网络状态变化事件的回调参数，详见 https://developers.weixin.qq.com/minigame/dev/api/device/network/wx.onNetworkStatusChange.html
            </summary>
        </member>
        <member name="F:WeChatWASM.NetworkStatus.isConnected">
            <summary>
            当前是否有网络连接
            </summary>
        </member>
        <member name="F:WeChatWASM.NetworkStatus.networkType">
            <summary>
            网络类型
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteFileParam.filePath">
            <summary>
            要写入的文件路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteFileParam.data">
            <summary>
            要写入的二进制数据
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteFileParam.encoding">
            <summary>
            指定写入文件的字符编码
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteFileStringParam.filePath">
            <summary>
            要写入的文件路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteFileStringParam.data">
            <summary>
            要写入的二进制数据
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteFileStringParam.encoding">
            <summary>
            指定写入文件的字符编码
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadFileParam.filePath">
            <summary>
            要读取的文件的路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadFileParam.encoding">
            <summary>
            指定读取文件的字符编码，如果不传 encoding，则以 ArrayBuffer 格式读取文件的二进制内容
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadFileParam.position">
            <summary>
            从文件指定位置开始读，如果不指定，则从文件头开始读。读取的范围应该是左闭右开区间 [position, position+length)。有效范围：[0, fileLength - 1]。单位：byte
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadFileParam.length">
            <summary>
            指定文件的长度，如果不指定，则读到文件末尾。有效范围：[1, fileLength]。单位：byte
            </summary>
        </member>
        <member name="F:WeChatWASM.GetFontResponse.binData">
            <summary>
            如果返回二进制，则数据在这个字段
            </summary>
        </member>
        <member name="F:WeChatWASM.GetFontParam.fallbackUrl">
            <summary>
            要读取的文件的路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.WXGetFontCallback.bufferPtr">
            <summary>
            如果返回二进制，则数据在这个字段
            </summary>
        </member>
        <member name="F:WeChatWASM.WXGetFontCallback.byteLength">
            <summary>
            如果返回的是字符串，则数据在这个字段
            </summary>
        </member>
        <member name="F:WeChatWASM.WXStatInfo.mode">
            <summary>
             文件的类型和存取的权限，对应 POSIX stat.st_mode
            </summary>
        </member>
        <member name="F:WeChatWASM.WXStatInfo.size">
            <summary>
            文件大小，单位：B，对应 POSIX stat.st_size
            </summary>
        </member>
        <member name="F:WeChatWASM.WXStatInfo.lastAccessedTime">
            <summary>
            文件最近一次被存取或被执行的时间，UNIX 时间戳，对应 POSIX stat.st_atime
            </summary>
        </member>
        <member name="F:WeChatWASM.WXStatInfo.lastModifiedTime">
            <summary>
            文件最后一次被修改的时间，UNIX 时间戳，对应 POSIX stat.st_mtime
            </summary>
        </member>
        <member name="F:WeChatWASM.WXStat.path">
            <summary>
             文件的路径
            </summary>
        </member>
        <member name="F:WeChatWASM.WXStatOption.path">
            <summary>
            文件/目录路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.WXStatOption.recursive">
            <summary>
            是否递归获取目录下的每个文件的 Stats 信息    2.3.0
            </summary>
        </member>
        <member name="F:WeChatWASM.WXVideoCallback.position">
            <summary>
            当前的播放位置，单位为秒
            </summary>
        </member>
        <member name="F:WeChatWASM.WXVideoCallback.duration">
            <summary>
            视频的总时长，单位为秒
            </summary>
        </member>
        <member name="F:WeChatWASM.WXVideoCallback.buffered">
            <summary>
            当前的缓冲进度，缓冲进度区间为 (0~100]，100表示缓冲完成
            </summary>
        </member>
        <member name="F:WeChatWASM.WXVideoProgress.duration">
            <summary>
            视频的总时长，单位为秒
            </summary>
        </member>
        <member name="F:WeChatWASM.WXVideoProgress.buffered">
            <summary>
            当前的缓冲进度，缓冲进度区间为 (0~100]，100表示缓冲完成
            </summary>
        </member>
        <member name="F:WeChatWASM.WXVideoTimeUpdate.position">
            <summary>
            当前的播放位置，单位为秒
            </summary>
        </member>
        <member name="F:WeChatWASM.WXVideoTimeUpdate.duration">
            <summary>
            视频的总时长，单位为秒
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.x">
            <summary>
            视频的左上角横坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.y">
            <summary>
            视频的左上角纵坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.width">
            <summary>
            视频的宽度
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.height">
            <summary>
            视频的高度
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.src">
            <summary>
            视频的资源地址
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.poster">
            <summary>
            视频的封面
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.initialTime">
            <summary>
            视频的初始播放位置，单位为 s 秒
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.playbackRate">
            <summary>
            视频的播放速率，有效值有 0.5、0.8、1.0、1.25、1.5
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.live">
            <summary>
            视频是否为直播
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.objectFit">
            <summary>
            视频的缩放模式
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.controls">
            <summary>
            视频是否显示控件
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.showProgress">
            <summary>
            是否显示视频底部进度条
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.showProgressInControlMode">
            <summary>
            是否显示控制栏的进度条
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.backgroundColor">
            <summary>
            视频背景颜色
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.autoplay">
            <summary>
            视频是否自动播放
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.loop">
            <summary>
            视频是否是否循环播放
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.muted">
            <summary>
            视频是否禁音播放
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.obeyMuteSwitch">
            <summary>
            视频是否遵循系统静音开关设置（仅iOS）
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.enableProgressGesture">
            <summary>
            是否启用手势控制播放进度
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.enablePlayGesture">
            <summary>
            是否开启双击播放的手势
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.showCenterPlayBtn">
            <summary>
            是否显示视频中央的播放按钮
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateVideoParam.underGameView">
            <summary>
            视频是否显示在游戏画布之下
            </summary>
        </member>
        <member name="F:WeChatWASM.EnvVersion.develop">
            <summary>
            开发版
            </summary>
        </member>
        <member name="F:WeChatWASM.EnvVersion.trial">
            <summary>
            体验版
            </summary>
        </member>
        <member name="F:WeChatWASM.EnvVersion.release">
            <summary>
            正式版
            </summary>
        </member>
        <member name="F:WeChatWASM.GameClubButtonType.text">
            <summary>
            可以设置背景色和文本的按钮
            </summary>
        </member>
        <member name="F:WeChatWASM.GameClubButtonType.image">
            <summary>
            只能设置背景贴图的按钮，背景贴图会直接拉伸到按钮的宽高
            </summary>
        </member>
        <member name="F:WeChatWASM.GameClubButtonTextAlign.left">
            <summary>
            居左
            </summary>
        </member>
        <member name="F:WeChatWASM.GameClubButtonTextAlign.center">
            <summary>
            居中
            </summary>
        </member>
        <member name="F:WeChatWASM.GameClubButtonTextAlign.right">
            <summary>
            居右
            </summary>
        </member>
        <member name="T:WeChatWASM.WXCreateGameClubButtonParam">
            <summary>
            创建游戏圈参数，详见 https://developers.weixin.qq.com/minigame/dev/api/open-api/game-club/wx.createGameClubButton.html
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateGameClubButtonParam.type">
            <summary>
            必填，按钮类型
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateGameClubButtonParam.text">
            <summary>
            按钮上的文本，仅当 type 为 text 时有效
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateGameClubButtonParam.image">
            <summary>
            按钮的背景图片，仅当 type 为 image 时有效
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateGameClubButtonParam.style">
            <summary>
            必填，按钮的样式
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateGameClubButtonParam.icon">
            <summary>
            必填，游戏圈按钮的图标，仅当 object.type 参数为 image 时有效。
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateGameClubButtonParam.hasRedDot">
            <summary>
            需要基础库： `2.30.3` 当传递了openlink值时，此字段生效，决定创建的按钮是否需要拥有红点，默认为true
            </summary>
        </member>
        <member name="F:WeChatWASM.WXCreateGameClubButtonParam.openlink">
            <summary>
            需要基础库： `2.30.3` 设置后可以跳到对应的活动页面，具体进入mp设置-游戏设置-开始管理-游戏圈管理-由帖子的"游戏内跳转ID"生成
            </summary>
        </member>
        <member name="T:WeChatWASM.ReleaseResult">
            <summary>
            清理文件缓存的结果
            </summary>
        </member>
        <member name="F:WeChatWASM.ReleaseResult.noNeedRelease">
            <summary>
            无需清理，空间足够
            </summary>
        </member>
        <member name="F:WeChatWASM.ReleaseResult.exceedMax">
            <summary>
            超过最大存储容量，不清理
            </summary>
        </member>
        <member name="F:WeChatWASM.ReleaseResult.releaseSuccess">
            <summary>
            清理成功
            </summary>
        </member>
        <member name="T:WeChatWASM.LaunchEvent">
            <summary>
            启动数据
            </summary>
        </member>
        <member name="F:WeChatWASM.LaunchEvent.costTimeMs">
            <summary>
            当前阶段耗时
            </summary>
        </member>
        <member name="F:WeChatWASM.LaunchEvent.runTimeMs">
            <summary>
            自插件启动后总运行时间
            </summary>
        </member>
        <member name="F:WeChatWASM.LaunchEvent.needDownloadDataPackage">
            <summary>
            是否需要下载资源包
            </summary>
        </member>
        <member name="F:WeChatWASM.LaunchEvent.loadDataPackageFromSubpackage">
            <summary>
            首包资源是否作为小游戏代码分包下载
            </summary>
        </member>
        <member name="F:WeChatWASM.LaunchEvent.isVisible">
            <summary>
            当前阶段完成时是否处于前台
            </summary>
        </member>
        <member name="F:WeChatWASM.LaunchEvent.useCodeSplit">
            <summary>
            是否开启了代码分包
            </summary>
        </member>
        <member name="F:WeChatWASM.LaunchEvent.isHighPerformance">
            <summary>
            是否iOS高性能模式
            </summary>
        </member>
        <member name="T:WeChatWASM.LaunchEventType">
            <summary>
            启动阶段类型定义
            </summary>
        </member>
        <member name="F:WeChatWASM.LaunchEventType.launchPlugin">
            <summary>
            插件启动
            </summary>
        </member>
        <member name="F:WeChatWASM.LaunchEventType.loadWasm">
            <summary>
            下载wasm代码
            </summary>
        </member>
        <member name="F:WeChatWASM.LaunchEventType.compileWasm">
            <summary>
            编译wasm
            </summary>
        </member>
        <member name="F:WeChatWASM.LaunchEventType.loadAssets">
            <summary>
            下载首包资源
            </summary>
        </member>
        <member name="F:WeChatWASM.LaunchEventType.readAssets">
            <summary>
            读取首包资源
            </summary>
        </member>
        <member name="F:WeChatWASM.LaunchEventType.prepareGame">
            <summary>
            引擎初始化(callmain)
            </summary>
        </member>
        <member name="F:WeChatWASM.InnerAudioContextOnErrorListenerResult.errCode">
            <summary>
            可选值：
            - 10001: 系统错误;
            - 10002: 网络错误;
            - 10003: 文件错误;
            - 10004: 格式错误;
            - -1: 未知错误;
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadCompressedFileSyncOption.compressionAlgorithm">
            <summary>
            文件压缩类型，目前仅支持 'br'。
            可选值：
            - 'br': brotli压缩文件;
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadCompressedFileSyncOption.filePath">
            <summary>
            要读取的文件的路径 (本地用户文件或代码包文件)
            </summary>
        </member>
        <member name="F:WeChatWASM.FileError.errMsg">
            <summary>
            错误信息
            | 错误码 | 错误信息 | 说明 |
            | - | - | - |
            | 1300001 | operation not permitted | 操作不被允许（例如，filePath 预期传入一个文件而实际传入一个目录） |
            | 1300002 | no such file or directory ${path} | 文件/目录不存在，或者目标文件路径的上层目录不存在 |
            | 1300005 | Input/output error | 输入输出流不可用 |
            | 1300009 | bad file descriptor | 无效的文件描述符 |
            | 1300013 | permission denied | 权限错误，文件是只读或只写 |
            | 1300014 | Path permission denied | 传入的路径没有权限 |
            | 1300020 | not a directory | dirPath 指定路径不是目录，常见于指定的写入路径的上级路径为一个文件的情况 |
            | 1300021 | Is a directory | 指定路径是一个目录 |
            | 1300022 | Invalid argument | 无效参数，可以检查length或offset是否越界 |
            | 1300036 | File name too long | 文件名过长 |
            | 1300066 | directory not empty | 目录不为空 |
            | 1300201 | system error | 系统接口调用失败 |
            | 1300202 | the maximum size of the file storage limit is exceeded | 存储空间不足，或文件大小超出上限（上限100M） |
            | 1300203 | base64 encode error | 字符编码转换失败（例如 base64 格式错误） |
            | 1300300 | sdcard not mounted | android sdcard 挂载失败 |
            | 1300301 | unable to open as fileType | 无法以fileType打开文件 |
            | 1301000 | permission denied, cannot access file path | 目标路径无访问权限（usr目录） |
            | 1301002 | data to write is empty | 写入数据为空 |
            | 1301003 | illegal operation on a directory | 不可对目录进行此操作（例如，指定的 filePath 是一个已经存在的目录） |
            | 1301004 | illegal operation on a package directory | 不可对代码包目录进行此操作 |
            | 1301005 | file already exists ${dirPath} | 已有同名文件或目录 |
            | 1301006 | value of length is out of range | 传入的 length 不合法 |
            | 1301007 | value of offset is out of range | 传入的 offset 不合法 |
            | 1301009 | value of position is out of range | position值越界 |
            | 1301100 | store directory is empty | store目录为空 |
            | 1301102 | unzip open file fail | 压缩文件打开失败 |
            | 1301103 | unzip entry fail | 解压单个文件失败 |
            | 1301104 | unzip fail | 解压失败 |
            | 1301111 | brotli decompress fail | brotli解压失败（例如，指定的 compressionAlgorithm 与文件实际压缩格式不符） |
            | 1301112 | tempFilePath file not exist | 指定的 tempFilePath 找不到文件 |
            | 1302001 | fail permission denied | 指定的 fd 路径没有读权限/没有写权限 |
            | 1302002 | excced max concurrent fd limit | fd数量已达上限 |
            | 1302003 | invalid flag | 无效的flag |
            | 1302004 | permission denied when open using flag | 无法使用flag标志打开文件 |
            | 1302005 | array buffer does not exist | 未传入arrayBuffer |
            | 1302100 | array buffer is readonly | arrayBuffer只读 |
            </summary>
        </member>
        <member name="F:WeChatWASM.FileError.errCode">
            <summary>
            错误码
            | 错误码 | 错误信息 | 说明 |
            | - | - | - |
            | 1300001 | operation not permitted | 操作不被允许（例如，filePath 预期传入一个文件而实际传入一个目录） |
            | 1300002 | no such file or directory ${path} | 文件/目录不存在，或者目标文件路径的上层目录不存在 |
            | 1300005 | Input/output error | 输入输出流不可用 |
            | 1300009 | bad file descriptor | 无效的文件描述符 |
            | 1300013 | permission denied | 权限错误，文件是只读或只写 |
            | 1300014 | Path permission denied | 传入的路径没有权限 |
            | 1300020 | not a directory | dirPath 指定路径不是目录，常见于指定的写入路径的上级路径为一个文件的情况 |
            | 1300021 | Is a directory | 指定路径是一个目录 |
            | 1300022 | Invalid argument | 无效参数，可以检查length或offset是否越界 |
            | 1300036 | File name too long | 文件名过长 |
            | 1300066 | directory not empty | 目录不为空 |
            | 1300201 | system error | 系统接口调用失败 |
            | 1300202 | the maximum size of the file storage limit is exceeded | 存储空间不足，或文件大小超出上限（上限100M） |
            | 1300203 | base64 encode error | 字符编码转换失败（例如 base64 格式错误） |
            | 1300300 | sdcard not mounted | android sdcard 挂载失败 |
            | 1300301 | unable to open as fileType | 无法以fileType打开文件 |
            | 1301000 | permission denied, cannot access file path | 目标路径无访问权限（usr目录） |
            | 1301002 | data to write is empty | 写入数据为空 |
            | 1301003 | illegal operation on a directory | 不可对目录进行此操作（例如，指定的 filePath 是一个已经存在的目录） |
            | 1301004 | illegal operation on a package directory | 不可对代码包目录进行此操作 |
            | 1301005 | file already exists ${dirPath} | 已有同名文件或目录 |
            | 1301006 | value of length is out of range | 传入的 length 不合法 |
            | 1301007 | value of offset is out of range | 传入的 offset 不合法 |
            | 1301009 | value of position is out of range | position值越界 |
            | 1301100 | store directory is empty | store目录为空 |
            | 1301102 | unzip open file fail | 压缩文件打开失败 |
            | 1301103 | unzip entry fail | 解压单个文件失败 |
            | 1301104 | unzip fail | 解压失败 |
            | 1301111 | brotli decompress fail | brotli解压失败（例如，指定的 compressionAlgorithm 与文件实际压缩格式不符） |
            | 1301112 | tempFilePath file not exist | 指定的 tempFilePath 找不到文件 |
            | 1302001 | fail permission denied | 指定的 fd 路径没有读权限/没有写权限 |
            | 1302002 | excced max concurrent fd limit | fd数量已达上限 |
            | 1302003 | invalid flag | 无效的flag |
            | 1302004 | permission denied when open using flag | 无法使用flag标志打开文件 |
            | 1302005 | array buffer does not exist | 未传入arrayBuffer |
            | 1302100 | array buffer is readonly | arrayBuffer只读 |
            </summary>
        </member>
        <member name="F:WeChatWASM.FileSystemManagerCloseOption.fd">
            <summary>
            需要被关闭的文件描述符。fd 通过 [FileSystemManager.open](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.open.html) 或 [FileSystemManager.openSync](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.openSync.html) 接口获得
            </summary>
        </member>
        <member name="F:WeChatWASM.CopyFileOption.destPath">
            <summary>
            目标文件路径，支持本地路径
            </summary>
        </member>
        <member name="F:WeChatWASM.CopyFileOption.srcPath">
            <summary>
            源文件路径，支持本地路径
            </summary>
        </member>
        <member name="F:WeChatWASM.CopyFileOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.CopyFileOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.CopyFileOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.FstatOption.fd">
            <summary>
            文件描述符。fd 通过 [FileSystemManager.open](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.open.html) 或 [FileSystemManager.openSync](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.openSync.html) 接口获得
            </summary>
        </member>
        <member name="F:WeChatWASM.FstatSuccessCallbackResult.stats">
            <summary>
            [Stats](https://developers.weixin.qq.com/minigame/dev/api/file/Stats.html)
            Stats 对象，包含了文件的状态信息
            </summary>
        </member>
        <member name="F:WeChatWASM.Stats.lastAccessedTime">
            <summary>
            文件最近一次被存取或被执行的时间，UNIX 时间戳，对应 POSIX stat.st_atime
            </summary>
        </member>
        <member name="F:WeChatWASM.Stats.lastModifiedTime">
            <summary>
            文件最后一次被修改的时间，UNIX 时间戳，对应 POSIX stat.st_mtime
            </summary>
        </member>
        <member name="F:WeChatWASM.Stats.mode">
            <summary>
            文件的类型和存取的权限，对应 POSIX stat.st_mode
            </summary>
        </member>
        <member name="F:WeChatWASM.Stats.size">
            <summary>
            文件大小，单位：B，对应 POSIX stat.st_size
            </summary>
        </member>
        <member name="M:WeChatWASM.Stats.isDirectory">
            <summary>
            判断当前文件是否一个目录
            </summary>
        </member>
        <member name="M:WeChatWASM.Stats.isFile">
            <summary>
            判断当前文件是否一个普通文件
            </summary>
        </member>
        <member name="F:WeChatWASM.FtruncateOption.fd">
            <summary>
            文件描述符。fd 通过 [FileSystemManager.open](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.open.html) 或 [FileSystemManager.openSync](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.openSync.html) 接口获得
            </summary>
        </member>
        <member name="F:WeChatWASM.FtruncateOption.length">
            <summary>
            截断位置，默认0。如果 length 小于文件长度（单位：字节），则只有前面 length 个字节会保留在文件中，其余内容会被删除；如果 length 大于文件长度，则会对其进行扩展，并且扩展部分将填充空字节（'\0'）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetFileInfoOption.filePath">
            <summary>
            要读取的文件路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.GetFileInfoSuccessCallbackResult.size">
            <summary>
            文件大小，以字节为单位
            </summary>
        </member>
        <member name="F:WeChatWASM.GetSavedFileListSuccessCallbackResult.fileList">
            <summary>
            文件数组
            </summary>
        </member>
        <member name="F:WeChatWASM.FileItem.createTime">
            <summary>
            文件保存时的时间戳，从1970/01/01 08:00:00 到当前时间的秒数
            </summary>
        </member>
        <member name="F:WeChatWASM.FileItem.filePath">
            <summary>
            文件路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.FileItem.size">
            <summary>
            本地文件大小，以字节为单位
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenOption.filePath">
            <summary>
            文件路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenOption.flag">
            <summary>
            文件系统标志，默认值: 'r'
            可选值：
            - 'a': 打开文件用于追加。 如果文件不存在，则创建该文件;
            - 'ax': 类似于 'a'，但如果路径存在，则失败;
            - 'a+': 打开文件用于读取和追加。 如果文件不存在，则创建该文件;
            - 'ax+': 类似于 'a+'，但如果路径存在，则失败;
            - 'as': 打开文件用于追加（在同步模式中）。 如果文件不存在，则创建该文件;
            - 'as+': 打开文件用于读取和追加（在同步模式中）。 如果文件不存在，则创建该文件;
            - 'r': 打开文件用于读取。 如果文件不存在，则会发生异常;
            - 'r+': 打开文件用于读取和写入。 如果文件不存在，则会发生异常;
            - 'w': 打开文件用于写入。 如果文件不存在则创建文件，如果文件存在则截断文件;
            - 'wx': 类似于 'w'，但如果路径存在，则失败;
            - 'w+': 打开文件用于读取和写入。 如果文件不存在则创建文件，如果文件存在则截断文件;
            - 'wx+': 类似于 'w+'，但如果路径存在，则失败;
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenSuccessCallbackResult.fd">
            <summary>
            文件描述符
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadOption.arrayBuffer">
            <summary>
            数据写入的缓冲区，必须是 ArrayBuffer 实例
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadOption.fd">
            <summary>
            文件描述符。fd 通过 [FileSystemManager.open](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.open.html) 或 [FileSystemManager.openSync](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.openSync.html) 接口获得
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadOption.length">
            <summary>
            要从文件中读取的字节数，默认0
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadOption.offset">
            <summary>
            缓冲区中的写入偏移量，默认0
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadOption.position">
            <summary>
            文件读取的起始位置，如不传或传 null，则会从当前文件指针的位置读取。如果 position 是正整数，则文件指针位置会保持不变并从 position 读取文件。
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadSuccessCallbackResult.arrayBuffer">
            <summary>
            被写入的缓存区的对象，即接口入参的 arrayBuffer
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadSuccessCallbackResult.bytesRead">
            <summary>
            实际读取的字节数
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadCompressedFileOption.compressionAlgorithm">
            <summary>
            文件压缩类型，目前仅支持 'br'。
            可选值：
            - 'br': brotli压缩文件;
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadCompressedFileOption.filePath">
            <summary>
            要读取的文件的路径 (本地用户文件或代码包文件)
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadCompressedFileSuccessCallbackResult.data">
            <summary>
            文件内容
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadZipEntryOptionString.entries">
            <summary>
            要读取的压缩包内的文件列表（当传入"all" 时表示读取压缩包内所有文件）
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadZipEntryOptionString.filePath">
            <summary>
            要读取的压缩包的路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadZipEntryOptionString.encoding">
            <summary>
            统一指定读取文件的字符编码，只在 entries 值为"all"时有效。如果 entries 值为"all"且不传 encoding，则以 ArrayBuffer 格式读取文件的二进制内容
            可选值：
            - 'ascii': ;
            - 'base64': ;
            - 'binary': ;
            - 'hex': ;
            - 'ucs2': 以小端序读取;
            - 'ucs-2': 以小端序读取;
            - 'utf16le': 以小端序读取;
            - 'utf-16le': 以小端序读取;
            - 'utf-8': ;
            - 'utf8': ;
            - 'latin1': ;
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadZipEntryOption.entries">
            <summary>
            要读取的压缩包内的文件列表（当传入"all" 时表示读取压缩包内所有文件）
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadZipEntryOption.filePath">
            <summary>
            要读取的压缩包的路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadZipEntryOption.encoding">
            <summary>
            统一指定读取文件的字符编码，只在 entries 值为"all"时有效。如果 entries 值为"all"且不传 encoding，则以 ArrayBuffer 格式读取文件的二进制内容
            可选值：
            - 'ascii': ;
            - 'base64': ;
            - 'binary': ;
            - 'hex': ;
            - 'ucs2': 以小端序读取;
            - 'ucs-2': 以小端序读取;
            - 'utf16le': 以小端序读取;
            - 'utf-16le': 以小端序读取;
            - 'utf-8': ;
            - 'utf8': ;
            - 'latin1': ;
            </summary>
        </member>
        <member name="F:WeChatWASM.EntryItem.path">
            <summary>
            压缩包内文件路径
            </summary>
        </member>
        <member name="F:WeChatWASM.EntryItem.encoding">
            <summary>
            指定读取文件的字符编码，如果不传 encoding，则以 ArrayBuffer 格式读取文件的二进制内容
            可选值：
            - 'ascii': ;
            - 'base64': ;
            - 'binary': ;
            - 'hex': ;
            - 'ucs2': 以小端序读取;
            - 'ucs-2': 以小端序读取;
            - 'utf16le': 以小端序读取;
            - 'utf-16le': 以小端序读取;
            - 'utf-8': ;
            - 'utf8': ;
            - 'latin1': ;
            </summary>
        </member>
        <member name="F:WeChatWASM.EntryItem.length">
            <summary>
            指定文件的长度，如果不指定，则读到文件末尾。有效范围：[1, fileLength]。单位：byte
            </summary>
        </member>
        <member name="F:WeChatWASM.EntryItem.position">
            <summary>
            从文件指定位置开始读，如果不指定，则从文件头开始读。读取的范围应该是左闭右开区间 [position, position+length)。有效范围：[0, fileLength - 1]。单位：byte
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadZipEntrySuccessCallbackResult.entries">
            <summary>
            文件读取结果。res.entries 是一个对象，key是文件路径，value是一个对象 FileItem ，表示该文件的读取结果。每个 FileItem 包含 data （文件内容） 和 errMsg （错误信息） 属性。
            </summary>
        </member>
        <member name="F:WeChatWASM.ZipFileItem.data">
            <summary>
            文件内容
            </summary>
        </member>
        <member name="F:WeChatWASM.ZipFileItem.errMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:WeChatWASM.ReaddirOption.dirPath">
            <summary>
            要读取的目录路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.ReaddirSuccessCallbackResult.files">
            <summary>
            指定目录下的文件名数组。
            </summary>
        </member>
        <member name="F:WeChatWASM.RemoveSavedFileOption.filePath">
            <summary>
            需要删除的文件路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.RenameOption.newPath">
            <summary>
            新文件路径，支持本地路径
            </summary>
        </member>
        <member name="F:WeChatWASM.RenameOption.oldPath">
            <summary>
            源文件路径，支持本地路径
            </summary>
        </member>
        <member name="F:WeChatWASM.SaveFileOption.tempFilePath">
            <summary>
            临时存储文件路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.SaveFileOption.filePath">
            <summary>
            要存储的文件路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.SaveFileSuccessCallbackResult.savedFilePath">
            <summary>
            存储后的文件路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.StatOption.path">
            <summary>
            文件/目录路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.StatOption.recursive">
            <summary>
            需要基础库： `2.3.0`
            是否递归获取目录下的每个文件的 Stats 信息
            </summary>
        </member>
        <member name="F:WeChatWASM.StatSuccessCallbackResult.stats">
            <summary>
            [Stats](https://developers.weixin.qq.com/minigame/dev/api/file/Stats.html)|Array.&lt;[Stats](https://developers.weixin.qq.com/minigame/dev/api/file/Stats.html)&gt;
            当 recursive 为 false 时，res.stats 是一个 Stats 对象。当 recursive 为 true 且 path 是一个目录的路径时，res.stats 是一个 Array，数组的每一项是一个对象，每个对象包含 path 和 stats。
            </summary>
        </member>
        <member name="F:WeChatWASM.TruncateOption.filePath">
            <summary>
            要截断的文件路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.TruncateOption.length">
            <summary>
            截断位置，默认0。如果 length 小于文件长度（字节），则只有前面 length 个字节会保留在文件中，其余内容会被删除；如果 length 大于文件长度，则会对其进行扩展，并且扩展部分将填充空字节（'\0'）
            </summary>
        </member>
        <member name="F:WeChatWASM.UnlinkOption.filePath">
            <summary>
            要删除的文件路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.UnzipOption.targetPath">
            <summary>
            目标目录路径, 支持本地路径
            </summary>
        </member>
        <member name="F:WeChatWASM.UnzipOption.zipFilePath">
            <summary>
            源文件路径，支持本地路径, 只可以是 zip 压缩文件
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteOption.data">
            <summary>
            写入的内容，类型为 String 或 ArrayBuffer
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteOption.fd">
            <summary>
            文件描述符。fd 通过 [FileSystemManager.open](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.open.html) 或 [FileSystemManager.openSync](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.openSync.html) 接口获得
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteOption.encoding">
            <summary>
            只在 data 类型是 String 时有效，指定写入文件的字符编码，默认为 utf8
            可选值：
            - 'ascii': ;
            - 'base64': ;
            - 'binary': ;
            - 'hex': ;
            - 'ucs2': 以小端序读取;
            - 'ucs-2': 以小端序读取;
            - 'utf16le': 以小端序读取;
            - 'utf-16le': 以小端序读取;
            - 'utf-8': ;
            - 'utf8': ;
            - 'latin1': ;
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteOption.length">
            <summary>
            只在 data 类型是 ArrayBuffer 时有效，指定要写入的字节数，默认为 arrayBuffer 从0开始偏移 offset 个字节后剩余的字节数
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteOption.offset">
            <summary>
            只在 data 类型是 ArrayBuffer 时有效，决定 arrayBuffe 中要被写入的部位，即 arrayBuffer 中的索引，默认0
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteOption.position">
            <summary>
            指定文件开头的偏移量，即数据要被写入的位置。当 position 不传或者传入非 Number 类型的值时，数据会被写入当前指针所在位置。
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteStringOption.data">
            <summary>
            写入的内容，类型为 String 或 ArrayBuffer
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteStringOption.fd">
            <summary>
            文件描述符。fd 通过 [FileSystemManager.open](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.open.html) 或 [FileSystemManager.openSync](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.openSync.html) 接口获得
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteStringOption.encoding">
            <summary>
            只在 data 类型是 String 时有效，指定写入文件的字符编码，默认为 utf8
            可选值：
            - 'ascii': ;
            - 'base64': ;
            - 'binary': ;
            - 'hex': ;
            - 'ucs2': 以小端序读取;
            - 'ucs-2': 以小端序读取;
            - 'utf16le': 以小端序读取;
            - 'utf-16le': 以小端序读取;
            - 'utf-8': ;
            - 'utf8': ;
            - 'latin1': ;
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteStringOption.length">
            <summary>
            只在 data 类型是 ArrayBuffer 时有效，指定要写入的字节数，默认为 arrayBuffer 从0开始偏移 offset 个字节后剩余的字节数
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteStringOption.offset">
            <summary>
            只在 data 类型是 ArrayBuffer 时有效，决定 arrayBuffe 中要被写入的部位，即 arrayBuffer 中的索引，默认0
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteStringOption.position">
            <summary>
            指定文件开头的偏移量，即数据要被写入的位置。当 position 不传或者传入非 Number 类型的值时，数据会被写入当前指针所在位置。
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteSuccessCallbackResult.bytesWritten">
            <summary>
            实际被写入到文件中的字节数（注意，被写入的字节数不一定与被写入的字符串字符数相同）
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadSyncOption.arrayBuffer">
            <summary>
            数据写入的缓冲区，必须是 ArrayBuffer 实例
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadSyncOption.fd">
            <summary>
            文件描述符。fd 通过 [FileSystemManager.open](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.open.html) 或 [FileSystemManager.openSync](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.openSync.html) 接口获得
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadSyncOption.length">
            <summary>
            要从文件中读取的字节数，默认0
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadSyncOption.offset">
            <summary>
            缓冲区中的写入偏移量，默认0
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadSyncOption.position">
            <summary>
            文件读取的起始位置，如不传或传 null，则会从当前文件指针的位置读取。如果 position 是正整数，则文件指针位置会保持不变并从 position 读取文件。
            </summary>
        </member>
        <member name="F:WeChatWASM.FstatSyncOption.fd">
            <summary>
            文件描述符。fd 通过 [FileSystemManager.open](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.open.html) 或 [FileSystemManager.openSync](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.openSync.html) 接口获得
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteSyncOption.data">
            <summary>
            写入的内容，类型为 String 或 ArrayBuffer
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteSyncOption.fd">
            <summary>
            文件描述符。fd 通过 [FileSystemManager.open](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.open.html) 或 [FileSystemManager.openSync](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.openSync.html) 接口获得
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteSyncOption.encoding">
            <summary>
            只在 data 类型是 String 时有效，指定写入文件的字符编码，默认为 utf8
            可选值：
            - 'ascii': ;
            - 'base64': ;
            - 'binary': ;
            - 'hex': ;
            - 'ucs2': 以小端序读取;
            - 'ucs-2': 以小端序读取;
            - 'utf16le': 以小端序读取;
            - 'utf-16le': 以小端序读取;
            - 'utf-8': ;
            - 'utf8': ;
            - 'latin1': ;
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteSyncOption.length">
            <summary>
            只在 data 类型是 ArrayBuffer 时有效，指定要写入的字节数，默认为 arrayBuffer 从0开始偏移 offset 个字节后剩余的字节数
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteSyncOption.offset">
            <summary>
            只在 data 类型是 ArrayBuffer 时有效，决定 arrayBuffe 中要被写入的部位，即 arrayBuffer 中的索引，默认0
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteSyncOption.position">
            <summary>
            指定文件开头的偏移量，即数据要被写入的位置。当 position 不传或者传入非 Number 类型的值时，数据会被写入当前指针所在位置。
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteSyncStringOption.data">
            <summary>
            写入的内容，类型为 String 或 ArrayBuffer
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteSyncStringOption.fd">
            <summary>
            文件描述符。fd 通过 [FileSystemManager.open](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.open.html) 或 [FileSystemManager.openSync](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.openSync.html) 接口获得
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteSyncStringOption.encoding">
            <summary>
            只在 data 类型是 String 时有效，指定写入文件的字符编码，默认为 utf8
            可选值：
            - 'ascii': ;
            - 'base64': ;
            - 'binary': ;
            - 'hex': ;
            - 'ucs2': 以小端序读取;
            - 'ucs-2': 以小端序读取;
            - 'utf16le': 以小端序读取;
            - 'utf-16le': 以小端序读取;
            - 'utf-8': ;
            - 'utf8': ;
            - 'latin1': ;
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteSyncStringOption.length">
            <summary>
            只在 data 类型是 ArrayBuffer 时有效，指定要写入的字节数，默认为 arrayBuffer 从0开始偏移 offset 个字节后剩余的字节数
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteSyncStringOption.offset">
            <summary>
            只在 data 类型是 ArrayBuffer 时有效，决定 arrayBuffe 中要被写入的部位，即 arrayBuffer 中的索引，默认0
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteSyncStringOption.position">
            <summary>
            指定文件开头的偏移量，即数据要被写入的位置。当 position 不传或者传入非 Number 类型的值时，数据会被写入当前指针所在位置。
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenSyncOption.filePath">
            <summary>
            文件路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenSyncOption.flag">
            <summary>
            文件系统标志，默认值: 'r'
            可选值：
            - 'a': 打开文件用于追加。 如果文件不存在，则创建该文件;
            - 'ax': 类似于 'a'，但如果路径存在，则失败;
            - 'a+': 打开文件用于读取和追加。 如果文件不存在，则创建该文件;
            - 'ax+': 类似于 'a+'，但如果路径存在，则失败;
            - 'as': 打开文件用于追加（在同步模式中）。 如果文件不存在，则创建该文件;
            - 'as+': 打开文件用于读取和追加（在同步模式中）。 如果文件不存在，则创建该文件;
            - 'r': 打开文件用于读取。 如果文件不存在，则会发生异常;
            - 'r+': 打开文件用于读取和写入。 如果文件不存在，则会发生异常;
            - 'w': 打开文件用于写入。 如果文件不存在则创建文件，如果文件存在则截断文件;
            - 'wx': 类似于 'w'，但如果路径存在，则失败;
            - 'w+': 打开文件用于读取和写入。 如果文件不存在则创建文件，如果文件存在则截断文件;
            - 'wx+': 类似于 'w+'，但如果路径存在，则失败;
            </summary>
        </member>
        <member name="F:WeChatWASM.CloseSyncOption.fd">
            <summary>
            需要被关闭的文件描述符。fd 通过 [FileSystemManager.open](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.open.html) 或 [FileSystemManager.openSync](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.openSync.html) 接口获得
            </summary>
        </member>
        <member name="F:WeChatWASM.FtruncateSyncOption.fd">
            <summary>
            文件描述符。fd 通过 [FileSystemManager.open](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.open.html) 或 [FileSystemManager.openSync](https://developers.weixin.qq.com/minigame/dev/api/file/FileSystemManager.openSync.html) 接口获得
            </summary>
        </member>
        <member name="F:WeChatWASM.FtruncateSyncOption.length">
            <summary>
            截断位置，默认0。如果 length 小于文件长度（单位：字节），则只有前面 length 个字节会保留在文件中，其余内容会被删除；如果 length 大于文件长度，则会对其进行扩展，并且扩展部分将填充空字节（'\0'）
            </summary>
        </member>
        <member name="F:WeChatWASM.TruncateSyncOption.filePath">
            <summary>
            要截断的文件路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.TruncateSyncOption.length">
            <summary>
            截断位置，默认0。如果 length 小于文件长度（字节），则只有前面 length 个字节会保留在文件中，其余内容会被删除；如果 length 大于文件长度，则会对其进行扩展，并且扩展部分将填充空字节（'\0'）
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadResult.arrayBuffer">
            <summary>
            被写入的缓存区的对象，即接口入参的 arrayBuffer
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadResult.bytesRead">
            <summary>
            实际读取的字节数
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteResult.bytesWritten">
            <summary>
            实际被写入到文件中的字节数（注意，被写入的字节数不一定与被写入的字符串字符数相同）
            </summary>
        </member>
        <member name="F:WeChatWASM.PrivacyAuthorizeResolveOption.eventString">
            <summary>
            可以发送的事件，曝光:"exposureAuthorization"，同意:"agree"，拒绝:"disagree"
            </summary>
        </member>
        <member name="F:WeChatWASM.TCPSocketBindWifiOption.BSSID">
            <summary>
            当前 wifi 网络的 BSSID ，可通过 wx.getConnectedWifi 获取
            </summary>
        </member>
        <member name="F:WeChatWASM.TCPSocketConnectOption.address">
            <summary>
            套接字要连接的地址
            </summary>
        </member>
        <member name="F:WeChatWASM.TCPSocketConnectOption.port">
            <summary>
            套接字要连接的端口
            </summary>
        </member>
        <member name="F:WeChatWASM.TCPSocketConnectOption.timeout">
            <summary>
            套接字要连接的超时时间，默认为 2s
            </summary>
        </member>
        <member name="F:WeChatWASM.TCPSocketOnMessageListenerResult.localInfo">
            <summary>
            接收端地址信息
            </summary>
        </member>
        <member name="F:WeChatWASM.TCPSocketOnMessageListenerResult.message">
            <summary>
            收到的消息
            </summary>
        </member>
        <member name="F:WeChatWASM.TCPSocketOnMessageListenerResult.remoteInfo">
            <summary>
            发送端地址信息
            </summary>
        </member>
        <member name="F:WeChatWASM.LocalInfo.address">
            <summary>
            接收消息的 socket 的地址
            </summary>
        </member>
        <member name="F:WeChatWASM.LocalInfo.family">
            <summary>
            使用的协议族，为 IPv4 或者 IPv6
            </summary>
        </member>
        <member name="F:WeChatWASM.LocalInfo.port">
            <summary>
            端口号
            </summary>
        </member>
        <member name="F:WeChatWASM.RemoteInfo.address">
            <summary>
            发送消息的 socket 的地址
            </summary>
        </member>
        <member name="F:WeChatWASM.RemoteInfo.family">
            <summary>
            使用的协议族，为 IPv4 或者 IPv6
            </summary>
        </member>
        <member name="F:WeChatWASM.RemoteInfo.port">
            <summary>
            端口号
            </summary>
        </member>
        <member name="F:WeChatWASM.UDPSocketConnectOption.address">
            <summary>
            要发消息的地址
            </summary>
        </member>
        <member name="F:WeChatWASM.UDPSocketConnectOption.port">
            <summary>
            要发送消息的端口号
            </summary>
        </member>
        <member name="F:WeChatWASM.UDPSocketOnMessageListenerResult.localInfo">
            <summary>
            接收端地址信息，2.18.0 起支持
            </summary>
        </member>
        <member name="F:WeChatWASM.UDPSocketOnMessageListenerResult.message">
            <summary>
            收到的消息。消息长度需要小于4096。
            </summary>
        </member>
        <member name="F:WeChatWASM.UDPSocketOnMessageListenerResult.remoteInfo">
            <summary>
            发送端地址信息
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:WeChatWASM.UDPSocketSendOption.address" -->
        <member name="F:WeChatWASM.UDPSocketSendOption.message">
            <summary>
            要发送的数据
            </summary>
        </member>
        <member name="F:WeChatWASM.UDPSocketSendOption.port">
            <summary>
            要发送消息的端口号
            </summary>
        </member>
        <member name="F:WeChatWASM.UDPSocketSendOption.length">
            <summary>
            发送数据的长度，仅当 message 为 ArrayBuffer 类型时有效
            </summary>
        </member>
        <member name="F:WeChatWASM.UDPSocketSendOption.offset">
            <summary>
            发送数据的偏移量，仅当 message 为 ArrayBuffer 类型时有效
            </summary>
        </member>
        <member name="F:WeChatWASM.UDPSocketSendOption.setBroadcast">
            <summary>
            向指定地址发消息时，是否要开启广播，基础库 2.24.0 开始支持
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:WeChatWASM.UDPSocketSendParam.address" -->
        <member name="F:WeChatWASM.UDPSocketSendParam.port">
            <summary>
            要发送消息的端口号
            </summary>
        </member>
        <member name="F:WeChatWASM.UDPSocketSendParam.length">
            <summary>
            发送数据的长度，仅当 message 为 ArrayBuffer 类型时有效
            </summary>
        </member>
        <member name="F:WeChatWASM.UDPSocketSendParam.offset">
            <summary>
            发送数据的偏移量，仅当 message 为 ArrayBuffer 类型时有效
            </summary>
        </member>
        <member name="F:WeChatWASM.UDPSocketSendParam.setBroadcast">
            <summary>
            向指定地址发消息时，是否要开启广播，基础库 2.24.0 开始支持
            </summary>
        </member>
        <member name="F:WeChatWASM.OnTouchStartListenerResult.changedTouches">
            <summary>
            触发此次事件的触摸点列表
            </summary>
        </member>
        <member name="F:WeChatWASM.OnTouchStartListenerResult.timeStamp">
            <summary>
            事件触发时的时间戳
            </summary>
        </member>
        <member name="F:WeChatWASM.OnTouchStartListenerResult.touches">
            <summary>
            当前所有触摸点的列表
            </summary>
        </member>
        <member name="F:WeChatWASM.Touch.clientX">
            <summary>
            触点相对于可见视区左边沿的 X 坐标。
            </summary>
        </member>
        <member name="F:WeChatWASM.Touch.clientY">
            <summary>
            触点相对于可见视区上边沿的 Y 坐标。
            </summary>
        </member>
        <member name="F:WeChatWASM.Touch.force">
            <summary>
            手指挤压触摸平面的压力大小, 从0.0(没有压力)到1.0(最大压力)的浮点数（仅在支持 force touch 的设备返回）
            </summary>
        </member>
        <member name="F:WeChatWASM.Touch.identifier">
            <summary>
            Touch 对象的唯一标识符，只读属性。一次触摸动作(我们值的是手指的触摸)在平面上移动的整个过程中, 该标识符不变。可以根据它来判断跟踪的是否是同一次触摸过程。
            </summary>
        </member>
        <member name="F:WeChatWASM.Touch.pageX">
            <summary>
            触点相对于页面左边沿的 X 坐标。
            </summary>
        </member>
        <member name="F:WeChatWASM.Touch.pageY">
            <summary>
            触点相对于页面上边沿的 Y 坐标。
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBLECharacteristicValueChangeListenerResult.characteristicId">
            <summary>
            蓝牙特征的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBLECharacteristicValueChangeListenerResult.deviceId">
            <summary>
            蓝牙设备 id
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBLECharacteristicValueChangeListenerResult.serviceId">
            <summary>
            蓝牙特征对应服务的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBLECharacteristicValueChangeListenerResult.value">
            <summary>
            特征最新的值
            </summary>
        </member>
        <member name="F:WeChatWASM.OnGyroscopeChangeListenerResult.x">
            <summary>
            x 轴的角速度
            </summary>
        </member>
        <member name="F:WeChatWASM.OnGyroscopeChangeListenerResult.y">
            <summary>
            y 轴的角速度
            </summary>
        </member>
        <member name="F:WeChatWASM.OnGyroscopeChangeListenerResult.z">
            <summary>
            z 轴的角速度
            </summary>
        </member>
        <member name="F:WeChatWASM.StartGyroscopeOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.StartGyroscopeOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StartGyroscopeOption.interval">
            <summary>
            监听陀螺仪数据回调函数的执行频率
            可选值：
            - 'game': 适用于更新游戏的回调频率，在 20ms/次 左右;
            - 'ui': 适用于更新 UI 的回调频率，在 60ms/次 左右;
            - 'normal': 普通的回调频率，在 200ms/次 左右;
            </summary>
        </member>
        <member name="F:WeChatWASM.StartGyroscopeOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StopGyroscopeOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.StopGyroscopeOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StopGyroscopeOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.AccountInfo.miniProgram">
            <summary>
            小程序账号信息
            </summary>
        </member>
        <member name="F:WeChatWASM.AccountInfo.plugin">
            <summary>
            插件账号信息（仅在插件中调用时包含这一项）
            </summary>
        </member>
        <member name="F:WeChatWASM.MiniProgram.appId">
            <summary>
            小程序 appId
            </summary>
        </member>
        <member name="F:WeChatWASM.MiniProgram.envVersion">
            <summary>
            需要基础库： `2.10.0`
            小程序版本
            可选值：
            - 'develop': 开发版;
            - 'trial': 体验版;
            - 'release': 正式版;
            </summary>
        </member>
        <member name="F:WeChatWASM.MiniProgram.version">
            <summary>
            需要基础库： `2.10.2`
            线上小程序版本号
            </summary>
        </member>
        <member name="F:WeChatWASM.Plugin.appId">
            <summary>
            插件 appId
            </summary>
        </member>
        <member name="F:WeChatWASM.Plugin.version">
            <summary>
            插件版本号
            </summary>
        </member>
        <member name="F:WeChatWASM.AppAuthorizeSetting.albumAuthorized">
            <summary>
            允许微信使用相册的开关（仅 iOS 有效）
            </summary>
        </member>
        <member name="F:WeChatWASM.AppAuthorizeSetting.bluetoothAuthorized">
            <summary>
            允许微信使用蓝牙的开关（仅 iOS 有效）
            </summary>
        </member>
        <member name="F:WeChatWASM.AppAuthorizeSetting.cameraAuthorized">
            <summary>
            允许微信使用摄像头的开关
            </summary>
        </member>
        <member name="F:WeChatWASM.AppAuthorizeSetting.locationAuthorized">
            <summary>
            允许微信使用定位的开关
            </summary>
        </member>
        <member name="F:WeChatWASM.AppAuthorizeSetting.locationReducedAccuracy">
            <summary>
            定位准确度。true 表示模糊定位，false 表示精确定位（仅 iOS 有效）
            </summary>
        </member>
        <member name="F:WeChatWASM.AppAuthorizeSetting.microphoneAuthorized">
            <summary>
            允许微信使用麦克风的开关
            </summary>
        </member>
        <member name="F:WeChatWASM.AppAuthorizeSetting.notificationAlertAuthorized">
            <summary>
            允许微信通知带有提醒的开关（仅 iOS 有效）
            </summary>
        </member>
        <member name="F:WeChatWASM.AppAuthorizeSetting.notificationAuthorized">
            <summary>
            允许微信通知的开关
            </summary>
        </member>
        <member name="F:WeChatWASM.AppAuthorizeSetting.notificationBadgeAuthorized">
            <summary>
            允许微信通知带有标记的开关（仅 iOS 有效）
            </summary>
        </member>
        <member name="F:WeChatWASM.AppAuthorizeSetting.notificationSoundAuthorized">
            <summary>
            允许微信通知带有声音的开关（仅 iOS 有效）
            </summary>
        </member>
        <member name="F:WeChatWASM.AppAuthorizeSetting.phoneCalendarAuthorized">
            <summary>
            允许微信读写日历的开关
            </summary>
        </member>
        <member name="F:WeChatWASM.AppBaseInfo.SDKVersion">
            <summary>
            客户端基础库版本
            </summary>
        </member>
        <member name="F:WeChatWASM.AppBaseInfo.enableDebug">
            <summary>
            是否已打开调试。可通过右上角菜单或 [wx.setEnableDebug](https://developers.weixin.qq.com/minigame/dev/api/base/debug/wx.setEnableDebug.html) 打开调试。
            </summary>
        </member>
        <member name="F:WeChatWASM.AppBaseInfo.host">
            <summary>
            当前小程序运行的宿主环境
            </summary>
        </member>
        <member name="F:WeChatWASM.AppBaseInfo.language">
            <summary>
            微信设置的语言
            </summary>
        </member>
        <member name="F:WeChatWASM.AppBaseInfo.version">
            <summary>
            微信版本号
            </summary>
        </member>
        <member name="F:WeChatWASM.AppBaseInfo.theme">
            <summary>
            系统当前主题，取值为`light`或`dark`，全局配置`"darkmode":true`时才能获取，否则为 undefined （不支持小游戏）
            可选值：
            - 'dark': 深色主题;
            - 'light': 浅色主题;
            </summary>
        </member>
        <member name="F:WeChatWASM.AppBaseInfoHost.appId">
            <summary>
            宿主 app（第三方App） 对应的 appId （当小程序运行在第三方App环境时才返回）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBatteryInfoSyncResult.isCharging">
            <summary>
            是否正在充电中
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBatteryInfoSyncResult.level">
            <summary>
            设备电量，范围 1 - 100
            </summary>
        </member>
        <member name="F:WeChatWASM.DeviceInfo.abi">
            <summary>
            应用（微信APP）二进制接口类型（仅 Android 支持）
            </summary>
        </member>
        <member name="F:WeChatWASM.DeviceInfo.benchmarkLevel">
            <summary>
            设备性能等级（仅 Android 支持）。取值为：-2 或 0（该设备无法运行小游戏），-1（性能未知），>=1（设备性能值，该值越高，设备性能越好，目前最高不到50）
            </summary>
        </member>
        <member name="F:WeChatWASM.DeviceInfo.brand">
            <summary>
            设备品牌
            </summary>
        </member>
        <member name="F:WeChatWASM.DeviceInfo.cpuType">
            <summary>
            需要基础库： `2.29.0`
            设备 CPU 型号（仅 Android 支持）（Tips: GPU 型号可通过 WebGLRenderingContext.getExtension('WEBGL_debug_renderer_info') 来获取）
            </summary>
        </member>
        <member name="F:WeChatWASM.DeviceInfo.deviceAbi">
            <summary>
            需要基础库： `2.25.1`
            设备二进制接口类型（仅 Android 支持）
            </summary>
        </member>
        <member name="F:WeChatWASM.DeviceInfo.memorySize">
            <summary>
            需要基础库： `2.30.0`
            设备内存大小，单位为 MB
            </summary>
        </member>
        <member name="F:WeChatWASM.DeviceInfo.model">
            <summary>
            设备型号。新机型刚推出一段时间会显示unknown，微信会尽快进行适配。
            </summary>
        </member>
        <member name="F:WeChatWASM.DeviceInfo.platform">
            <summary>
            客户端平台
            </summary>
        </member>
        <member name="F:WeChatWASM.DeviceInfo.system">
            <summary>
            操作系统及版本
            </summary>
        </member>
        <member name="F:WeChatWASM.EnterOptionsGame.apiCategory">
            <summary>
            需要基础库： `2.20.0`
            API 类别
            可选值：
            - 'default': 默认类别;
            - 'nativeFunctionalized': 原生功能化，视频号直播商品、商品橱窗等场景打开的小程序;
            - 'browseOnly': 仅浏览，朋友圈快照页等场景打开的小程序;
            - 'embedded': 内嵌，通过打开半屏小程序能力打开的小程序;
            </summary>
        </member>
        <member name="F:WeChatWASM.EnterOptionsGame.query">
            <summary>
            启动小游戏的 query 参数
            </summary>
        </member>
        <member name="F:WeChatWASM.EnterOptionsGame.referrerInfo">
            <summary>
            来源信息。从另一个小程序、公众号或 App 进入小程序时返回。否则返回 `{}`。(参见后文注意)
            </summary>
        </member>
        <member name="F:WeChatWASM.EnterOptionsGame.scene">
            <summary>
            启动小游戏的[场景值](https://developers.weixin.qq.com/minigame/dev/guide/base-ability/scene.html)
            </summary>
        </member>
        <member name="F:WeChatWASM.EnterOptionsGame.chatType">
            <summary>
            从微信群聊/单聊打开小程序时，chatType 表示具体微信群聊/单聊类型
            可选值：
            - 1: 微信联系人单聊;
            - 2: 企业微信联系人单聊;
            - 3: 普通微信群聊;
            - 4: 企业微信互通群聊;
            </summary>
        </member>
        <member name="F:WeChatWASM.EnterOptionsGame.shareTicket">
            <summary>
            shareTicket，详见[获取更多转发信息](#)
            </summary>
        </member>
        <member name="F:WeChatWASM.EnterOptionsGameReferrerInfo.appId">
            <summary>
            来源小程序、公众号或 App 的 appId
            </summary>
        </member>
        <member name="F:WeChatWASM.EnterOptionsGameReferrerInfo.extraData">
            <summary>
            来源小程序传过来的数据，scene=1037或1038时支持
            </summary>
        </member>
        <member name="F:WeChatWASM.EnterOptionsGameReferrerInfo.gameLiveInfo">
            <summary>
            从小游戏直播间里的挂件入口打开小游戏时，开发者可从启动参数中获取当前直播的直播间Id和直播者openId
            </summary>
        </member>
        <member name="F:WeChatWASM.GameLiveInfo.streamerOpenId">
            <summary>
            直播者 openId
            </summary>
        </member>
        <member name="F:WeChatWASM.GameLiveInfo.feedId">
            <summary>
            直播间 id
            </summary>
        </member>
        <member name="F:WeChatWASM.LaunchOptionsGame.query">
            <summary>
            启动小游戏的 query 参数
            </summary>
        </member>
        <member name="F:WeChatWASM.LaunchOptionsGame.referrerInfo">
            <summary>
            来源信息。从另一个小程序、公众号或 App 进入小程序时返回。否则返回 `{}`。(参见后文注意)
            </summary>
        </member>
        <member name="F:WeChatWASM.LaunchOptionsGame.scene">
            <summary>
            启动小游戏的[场景值](https://developers.weixin.qq.com/minigame/dev/guide/base-ability/scene.html)
            </summary>
        </member>
        <member name="F:WeChatWASM.LaunchOptionsGame.chatType">
            <summary>
            从微信群聊/单聊打开小程序时，chatType 表示具体微信群聊/单聊类型
            可选值：
            - 1: 微信联系人单聊;
            - 2: 企业微信联系人单聊;
            - 3: 普通微信群聊;
            - 4: 企业微信互通群聊;
            </summary>
        </member>
        <member name="F:WeChatWASM.LaunchOptionsGame.shareTicket">
            <summary>
            shareTicket，详见[获取更多转发信息](#)
            </summary>
        </member>
        <member name="F:WeChatWASM.ClientRect.bottom">
            <summary>
            下边界坐标，单位：px
            </summary>
        </member>
        <member name="F:WeChatWASM.ClientRect.height">
            <summary>
            高度，单位：px
            </summary>
        </member>
        <member name="F:WeChatWASM.ClientRect.left">
            <summary>
            左边界坐标，单位：px
            </summary>
        </member>
        <member name="F:WeChatWASM.ClientRect.right">
            <summary>
            右边界坐标，单位：px
            </summary>
        </member>
        <member name="F:WeChatWASM.ClientRect.top">
            <summary>
            上边界坐标，单位：px
            </summary>
        </member>
        <member name="F:WeChatWASM.ClientRect.width">
            <summary>
            宽度，单位：px
            </summary>
        </member>
        <member name="F:WeChatWASM.GetStorageInfoSyncOption.currentSize">
            <summary>
            当前占用的空间大小, 单位 KB
            </summary>
        </member>
        <member name="F:WeChatWASM.GetStorageInfoSyncOption.keys">
            <summary>
            当前 storage 中所有的 key
            </summary>
        </member>
        <member name="F:WeChatWASM.GetStorageInfoSyncOption.limitSize">
            <summary>
            限制的空间大小，单位 KB
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.SDKVersion">
            <summary>
            需要基础库： `1.1.0`
            客户端基础库版本
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.albumAuthorized">
            <summary>
            需要基础库： `2.6.0`
            允许微信使用相册的开关（仅 iOS 有效）
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:WeChatWASM.SystemInfo.benchmarkLevel" -->
        <member name="F:WeChatWASM.SystemInfo.bluetoothEnabled">
            <summary>
            需要基础库： `2.6.0`
            蓝牙的系统开关
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.brand">
            <summary>
            需要基础库： `1.5.0`
            设备品牌
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.cameraAuthorized">
            <summary>
            需要基础库： `2.6.0`
            允许微信使用摄像头的开关
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.deviceOrientation">
            <summary>
            设备方向
            可选值：
            - 'portrait': 竖屏;
            - 'landscape': 横屏;
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.enableDebug">
            <summary>
            需要基础库： `2.15.0`
            是否已打开调试。可通过右上角菜单或 [wx.setEnableDebug](https://developers.weixin.qq.com/minigame/dev/api/base/debug/wx.setEnableDebug.html) 打开调试。
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.fontSizeSetting">
            <summary>
            需要基础库： `1.5.0`
            用户字体大小（单位px）。以微信客户端「我-设置-通用-字体大小」中的设置为准
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.host">
            <summary>
            需要基础库： `2.12.3`
            当前小程序运行的宿主环境
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.language">
            <summary>
            微信设置的语言
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.locationAuthorized">
            <summary>
            需要基础库： `2.6.0`
            允许微信使用定位的开关
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.locationEnabled">
            <summary>
            需要基础库： `2.6.0`
            地理位置的系统开关
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.locationReducedAccuracy">
            <summary>
            `true` 表示模糊定位，`false` 表示精确定位，仅 iOS 支持
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.microphoneAuthorized">
            <summary>
            需要基础库： `2.6.0`
            允许微信使用麦克风的开关
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.model">
            <summary>
            设备型号。新机型刚推出一段时间会显示unknown，微信会尽快进行适配。
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.notificationAlertAuthorized">
            <summary>
            需要基础库： `2.6.0`
            允许微信通知带有提醒的开关（仅 iOS 有效）
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.notificationAuthorized">
            <summary>
            需要基础库： `2.6.0`
            允许微信通知的开关
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.notificationBadgeAuthorized">
            <summary>
            需要基础库： `2.6.0`
            允许微信通知带有标记的开关（仅 iOS 有效）
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.notificationSoundAuthorized">
            <summary>
            需要基础库： `2.6.0`
            允许微信通知带有声音的开关（仅 iOS 有效）
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.phoneCalendarAuthorized">
            <summary>
            需要基础库： `2.19.3`
            允许微信使用日历的开关
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.pixelRatio">
            <summary>
            设备像素比
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.platform">
            <summary>
            客户端平台
            可选值：
            - 'ios': iOS微信（包含 iPhone、iPad）;
            - 'android': Android微信;
            - 'windows': Windows微信;
            - 'mac': macOS微信;
            - 'devtools': 微信开发者工具;
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.safeArea">
            <summary>
            需要基础库： `2.7.0`
            在竖屏正方向下的安全区域。部分机型没有安全区域概念，也不会返回 safeArea 字段，开发者需自行兼容。
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.screenHeight">
            <summary>
            需要基础库： `1.1.0`
            屏幕高度，单位px
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.screenWidth">
            <summary>
            需要基础库： `1.1.0`
            屏幕宽度，单位px
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.statusBarHeight">
            <summary>
            需要基础库： `1.9.0`
            状态栏的高度，单位px
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.system">
            <summary>
            操作系统及版本
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.version">
            <summary>
            微信版本号
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.wifiEnabled">
            <summary>
            需要基础库： `2.6.0`
            Wi-Fi 的系统开关
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.windowHeight">
            <summary>
            可使用窗口高度，单位px
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.windowWidth">
            <summary>
            可使用窗口宽度，单位px
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfo.theme">
            <summary>
            需要基础库： `2.11.0`
            系统当前主题，取值为`light`或`dark`，全局配置`"darkmode":true`时才能获取，否则为 undefined （不支持小游戏）
            可选值：
            - 'dark': 深色主题;
            - 'light': 浅色主题;
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemInfoHost.appId">
            <summary>
            宿主 app 对应的 appId
            </summary>
        </member>
        <member name="F:WeChatWASM.SafeArea.bottom">
            <summary>
            安全区域右下角纵坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.SafeArea.height">
            <summary>
            安全区域的高度，单位逻辑像素
            </summary>
        </member>
        <member name="F:WeChatWASM.SafeArea.left">
            <summary>
            安全区域左上角横坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.SafeArea.right">
            <summary>
            安全区域右下角横坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.SafeArea.top">
            <summary>
            安全区域左上角纵坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.SafeArea.width">
            <summary>
            安全区域的宽度，单位逻辑像素
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemSetting.bluetoothEnabled">
            <summary>
            蓝牙的系统开关
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemSetting.deviceOrientation">
            <summary>
            设备方向
            可选值：
            - 'portrait': 竖屏;
            - 'landscape': 横屏;
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemSetting.locationEnabled">
            <summary>
            地理位置的系统开关
            </summary>
        </member>
        <member name="F:WeChatWASM.SystemSetting.wifiEnabled">
            <summary>
            Wi-Fi 的系统开关
            </summary>
        </member>
        <member name="F:WeChatWASM.WindowInfo.pixelRatio">
            <summary>
            设备像素比
            </summary>
        </member>
        <member name="F:WeChatWASM.WindowInfo.safeArea">
            <summary>
            在竖屏正方向下的安全区域。部分机型没有安全区域概念，也不会返回 safeArea 字段，开发者需自行兼容。
            </summary>
        </member>
        <member name="F:WeChatWASM.WindowInfo.screenHeight">
            <summary>
            屏幕高度，单位px
            </summary>
        </member>
        <member name="F:WeChatWASM.WindowInfo.screenTop">
            <summary>
            窗口上边缘的y值
            </summary>
        </member>
        <member name="F:WeChatWASM.WindowInfo.screenWidth">
            <summary>
            屏幕宽度，单位px
            </summary>
        </member>
        <member name="F:WeChatWASM.WindowInfo.statusBarHeight">
            <summary>
            状态栏的高度，单位px
            </summary>
        </member>
        <member name="F:WeChatWASM.WindowInfo.windowHeight">
            <summary>
            可使用窗口高度，单位px
            </summary>
        </member>
        <member name="F:WeChatWASM.WindowInfo.windowWidth">
            <summary>
            可使用窗口宽度，单位px
            </summary>
        </member>
        <member name="F:WeChatWASM.DownloadFileOption.url">
            <summary>
            下载资源的 url
            </summary>
        </member>
        <member name="F:WeChatWASM.DownloadFileOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.DownloadFileOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.DownloadFileOption.filePath">
            <summary>
            需要基础库： `1.8.0`
            指定文件下载后存储的路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.DownloadFileOption.header">
            <summary>
            HTTP 请求的 Header，Header 中不能设置 Referer
            </summary>
        </member>
        <member name="F:WeChatWASM.DownloadFileOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.DownloadFileOption.timeout">
            <summary>
            需要基础库： `2.10.0`
            超时时间，单位为毫秒，默认值为 60000 即一分钟。
            </summary>
        </member>
        <member name="F:WeChatWASM.GeneralCallbackResult.errMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:WeChatWASM.DownloadFileSuccessCallbackResult.filePath">
            <summary>
            用户文件路径 (本地路径)。传入 filePath 时会返回，跟传入的 filePath 一致
            </summary>
        </member>
        <member name="F:WeChatWASM.DownloadFileSuccessCallbackResult.profile">
            <summary>
            需要基础库： `2.10.4`
            网络请求过程中一些调试信息，[查看详细说明](https://developers.weixin.qq.com/miniprogram/dev/framework/performance/network.html)
            </summary>
        </member>
        <member name="F:WeChatWASM.DownloadFileSuccessCallbackResult.statusCode">
            <summary>
            开发者服务器返回的 HTTP 状态码
            </summary>
        </member>
        <member name="F:WeChatWASM.DownloadFileSuccessCallbackResult.tempFilePath">
            <summary>
            临时文件路径 (本地路径)。没传入 filePath 指定文件存储路径时会返回，下载后的文件会存储到一个临时文件
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.SSLconnectionEnd">
            <summary>
            SSL建立完成的时间,如果不是安全连接,则值为 0
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.SSLconnectionStart">
            <summary>
            SSL建立连接的时间,如果不是安全连接,则值为 0
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.connectEnd">
            <summary>
            HTTP（TCP） 完成建立连接的时间（完成握手），如果是持久连接，则与 fetchStart 值相等。注意如果在传输层发生了错误且重新建立连接，则这里显示的是新建立的连接完成的时间。注意这里握手结束，包括安全连接建立完成、SOCKS 授权通过
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.connectStart">
            <summary>
            HTTP（TCP） 开始建立连接的时间，如果是持久连接，则与 fetchStart 值相等。注意如果在传输层发生了错误且重新建立连接，则这里显示的是新建立的连接开始的时间
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.domainLookUpEnd">
            <summary>
            DNS 域名查询完成的时间，如果使用了本地缓存（即无 DNS 查询）或持久连接，则与 fetchStart 值相等
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.domainLookUpStart">
            <summary>
            DNS 域名查询开始的时间，如果使用了本地缓存（即无 DNS 查询）或持久连接，则与 fetchStart 值相等
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.downstreamThroughputKbpsEstimate">
            <summary>
            评估当前网络下载的kbps
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.estimate_nettype">
            <summary>
            评估的网络状态 unknown, offline, slow 2g, 2g, 3g, 4g, last/0, 1, 2, 3, 4, 5, 6
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.fetchStart">
            <summary>
            组件准备好使用 HTTP 请求抓取资源的时间，这发生在检查本地缓存之前
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.httpRttEstimate">
            <summary>
            协议层根据多个请求评估当前网络的 rtt（仅供参考）
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.peerIP">
            <summary>
            当前请求的IP
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.port">
            <summary>
            当前请求的端口
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.protocol">
            <summary>
            使用协议类型，有效值：http1.1, h2, quic, unknown
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.receivedBytedCount">
            <summary>
            收到字节数
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.redirectEnd">
            <summary>
            最后一个 HTTP 重定向完成时的时间。有跳转且是同域名内部的重定向才算，否则值为 0
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.redirectStart">
            <summary>
            第一个 HTTP 重定向发生时的时间。有跳转且是同域名内的重定向才算，否则值为 0
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.requestEnd">
            <summary>
            HTTP请求读取真实文档结束的时间
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.requestStart">
            <summary>
            HTTP请求读取真实文档开始的时间（完成建立连接），包括从本地读取缓存。连接错误重连时，这里显示的也是新建立连接的时间
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.responseEnd">
            <summary>
            HTTP 响应全部接收完成的时间（获取到最后一个字节），包括从本地读取缓存
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.responseStart">
            <summary>
            HTTP 开始接收响应的时间（获取到第一个字节），包括从本地读取缓存
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.rtt">
            <summary>
            当次请求连接过程中实时 rtt
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.sendBytesCount">
            <summary>
            发送的字节数
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.socketReused">
            <summary>
            是否复用连接
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.throughputKbps">
            <summary>
            当前网络的实际下载kbps
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestProfile.transportRttEstimate">
            <summary>
            传输层根据多个请求评估的当前网络的 rtt（仅供参考）
            </summary>
        </member>
        <member name="F:WeChatWASM.DownloadTaskOnHeadersReceivedListenerResult.header">
            <summary>
            开发者服务器返回的 HTTP Response Header
            </summary>
        </member>
        <member name="F:WeChatWASM.DownloadTaskOnProgressUpdateListenerResult.progress">
            <summary>
            下载进度百分比
            </summary>
        </member>
        <member name="F:WeChatWASM.DownloadTaskOnProgressUpdateListenerResult.totalBytesExpectedToWrite">
            <summary>
            预期需要下载的数据总长度，单位 Bytes
            </summary>
        </member>
        <member name="F:WeChatWASM.DownloadTaskOnProgressUpdateListenerResult.totalBytesWritten">
            <summary>
            已经下载的数据长度，单位 Bytes
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateOpenSettingButtonOption.style">
            <summary>
            按钮的样式
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateOpenSettingButtonOption.type">
            <summary>
            按钮的类型。
            可选值：
            - 'text': 可以设置背景色和文本的按钮;
            - 'image': 只能设置背景贴图的按钮，背景贴图会直接拉伸到按钮的宽高;
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateOpenSettingButtonOption.image">
            <summary>
            按钮的背景图片，仅当 type 为 `image` 时有效
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateOpenSettingButtonOption.text">
            <summary>
            按钮上的文本，仅当 type 为 `text` 时有效
            </summary>
        </member>
        <member name="F:WeChatWASM.OptionStyle.backgroundColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="F:WeChatWASM.OptionStyle.borderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="F:WeChatWASM.OptionStyle.borderRadius">
            <summary>
            边框圆角
            </summary>
        </member>
        <member name="F:WeChatWASM.OptionStyle.borderWidth">
            <summary>
            边框宽度
            </summary>
        </member>
        <member name="F:WeChatWASM.OptionStyle.color">
            <summary>
            文本的颜色。格式为 6 位 16 进制数。
            </summary>
        </member>
        <member name="F:WeChatWASM.OptionStyle.fontSize">
            <summary>
            字号
            </summary>
        </member>
        <member name="F:WeChatWASM.OptionStyle.height">
            <summary>
            高度
            </summary>
        </member>
        <member name="F:WeChatWASM.OptionStyle.left">
            <summary>
            左上角横坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.OptionStyle.lineHeight">
            <summary>
            文本的行高
            </summary>
        </member>
        <member name="F:WeChatWASM.OptionStyle.textAlign">
            <summary>
            文本的水平居中方式
            可选值：
            - 'left': 居左;
            - 'center': 居中;
            - 'right': 居右;
            </summary>
        </member>
        <member name="F:WeChatWASM.OptionStyle.top">
            <summary>
            左上角纵坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.OptionStyle.width">
            <summary>
            宽度
            </summary>
        </member>
        <member name="F:WeChatWASM.ImageData.data">
            <summary>
            一维数组，包含以 RGBA 顺序的数据，数据使用 0 至 255（包含）的整数表示
            </summary>
        </member>
        <member name="F:WeChatWASM.ImageData.height">
            <summary>
            使用像素描述 ImageData 的实际高度
            </summary>
        </member>
        <member name="F:WeChatWASM.ImageData.width">
            <summary>
            使用像素描述 ImageData 的实际宽度
            </summary>
        </member>
        <member name="F:WeChatWASM.GetLogManagerOption.level">
            <summary>
            需要基础库： `2.3.2`
            取值为0/1，取值为0表示会把 `App`、`Page` 的生命周期函数和 `wx` 命名空间下的函数调用写入日志，取值为1则不会。默认值是 0
            </summary>
        </member>
        <member name="F:WeChatWASM.OnCheckForUpdateListenerResult.hasUpdate">
            <summary>
            是否有新版本
            </summary>
        </member>
        <member name="F:WeChatWASM.VideoDecoderStartOption.source">
            <summary>
            需要解码的视频源文件。基础库 2.13.0 以下的版本只支持本地路径。 2.13.0 开始支持 http:// 和 https:// 协议的远程路径。
            </summary>
        </member>
        <member name="F:WeChatWASM.VideoDecoderStartOption.abortAudio">
            <summary>
            需要基础库： `2.15.0`
            是否不需要音频轨道
            </summary>
        </member>
        <member name="F:WeChatWASM.VideoDecoderStartOption.abortVideo">
            <summary>
            需要基础库： `2.15.0`
            是否不需要视频轨道
            </summary>
        </member>
        <member name="F:WeChatWASM.VideoDecoderStartOption.mode">
            <summary>
            解码模式。0：按 pts 解码；1：以最快速度解码
            </summary>
        </member>
        <member name="F:WeChatWASM.SetMessageToFriendQueryOption.query">
            <summary>
            需要传递的字符串数据，长度需要在 128 之内
            </summary>
        </member>
        <member name="F:WeChatWASM.SetMessageToFriendQueryOption.shareMessageToFriendScene">
            <summary>
            需要传递的代表场景的数字，需要在 0 - 50 之间
            </summary>
        </member>
        <member name="F:WeChatWASM.GetTextLineHeightOption.fontFamily">
            <summary>
            字体名称
            </summary>
        </member>
        <member name="F:WeChatWASM.GetTextLineHeightOption.text">
            <summary>
            文本的内容
            </summary>
        </member>
        <member name="F:WeChatWASM.GetTextLineHeightOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetTextLineHeightOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetTextLineHeightOption.fontSize">
            <summary>
            字号
            </summary>
        </member>
        <member name="F:WeChatWASM.GetTextLineHeightOption.fontStyle">
            <summary>
            字体样式
            可选值：
            - 'normal': 正常;
            - 'italic': 斜体;
            </summary>
        </member>
        <member name="F:WeChatWASM.GetTextLineHeightOption.fontWeight">
            <summary>
            字重
            可选值：
            - 'normal': 正常;
            - 'bold': 粗体;
            </summary>
        </member>
        <member name="F:WeChatWASM.GetTextLineHeightOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.AddCardOption.cardList">
            <summary>
            需要添加的卡券列表
            </summary>
        </member>
        <member name="F:WeChatWASM.AddCardOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.AddCardOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.AddCardOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.AddCardRequestInfo.cardExt">
            <summary>
            卡券的扩展参数。需将 CardExt 对象 JSON 序列化为**字符串**传入
            </summary>
        </member>
        <member name="F:WeChatWASM.AddCardRequestInfo.cardId">
            <summary>
            卡券 ID
            </summary>
        </member>
        <member name="F:WeChatWASM.AddCardSuccessCallbackResult.cardList">
            <summary>
            卡券添加结果列表
            </summary>
        </member>
        <member name="F:WeChatWASM.AddCardResponseInfo.cardExt">
            <summary>
            卡券的扩展参数，结构请参考下文
            </summary>
        </member>
        <member name="F:WeChatWASM.AddCardResponseInfo.cardId">
            <summary>
            用户领取到卡券的 ID
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:WeChatWASM.AddCardResponseInfo.code" -->
        <member name="F:WeChatWASM.AddCardResponseInfo.isSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="F:WeChatWASM.AuthPrivateMessageOption.shareTicket">
            <summary>
            shareTicket。可以从 wx.onShow 中获取。详情 [shareTicket](#)
            </summary>
        </member>
        <member name="F:WeChatWASM.AuthPrivateMessageOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.AuthPrivateMessageOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.AuthPrivateMessageOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.AuthPrivateMessageSuccessCallbackResult.encryptedData">
            <summary>
            经过加密的activityId，解密后可得到原始的activityId。若解密后得到的activityId可以与开发者后台的活动id对应上则验证通过，否则表明valid字段不可靠（被篡改） 详细见[加密数据解密算法](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/signature.html)
            </summary>
        </member>
        <member name="F:WeChatWASM.AuthPrivateMessageSuccessCallbackResult.errMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:WeChatWASM.AuthPrivateMessageSuccessCallbackResult.iv">
            <summary>
            加密算法的初始向量，详细见[加密数据解密算法](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html)
            </summary>
        </member>
        <member name="F:WeChatWASM.AuthPrivateMessageSuccessCallbackResult.valid">
            <summary>
            验证是否通过
            </summary>
        </member>
        <member name="F:WeChatWASM.AuthorizeOption.scope">
            <summary>
            需要获取权限的 scope，详见 [scope 列表](https://developers.weixin.qq.com/minigame/dev/guide/base-ability/authorize.html#scope-列表)
            </summary>
        </member>
        <member name="F:WeChatWASM.AuthorizeOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.AuthorizeOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.AuthorizeOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.CheckIsAddedToMyMiniProgramOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.CheckIsAddedToMyMiniProgramOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.CheckIsAddedToMyMiniProgramOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.CheckIsAddedToMyMiniProgramSuccessCallbackResult.added">
            <summary>
            是否被添加至 「我的小程序」
            </summary>
        </member>
        <member name="F:WeChatWASM.CheckSessionOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.CheckSessionOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.CheckSessionOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseImageOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseImageOption.count">
            <summary>
            最多可以选择的图片张数
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseImageOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseImageOption.sizeType">
            <summary>
            所选的图片的尺寸
            可选值：
            - 'original': 原图;
            - 'compressed': 压缩图;
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseImageOption.sourceType">
            <summary>
            选择图片的来源
            可选值：
            - 'album': 从相册选图;
            - 'camera': 使用相机;
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseImageOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseImageSuccessCallbackResult.tempFilePaths">
            <summary>
            图片的本地临时文件路径列表 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseImageSuccessCallbackResult.tempFiles">
            <summary>
            需要基础库： `1.2.0`
            图片的本地临时文件列表
            </summary>
        </member>
        <member name="F:WeChatWASM.ImageFile.path">
            <summary>
            本地临时文件路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.ImageFile.size">
            <summary>
            本地临时文件大小，单位 B
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseMediaOption.camera">
            <summary>
            仅在 sourceType 为 camera 时生效，使用前置或后置摄像头
            可选值：
            - 'back': 使用后置摄像头;
            - 'front': 使用前置摄像头;
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseMediaOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseMediaOption.count">
            <summary>
            最多可以选择的文件个数，基础库2.25.0前，最多可支持9个文件，2.25.0及以后最多可支持20个文件
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseMediaOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseMediaOption.maxDuration">
            <summary>
            拍摄视频最长拍摄时间，单位秒。时间范围为 3s 至 60s 之间。不限制相册。
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseMediaOption.mediaType">
            <summary>
            文件类型
            可选值：
            - 'image': 只能拍摄图片或从相册选择图片;
            - 'video': 只能拍摄视频或从相册选择视频;
            - 'mix': 可同时选择图片和视频;
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseMediaOption.sizeType">
            <summary>
            是否压缩所选文件，基础库2.25.0前仅对 mediaType 为 image 时有效，2.25.0及以后对全量 mediaType 有效
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseMediaOption.sourceType">
            <summary>
            图片和视频选择的来源
            可选值：
            - 'album': 从相册选择;
            - 'camera': 使用相机拍摄;
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseMediaOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseMediaSuccessCallbackResult.tempFiles">
            <summary>
            本地临时文件列表
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseMediaSuccessCallbackResult.type">
            <summary>
            文件类型，有效值有 image 、video、mix
            </summary>
        </member>
        <member name="F:WeChatWASM.MediaFile.duration">
            <summary>
            视频的时间长度
            </summary>
        </member>
        <member name="F:WeChatWASM.MediaFile.fileType">
            <summary>
            文件类型
            可选值：
            - 'image': 图片;
            - 'video': 视频;
            </summary>
        </member>
        <member name="F:WeChatWASM.MediaFile.height">
            <summary>
            视频的高度
            </summary>
        </member>
        <member name="F:WeChatWASM.MediaFile.size">
            <summary>
            本地临时文件大小，单位 B
            </summary>
        </member>
        <member name="F:WeChatWASM.MediaFile.tempFilePath">
            <summary>
            本地临时文件路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.MediaFile.thumbTempFilePath">
            <summary>
            视频缩略图临时文件路径
            </summary>
        </member>
        <member name="F:WeChatWASM.MediaFile.width">
            <summary>
            视频的宽度
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseMessageFileOption.count">
            <summary>
            最多可以选择的文件个数，可以 0～100
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseMessageFileOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseMessageFileOption.extension">
            <summary>
            需要基础库： `2.6.0`
            根据文件拓展名过滤，仅 type==file 时有效。每一项都不能是空字符串。默认不过滤。
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseMessageFileOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseMessageFileOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseMessageFileOption.type">
            <summary>
            所选的文件的类型
            可选值：
            - 'all': 从所有文件选择;
            - 'video': 只能选择视频文件;
            - 'image': 只能选择图片文件;
            - 'file': 可以选择除了图片和视频之外的其它的文件;
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseMessageFileSuccessCallbackResult.tempFiles">
            <summary>
            返回选择的文件的本地临时文件对象数组
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseFile.name">
            <summary>
            选择的文件名称
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseFile.path">
            <summary>
            本地临时文件路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseFile.size">
            <summary>
            本地临时文件大小，单位 B
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseFile.time">
            <summary>
            选择的文件的会话发送时间，Unix时间戳，工具暂不支持此属性
            </summary>
        </member>
        <member name="F:WeChatWASM.ChooseFile.type">
            <summary>
            选择的文件类型
            可选值：
            - 'video': 选择了视频文件;
            - 'image': 选择了图片文件;
            - 'file': 选择了除图片和视频的文件;
            </summary>
        </member>
        <member name="F:WeChatWASM.CloseBLEConnectionOption.deviceId">
            <summary>
            蓝牙设备 id
            </summary>
        </member>
        <member name="F:WeChatWASM.CloseBLEConnectionOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.CloseBLEConnectionOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.CloseBLEConnectionOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.BluetoothError.errMsg">
            <summary>
            错误信息
            | 错误码 | 错误信息 | 说明 |
            | - | - | - |
            | 0 | ok | 正常 |
            | -1 | already connect | 已连接 |
            | 10000 | not init | 未初始化蓝牙适配器 |
            | 10001 | not available | 当前蓝牙适配器不可用 |
            | 10002 | no device | 没有找到指定设备 |
            | 10003 | connection fail | 连接失败 |
            | 10004 | no service | 没有找到指定服务 |
            | 10005 | no characteristic | 没有找到指定特征 |
            | 10006 | no connection | 当前连接已断开 |
            | 10007 | property not support | 当前特征不支持此操作 |
            | 10008 | system error | 其余所有系统上报的异常 |
            | 10009 | system not support | Android 系统特有，系统版本低于 4.3 不支持 BLE |
            | 10012 | operate time out | 连接超时 |
            | 10013 | invalid_data | 连接 deviceId 为空或者是格式不正确 |
            </summary>
        </member>
        <member name="F:WeChatWASM.BluetoothError.errCode">
            <summary>
            错误码
            | 错误码 | 错误信息 | 说明 |
            | - | - | - |
            | 0 | ok | 正常 |
            | -1 | already connect | 已连接 |
            | 10000 | not init | 未初始化蓝牙适配器 |
            | 10001 | not available | 当前蓝牙适配器不可用 |
            | 10002 | no device | 没有找到指定设备 |
            | 10003 | connection fail | 连接失败 |
            | 10004 | no service | 没有找到指定服务 |
            | 10005 | no characteristic | 没有找到指定特征 |
            | 10006 | no connection | 当前连接已断开 |
            | 10007 | property not support | 当前特征不支持此操作 |
            | 10008 | system error | 其余所有系统上报的异常 |
            | 10009 | system not support | Android 系统特有，系统版本低于 4.3 不支持 BLE |
            | 10012 | operate time out | 连接超时 |
            | 10013 | invalid_data | 连接 deviceId 为空或者是格式不正确 |
            </summary>
        </member>
        <member name="F:WeChatWASM.CloseBluetoothAdapterOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.CloseBluetoothAdapterOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.CloseBluetoothAdapterOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.CompressImageOption.src">
            <summary>
            图片路径，图片的路径，支持本地路径、代码包路径
            </summary>
        </member>
        <member name="F:WeChatWASM.CompressImageOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.CompressImageOption.compressedHeight">
            <summary>
            需要基础库： `2.26.0`
            压缩后图片的高度，单位为px，若不填写则默认以compressedWidth为准等比缩放
            </summary>
        </member>
        <member name="F:WeChatWASM.CompressImageOption.compressedWidth">
            <summary>
            需要基础库： `2.26.0`
            压缩后图片的宽度，单位为px，若不填写则默认以compressedHeight为准等比缩放。
            </summary>
        </member>
        <member name="F:WeChatWASM.CompressImageOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.CompressImageOption.quality">
            <summary>
            压缩质量，范围0～100，数值越小，质量越低，压缩率越高（仅对jpg有效）。
            </summary>
        </member>
        <member name="F:WeChatWASM.CompressImageOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.CompressImageSuccessCallbackResult.tempFilePath">
            <summary>
            压缩后图片的临时文件路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateBLEConnectionOption.deviceId">
            <summary>
            蓝牙设备 id
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateBLEConnectionOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateBLEConnectionOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateBLEConnectionOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateBLEConnectionOption.timeout">
            <summary>
            超时时间，单位 ms，不填表示不会超时
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateBLEPeripheralServerOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateBLEPeripheralServerOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateBLEPeripheralServerOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.CreateBLEPeripheralServerSuccessCallbackResult.server">
            <summary>
            [BLEPeripheralServer](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/BLEPeripheralServer.html)
            外围设备的服务端。
            </summary>
        </member>
        <member name="M:WeChatWASM.BLEPeripheralServer.addService(WeChatWASM.AddServiceOption)">
            <summary>
            [BLEPeripheralServer.addService(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/BLEPeripheralServer.addService.html)
            需要基础库： `2.10.3`
            添加服务。
            </summary>
        </member>
        <member name="M:WeChatWASM.BLEPeripheralServer.offCharacteristicReadRequest(System.Action{WeChatWASM.OnCharacteristicReadRequestListenerResult})">
            <summary>
            [BLEPeripheralServer.offCharacteristicReadRequest(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/BLEPeripheralServer.offCharacteristicReadRequest.html)
            需要基础库： `2.10.3`
            移除已连接的设备请求读当前外围设备的特征值事件的监听函数
            **示例代码**
            ```js
            const listener = function (res) { console.log(res) }
            BLEPeripheralServer.onCharacteristicReadRequest(listener)
            BLEPeripheralServer.offCharacteristicReadRequest(listener) // 需传入与监听时同一个的函数对象
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.BLEPeripheralServer.offCharacteristicSubscribed(System.Action{WeChatWASM.OnCharacteristicSubscribedListenerResult})">
            <summary>
            [BLEPeripheralServer.offCharacteristicSubscribed(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/BLEPeripheralServer.offCharacteristicSubscribed.html)
            需要基础库： `2.13.0`
            移除特征订阅事件的监听函数
            **示例代码**
            ```js
            const listener = function (res) { console.log(res) }
            BLEPeripheralServer.onCharacteristicSubscribed(listener)
            BLEPeripheralServer.offCharacteristicSubscribed(listener) // 需传入与监听时同一个的函数对象
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.BLEPeripheralServer.offCharacteristicUnsubscribed(System.Action{WeChatWASM.OnCharacteristicSubscribedListenerResult})">
            <summary>
            [BLEPeripheralServer.offCharacteristicUnsubscribed(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/BLEPeripheralServer.offCharacteristicUnsubscribed.html)
            需要基础库： `2.13.0`
            移除取消特征订阅事件的监听函数
            **示例代码**
            ```js
            const listener = function (res) { console.log(res) }
            BLEPeripheralServer.onCharacteristicUnsubscribed(listener)
            BLEPeripheralServer.offCharacteristicUnsubscribed(listener) // 需传入与监听时同一个的函数对象
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.BLEPeripheralServer.offCharacteristicWriteRequest(System.Action{WeChatWASM.OnCharacteristicWriteRequestListenerResult})">
            <summary>
            [BLEPeripheralServer.offCharacteristicWriteRequest(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/BLEPeripheralServer.offCharacteristicWriteRequest.html)
            需要基础库： `2.10.3`
            移除已连接的设备请求写当前外围设备的特征值事件的监听函数
            **示例代码**
            ```js
            const listener = function (res) { console.log(res) }
            BLEPeripheralServer.onCharacteristicWriteRequest(listener)
            BLEPeripheralServer.offCharacteristicWriteRequest(listener) // 需传入与监听时同一个的函数对象
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.BLEPeripheralServer.onCharacteristicReadRequest(System.Action{WeChatWASM.OnCharacteristicReadRequestListenerResult})">
            <summary>
            [BLEPeripheralServer.onCharacteristicReadRequest(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/BLEPeripheralServer.onCharacteristicReadRequest.html)
            需要基础库： `2.10.3`
            监听已连接的设备请求读当前外围设备的特征值事件。收到该消息后需要立刻调用 [writeCharacteristicValue](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/BLEPeripheralServer.writeCharacteristicValue.html) 写回数据，否则主机不会收到响应。
            </summary>
        </member>
        <member name="M:WeChatWASM.BLEPeripheralServer.onCharacteristicSubscribed(System.Action{WeChatWASM.OnCharacteristicSubscribedListenerResult})">
            <summary>
            [BLEPeripheralServer.onCharacteristicSubscribed(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/BLEPeripheralServer.onCharacteristicSubscribed.html)
            需要基础库： `2.13.0`
            监听特征订阅事件，仅 iOS 支持。
            </summary>
        </member>
        <member name="M:WeChatWASM.BLEPeripheralServer.onCharacteristicUnsubscribed(System.Action{WeChatWASM.OnCharacteristicSubscribedListenerResult})">
            <summary>
            [BLEPeripheralServer.onCharacteristicUnsubscribed(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/BLEPeripheralServer.onCharacteristicUnsubscribed.html)
            需要基础库： `2.13.0`
            监听取消特征订阅事件，仅 iOS 支持。
            </summary>
        </member>
        <member name="M:WeChatWASM.BLEPeripheralServer.onCharacteristicWriteRequest(System.Action{WeChatWASM.OnCharacteristicWriteRequestListenerResult})">
            <summary>
            [BLEPeripheralServer.onCharacteristicWriteRequest(function listener)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/BLEPeripheralServer.onCharacteristicWriteRequest.html)
            需要基础库： `2.10.3`
            监听已连接的设备请求写当前外围设备的特征值事件。收到该消息后需要立刻调用 [writeCharacteristicValue](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/BLEPeripheralServer.writeCharacteristicValue.html) 写回数据，否则主机不会收到响应。
            </summary>
        </member>
        <member name="M:WeChatWASM.BLEPeripheralServer.removeService(WeChatWASM.RemoveServiceOption)">
            <summary>
            [BLEPeripheralServer.removeService(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/BLEPeripheralServer.removeService.html)
            需要基础库： `2.10.3`
            移除服务。
            </summary>
        </member>
        <member name="M:WeChatWASM.BLEPeripheralServer.startAdvertising(WeChatWASM.StartAdvertisingObject)">
            <summary>
            [BLEPeripheralServer.startAdvertising(Object Object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/BLEPeripheralServer.startAdvertising.html)
            需要基础库： `2.10.3`
            开始广播本地创建的外围设备。
            **注意**
            - Android 8.0.9 开始，支持直接使用 16/32/128 位 UUID；
            - Android 8.0.9 以下版本只支持 128 位 UUID，使用 16/32 位的 UUID 时需要进行补位（系统会自动识别是否属于预分配区间），可以参考[蓝牙指南](#)；
            - iOS 必须直接使用 16 位的 UUID，不能补位到 128 位，否则系统组包时仍会按照 128 位传输。iOS 暂不支持 32 位 UUID。
            - iOS 同时只能发起一个广播，安卓支持同时发起多个广播。
            - 传 beacon 参数时，不能同时传入 deviceName，serviceUuids，manufacturerData 参数。
            </summary>
        </member>
        <member name="M:WeChatWASM.BLEPeripheralServer.stopAdvertising(WeChatWASM.StopAdvertisingOption)">
            <summary>
            [BLEPeripheralServer.stopAdvertising(Object object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/BLEPeripheralServer.stopAdvertising.html)
            需要基础库： `2.10.3`
            停止广播。
            </summary>
        </member>
        <member name="M:WeChatWASM.BLEPeripheralServer.writeCharacteristicValue(WeChatWASM.WriteCharacteristicValueObject)">
            <summary>
            [BLEPeripheralServer.writeCharacteristicValue(Object Object)](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/BLEPeripheralServer.writeCharacteristicValue.html)
            需要基础库： `2.10.3`
            往指定特征写入二进制数据值，并通知已连接的主机，从机的特征值已发生变化，该接口会处理是走回包还是走订阅。
            </summary>
        </member>
        <member name="F:WeChatWASM.AddServiceOption.service">
            <summary>
            描述service的Object
            </summary>
        </member>
        <member name="F:WeChatWASM.AddServiceOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.AddServiceOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.AddServiceOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.BLEPeripheralService.characteristics">
            <summary>
            characteristics列表
            </summary>
        </member>
        <member name="F:WeChatWASM.BLEPeripheralService.uuid">
            <summary>
            蓝牙服务的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.Characteristic.uuid">
            <summary>
            characteristic 的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.Characteristic.descriptors">
            <summary>
            描述符数据
            </summary>
        </member>
        <member name="F:WeChatWASM.Characteristic.permission">
            <summary>
            特征权限
            </summary>
        </member>
        <member name="F:WeChatWASM.Characteristic.properties">
            <summary>
            特征支持的操作
            </summary>
        </member>
        <member name="F:WeChatWASM.Characteristic.value">
            <summary>
            特征对应的二进制值
            </summary>
        </member>
        <member name="F:WeChatWASM.Descriptor.uuid">
            <summary>
            Descriptor 的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.Descriptor.permission">
            <summary>
            描述符的权限
            </summary>
        </member>
        <member name="F:WeChatWASM.Descriptor.value">
            <summary>
            描述符数据
            </summary>
        </member>
        <member name="F:WeChatWASM.DescriptorPermission.read">
            <summary>
            读
            </summary>
        </member>
        <member name="F:WeChatWASM.DescriptorPermission.write">
            <summary>
            写
            </summary>
        </member>
        <member name="F:WeChatWASM.CharacteristicPermission.readEncryptionRequired">
            <summary>
            加密读请求
            </summary>
        </member>
        <member name="F:WeChatWASM.CharacteristicPermission.readable">
            <summary>
            可读
            </summary>
        </member>
        <member name="F:WeChatWASM.CharacteristicPermission.writeEncryptionRequired">
            <summary>
            加密写请求
            </summary>
        </member>
        <member name="F:WeChatWASM.CharacteristicPermission.writeable">
            <summary>
            可写
            </summary>
        </member>
        <member name="F:WeChatWASM.CharacteristicProperties.indicate">
            <summary>
            回包
            </summary>
        </member>
        <member name="F:WeChatWASM.CharacteristicProperties.notify">
            <summary>
            订阅
            </summary>
        </member>
        <member name="F:WeChatWASM.CharacteristicProperties.read">
            <summary>
            读
            </summary>
        </member>
        <member name="F:WeChatWASM.CharacteristicProperties.write">
            <summary>
            写
            </summary>
        </member>
        <member name="F:WeChatWASM.CharacteristicProperties.writeNoResponse">
            <summary>
            无回复写
            </summary>
        </member>
        <member name="F:WeChatWASM.OnCharacteristicReadRequestListenerResult.callbackId">
            <summary>
            唯一标识码，调用 [writeCharacteristicValue](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/BLEPeripheralServer.writeCharacteristicValue.html) 时使用
            </summary>
        </member>
        <member name="F:WeChatWASM.OnCharacteristicReadRequestListenerResult.characteristicId">
            <summary>
            蓝牙特征的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.OnCharacteristicReadRequestListenerResult.serviceId">
            <summary>
            蓝牙特征对应服务的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.OnCharacteristicSubscribedListenerResult.characteristicId">
            <summary>
            蓝牙特征的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.OnCharacteristicSubscribedListenerResult.serviceId">
            <summary>
            蓝牙特征对应服务的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.OnCharacteristicWriteRequestListenerResult.callbackId">
            <summary>
            唯一标识码，调用 [writeCharacteristicValue](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-peripheral/BLEPeripheralServer.writeCharacteristicValue.html) 时使用
            </summary>
        </member>
        <member name="F:WeChatWASM.OnCharacteristicWriteRequestListenerResult.characteristicId">
            <summary>
            蓝牙特征的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.OnCharacteristicWriteRequestListenerResult.serviceId">
            <summary>
            蓝牙特征对应服务的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.OnCharacteristicWriteRequestListenerResult.value">
            <summary>
            请求写入特征的二进制数据值
            </summary>
        </member>
        <member name="F:WeChatWASM.RemoveServiceOption.serviceId">
            <summary>
            service 的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.RemoveServiceOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.RemoveServiceOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.RemoveServiceOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StartAdvertisingObject.advertiseRequest">
            <summary>
            广播自定义参数
            </summary>
        </member>
        <member name="F:WeChatWASM.StartAdvertisingObject.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.StartAdvertisingObject.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StartAdvertisingObject.powerLevel">
            <summary>
            广播功率
            可选值：
            - 'low': 功率低;
            - 'medium': 功率适中;
            - 'high': 功率高;
            </summary>
        </member>
        <member name="F:WeChatWASM.StartAdvertisingObject.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.AdvertiseReqObj.beacon">
            <summary>
            需要基础库： `2.20.1`
            以 beacon 设备形式广播的参数。
            </summary>
        </member>
        <member name="F:WeChatWASM.AdvertiseReqObj.connectable">
            <summary>
            当前设备是否可连接
            </summary>
        </member>
        <member name="F:WeChatWASM.AdvertiseReqObj.deviceName">
            <summary>
            广播中 deviceName 字段，默认为空
            </summary>
        </member>
        <member name="F:WeChatWASM.AdvertiseReqObj.manufacturerData">
            <summary>
            广播的制造商信息。仅安卓支持，iOS 因系统限制无法定制。
            </summary>
        </member>
        <member name="F:WeChatWASM.AdvertiseReqObj.serviceUuids">
            <summary>
            要广播的服务 UUID 列表。使用 16/32 位 UUID 时请参考注意事项。
            </summary>
        </member>
        <member name="F:WeChatWASM.BeaconInfoObj.major">
            <summary>
            Beacon 设备的主 ID
            </summary>
        </member>
        <member name="F:WeChatWASM.BeaconInfoObj.minor">
            <summary>
            Beacon 设备的次 ID
            </summary>
        </member>
        <member name="F:WeChatWASM.BeaconInfoObj.uuid">
            <summary>
            Beacon 设备广播的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.BeaconInfoObj.measuredPower">
            <summary>
            用于判断距离设备 1 米时 RSSI 大小的参考值
            </summary>
        </member>
        <member name="F:WeChatWASM.ManufacturerData.manufacturerId">
            <summary>
            制造商ID，0x 开头的十六进制
            </summary>
        </member>
        <member name="F:WeChatWASM.ManufacturerData.manufacturerSpecificData">
            <summary>
            制造商信息
            </summary>
        </member>
        <member name="F:WeChatWASM.StopAdvertisingOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.StopAdvertisingOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StopAdvertisingOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteCharacteristicValueObject.characteristicId">
            <summary>
            蓝牙特征的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteCharacteristicValueObject.needNotify">
            <summary>
            是否需要通知主机 value 已更新
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteCharacteristicValueObject.serviceId">
            <summary>
            蓝牙特征对应服务的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteCharacteristicValueObject.value">
            <summary>
            characteristic 对应的二进制值
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteCharacteristicValueObject.callbackId">
            <summary>
            可选，处理回包时使用
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteCharacteristicValueObject.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteCharacteristicValueObject.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteCharacteristicValueObject.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ExitMiniProgramOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.ExitMiniProgramOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ExitMiniProgramOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ExitVoIPChatOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.ExitVoIPChatOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ExitVoIPChatOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceDetectOption.frameBuffer">
            <summary>
            图像像素点数据，每四项表示一个像素点的 RGBA
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceDetectOption.height">
            <summary>
            图像高度
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceDetectOption.width">
            <summary>
            图像宽度
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceDetectOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceDetectOption.enableAngle">
            <summary>
            是否返回当前图像的人脸角度信息
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceDetectOption.enableConf">
            <summary>
            是否返回当前图像的人脸的置信度（可表示器官遮挡情况）
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceDetectOption.enableMultiFace">
            <summary>
            是否返回多张人脸的信息
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceDetectOption.enablePoint">
            <summary>
            是否返回当前图像的人脸（106 个点）
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceDetectOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceDetectOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceDetectSuccessCallbackResult.angleArray">
            <summary>
            人脸角度信息，取值范围 [-1, 1]，数值越接近 0 表示越正对摄像头
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceDetectSuccessCallbackResult.confArray">
            <summary>
            人脸置信度，取值范围 [0, 1]，数值越大置信度越高（遮挡越少）
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceDetectSuccessCallbackResult.detectRect">
            <summary>
            脸部方框数值，对象包含 height, width, originX, originY 四个属性 (origin 为方框左上角坐标)
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceDetectSuccessCallbackResult.faceInfo">
            <summary>
            多人模式（enableMultiFace）下的人脸信息，每个对象包含上述其它属性
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceDetectSuccessCallbackResult.pointArray">
            <summary>
            标记人脸轮廓的 106 个点位置数组，数组每个对象包含 x 和 y
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceDetectSuccessCallbackResult.x">
            <summary>
            脸部中心点横坐标，检测不到人脸则为 -1
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceDetectSuccessCallbackResult.y">
            <summary>
            脸部中心点纵坐标，检测不到人脸则为 -1
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceAngel.pitch">
            <summary>
            仰俯角（点头）
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceAngel.roll">
            <summary>
            翻滚角（左右倾）
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceAngel.yaw">
            <summary>
            偏航角（摇头）
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceConf.global">
            <summary>
            整体可信度
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceConf.leftEye">
            <summary>
            左眼可信度
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceConf.mouth">
            <summary>
            嘴巴可信度
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceConf.nose">
            <summary>
            鼻子可信度
            </summary>
        </member>
        <member name="F:WeChatWASM.FaceConf.rightEye">
            <summary>
            右眼可信度
            </summary>
        </member>
        <member name="F:WeChatWASM.GetAvailableAudioSourcesOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetAvailableAudioSourcesOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetAvailableAudioSourcesOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetAvailableAudioSourcesSuccessCallbackResult.audioSources">
            <summary>
            支持的音频输入源列表，可在 [RecorderManager.start()](https://developers.weixin.qq.com/minigame/dev/api/media/recorder/RecorderManager.start.html) 接口中使用。返回值定义参考 https://developer.android.com/reference/kotlin/android/media/MediaRecorder.AudioSource
            可选值：
            - 'auto': 自动设置，默认使用手机麦克风，插上耳麦后自动切换使用耳机麦克风，所有平台适用;
            - 'buildInMic': 手机麦克风，仅限 iOS;
            - 'headsetMic': 耳机麦克风，仅限 iOS;
            - 'mic': 麦克风（没插耳麦时是手机麦克风，插耳麦时是耳机麦克风），仅限 Android;
            - 'camcorder': 同 mic，适用于录制音视频内容，仅限 Android;
            - 'voice_communication': 同 mic，适用于实时沟通，仅限 Android;
            - 'voice_recognition': 同 mic，适用于语音识别，仅限 Android;
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEDeviceCharacteristicsOption.deviceId">
            <summary>
            蓝牙设备 id。需要已经通过 [wx.createBLEConnection](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.createBLEConnection.html) 建立连接
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEDeviceCharacteristicsOption.serviceId">
            <summary>
            蓝牙服务 UUID。需要先调用 [wx.getBLEDeviceServices](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.getBLEDeviceServices.html) 获取
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEDeviceCharacteristicsOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEDeviceCharacteristicsOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEDeviceCharacteristicsOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEDeviceCharacteristicsSuccessCallbackResult.characteristics">
            <summary>
            设备特征列表
            </summary>
        </member>
        <member name="F:WeChatWASM.BLECharacteristic.properties">
            <summary>
            该特征支持的操作类型
            </summary>
        </member>
        <member name="F:WeChatWASM.BLECharacteristic.uuid">
            <summary>
            蓝牙设备特征的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.BLECharacteristicProperties.indicate">
            <summary>
            该特征是否支持 indicate 操作
            </summary>
        </member>
        <member name="F:WeChatWASM.BLECharacteristicProperties.notify">
            <summary>
            该特征是否支持 notify 操作
            </summary>
        </member>
        <member name="F:WeChatWASM.BLECharacteristicProperties.read">
            <summary>
            该特征是否支持 read 操作
            </summary>
        </member>
        <member name="F:WeChatWASM.BLECharacteristicProperties.write">
            <summary>
            该特征是否支持 write 操作
            </summary>
        </member>
        <member name="F:WeChatWASM.BLECharacteristicProperties.writeDefault">
            <summary>
            该特征是否支持有回复写操作
            </summary>
        </member>
        <member name="F:WeChatWASM.BLECharacteristicProperties.writeNoResponse">
            <summary>
            该特征是否支持无回复写操作
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEDeviceRSSIOption.deviceId">
            <summary>
            蓝牙设备 id
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEDeviceRSSIOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEDeviceRSSIOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEDeviceRSSIOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEDeviceRSSISuccessCallbackResult.RSSI">
            <summary>
            信号强度，单位 dBm
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEDeviceServicesOption.deviceId">
            <summary>
            蓝牙设备 id。需要已经通过 [wx.createBLEConnection](https://developers.weixin.qq.com/minigame/dev/api/device/bluetooth-ble/wx.createBLEConnection.html) 建立连接
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEDeviceServicesOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEDeviceServicesOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEDeviceServicesOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEDeviceServicesSuccessCallbackResult.services">
            <summary>
            设备服务列表
            </summary>
        </member>
        <member name="F:WeChatWASM.BLEService.isPrimary">
            <summary>
            该服务是否为主服务
            </summary>
        </member>
        <member name="F:WeChatWASM.BLEService.uuid">
            <summary>
            蓝牙设备服务的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEMTUOption.deviceId">
            <summary>
            蓝牙设备 id
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEMTUOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEMTUOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEMTUOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEMTUOption.writeType">
            <summary>
            写模式 （iOS 特有参数）
            可选值：
            - 'write': 有回复写;
            - 'writeNoResponse': 无回复写;
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBLEMTUSuccessCallbackResult.mtu">
            <summary>
            最大传输单元
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBackgroundFetchDataOption.fetchType">
            <summary>
            缓存数据类别，取值为 periodic 或 pre
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBackgroundFetchDataOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBackgroundFetchDataOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBackgroundFetchDataOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBackgroundFetchDataSuccessCallbackResult.fetchedData">
            <summary>
            缓存数据
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBackgroundFetchDataSuccessCallbackResult.path">
            <summary>
            小程序页面路径
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBackgroundFetchDataSuccessCallbackResult.query">
            <summary>
            传给页面的 query 参数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBackgroundFetchDataSuccessCallbackResult.scene">
            <summary>
            进入小程序的场景值
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBackgroundFetchDataSuccessCallbackResult.timeStamp">
            <summary>
            客户端拿到缓存数据的时间戳 ms。(iOS 时间戳存在异常，8.0.27 修复)
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBackgroundFetchTokenOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBackgroundFetchTokenOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBackgroundFetchTokenOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBackgroundFetchTokenSuccessCallbackResult.errMsg">
            <summary>
            接口调用结果
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBackgroundFetchTokenSuccessCallbackResult.token">
            <summary>
            自定义的登录态
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBatteryInfoOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBatteryInfoOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBatteryInfoOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBatteryInfoSuccessCallbackResult.isCharging">
            <summary>
            是否正在充电中
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBatteryInfoSuccessCallbackResult.level">
            <summary>
            设备电量，范围 1 - 100
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBeaconsOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBeaconsOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBeaconsOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.BeaconError.errMsg">
            <summary>
            错误信息
            | 错误码 | 错误信息 | 说明 |
            | - | - | - |
            | 0 | ok | 正常 |
            | 11000 | unsupport | 系统或设备不支持 |
            | 11001 | bluetooth service unavailable | 蓝牙服务不可用 |
            | 11002 | location service unavailable | 位置服务不可用 |
            | 11003 | already start | 已经开始搜索 |
            | 11004 | not startBeaconDiscovery | 还未开始搜索 |
            | 11005 | system error | 系统错误 |
            | 11006 | invalid data | 参数不正确 |
            </summary>
        </member>
        <member name="F:WeChatWASM.BeaconError.errCode">
            <summary>
            错误码
            | 错误码 | 错误信息 | 说明 |
            | - | - | - |
            | 0 | ok | 正常 |
            | 11000 | unsupport | 系统或设备不支持 |
            | 11001 | bluetooth service unavailable | 蓝牙服务不可用 |
            | 11002 | location service unavailable | 位置服务不可用 |
            | 11003 | already start | 已经开始搜索 |
            | 11004 | not startBeaconDiscovery | 还未开始搜索 |
            | 11005 | system error | 系统错误 |
            | 11006 | invalid data | 参数不正确 |
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBeaconsSuccessCallbackResult.beacons">
            <summary>
            Beacon 设备列表
            </summary>
        </member>
        <member name="F:WeChatWASM.BeaconInfo.accuracy">
            <summary>
            Beacon 设备的距离，单位 m。iOS 上，proximity 为 0 时，accuracy 为 -1。
            </summary>
        </member>
        <member name="F:WeChatWASM.BeaconInfo.major">
            <summary>
            Beacon 设备的主 ID
            </summary>
        </member>
        <member name="F:WeChatWASM.BeaconInfo.minor">
            <summary>
            Beacon 设备的次 ID
            </summary>
        </member>
        <member name="F:WeChatWASM.BeaconInfo.proximity">
            <summary>
            表示设备距离的枚举值（仅iOS）
            可选值：
            - 0: 信号太弱不足以计算距离，或非 iOS 设备;
            - 1: 十分近;
            - 2: 比较近;
            - 3: 远;
            </summary>
        </member>
        <member name="F:WeChatWASM.BeaconInfo.rssi">
            <summary>
            表示设备的信号强度，单位 dBm
            </summary>
        </member>
        <member name="F:WeChatWASM.BeaconInfo.uuid">
            <summary>
            Beacon 设备广播的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBluetoothAdapterStateOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBluetoothAdapterStateOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBluetoothAdapterStateOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBluetoothAdapterStateSuccessCallbackResult.available">
            <summary>
            蓝牙适配器是否可用
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBluetoothAdapterStateSuccessCallbackResult.discovering">
            <summary>
            是否正在搜索设备
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBluetoothDevicesOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBluetoothDevicesOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBluetoothDevicesOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetBluetoothDevicesSuccessCallbackResult.devices">
            <summary>
            UUID 对应的已连接设备列表
            </summary>
        </member>
        <member name="F:WeChatWASM.BlueToothDevice.RSSI">
            <summary>
            当前蓝牙设备的信号强度，单位 dBm
            </summary>
        </member>
        <member name="F:WeChatWASM.BlueToothDevice.advertisData">
            <summary>
            当前蓝牙设备的广播数据段中的 ManufacturerData 数据段。
            </summary>
        </member>
        <member name="F:WeChatWASM.BlueToothDevice.advertisServiceUUIDs">
            <summary>
            当前蓝牙设备的广播数据段中的 ServiceUUIDs 数据段
            </summary>
        </member>
        <member name="F:WeChatWASM.BlueToothDevice.connectable">
            <summary>
            当前蓝牙设备是否可连接（ Android 8.0 以下不支持返回该值 ）
            </summary>
        </member>
        <member name="F:WeChatWASM.BlueToothDevice.deviceId">
            <summary>
            蓝牙设备 id
            </summary>
        </member>
        <member name="F:WeChatWASM.BlueToothDevice.localName">
            <summary>
            当前蓝牙设备的广播数据段中的 LocalName 数据段
            </summary>
        </member>
        <member name="F:WeChatWASM.BlueToothDevice.name">
            <summary>
            蓝牙设备名称，某些设备可能没有
            </summary>
        </member>
        <member name="F:WeChatWASM.BlueToothDevice.serviceData">
            <summary>
            当前蓝牙设备的广播数据段中的 ServiceData 数据段
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveInfoOption.finderUserName">
            <summary>
            视频号 id，以“sph”开头的id，可在视频号助手获取
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveInfoOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveInfoOption.endTime">
            <summary>
            需要基础库： `2.29.0`
            结束时间，筛选指定时间段的直播。若上传了startTime，未上传endTime，则endTime默认取当前时间
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveInfoOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveInfoOption.startTime">
            <summary>
            需要基础库： `2.29.0`
            起始时间，筛选指定时间段的直播。若上传了endTime，未上传startTime，则startTime默认为0
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveInfoOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveInfoSuccessCallbackResult.description">
            <summary>
            直播主题
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveInfoSuccessCallbackResult.feedId">
            <summary>
            直播 feedId
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveInfoSuccessCallbackResult.headUrl">
            <summary>
            视频号头像
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveInfoSuccessCallbackResult.nickname">
            <summary>
            视频号昵称
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveInfoSuccessCallbackResult.nonceId">
            <summary>
            直播 nonceId
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveInfoSuccessCallbackResult.otherInfos">
            <summary>
            需要基础库： `2.29.0`
            除最近的一条直播外，其他的直播列表（注意：每次最多返回按时间戳增序排列的15个直播信息，其中时间最近的那个直播会在接口其他的返回参数中展示，其余的直播会在该字段中展示）。
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveInfoSuccessCallbackResult.replayStatus">
            <summary>
            需要基础库： `2.29.0`
            直播回放状态
            可选值：
            - 0: 未生成;
            - 1: 已生成;
            - 3: 生成中;
            - 6: 已过期;
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveInfoSuccessCallbackResult.status">
            <summary>
            直播状态
            可选值：
            - 2: 直播中;
            - 3: 直播结束;
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveNoticeInfoOption.finderUserName">
            <summary>
            视频号 id，以“sph”开头的id，可在视频号助手获取
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveNoticeInfoOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveNoticeInfoOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveNoticeInfoOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveNoticeInfoSuccessCallbackResult.headUrl">
            <summary>
            直播封面
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveNoticeInfoSuccessCallbackResult.nickname">
            <summary>
            视频号昵称
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveNoticeInfoSuccessCallbackResult.noticeId">
            <summary>
            预告 id
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveNoticeInfoSuccessCallbackResult.otherInfos">
            <summary>
            需要基础库： `2.24.6`
            除最近的一条预告信息外，其他的预告信息列表（注意：每次最多返回按时间戳增序排列的15个预告信息，其中时间最近的那个预告信息会在接口其他的返回参数中展示，其余的预告信息会在该字段中展示）。
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveNoticeInfoSuccessCallbackResult.reservable">
            <summary>
            是否可预约
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveNoticeInfoSuccessCallbackResult.startTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="F:WeChatWASM.GetChannelsLiveNoticeInfoSuccessCallbackResult.status">
            <summary>
            预告状态：0可用 1取消 2已用
            </summary>
        </member>
        <member name="F:WeChatWASM.GetClipboardDataOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetClipboardDataOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetClipboardDataOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetClipboardDataSuccessCallbackOption.data">
            <summary>
            剪贴板的内容
            </summary>
        </member>
        <member name="F:WeChatWASM.GetConnectedBluetoothDevicesOption.services">
            <summary>
            蓝牙设备主服务的 UUID 列表（支持 16/32/128 位 UUID）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetConnectedBluetoothDevicesOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetConnectedBluetoothDevicesOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetConnectedBluetoothDevicesOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetConnectedBluetoothDevicesSuccessCallbackResult.devices">
            <summary>
            搜索到的设备列表
            </summary>
        </member>
        <member name="F:WeChatWASM.BluetoothDeviceInfo.deviceId">
            <summary>
            用于区分设备的 id
            </summary>
        </member>
        <member name="F:WeChatWASM.BluetoothDeviceInfo.name">
            <summary>
            蓝牙设备名称，某些设备可能没有
            </summary>
        </member>
        <member name="F:WeChatWASM.GetExtConfigOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetExtConfigOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetExtConfigOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetExtConfigSuccessCallbackResult.extConfig">
            <summary>
            第三方平台自定义的数据
            </summary>
        </member>
        <member name="F:WeChatWASM.GetFuzzyLocationOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetFuzzyLocationOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetFuzzyLocationOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetFuzzyLocationOption.type">
            <summary>
            返回的坐标类型
            可选值：
            - 'wgs84': 返回 gps 坐标;
            - 'gcj02': 返回 gcj02 坐标;
            </summary>
        </member>
        <member name="F:WeChatWASM.GetFuzzyLocationSuccessCallbackResult.latitude">
            <summary>
            纬度，范围为 -90~90，负数表示南纬
            </summary>
        </member>
        <member name="F:WeChatWASM.GetFuzzyLocationSuccessCallbackResult.longitude">
            <summary>
            经度，范围为 -180~180，负数表示西经
            </summary>
        </member>
        <member name="F:WeChatWASM.GetGameClubDataOption.dataTypeList">
            <summary>
            需要获取的数据指标的对象数组
            </summary>
        </member>
        <member name="F:WeChatWASM.GetGameClubDataOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetGameClubDataOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetGameClubDataOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.DataType.type">
            <summary>
            见type表格说明
            </summary>
        </member>
        <member name="F:WeChatWASM.DataType.subKey">
            <summary>
            部分type需要传，见type表格说明
            </summary>
        </member>
        <member name="F:WeChatWASM.GetGameClubDataSuccessCallbackResult.cloudID">
            <summary>
            敏感数据对应的云 ID，开通云开发的小程序才会返回，可通过[云调用直接获取开放数据](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html)
            </summary>
        </member>
        <member name="F:WeChatWASM.GetGameClubDataSuccessCallbackResult.encryptedData">
            <summary>
            包括 GameClubData 在内的加密数据，详见[加密数据解密算法](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html)
            </summary>
        </member>
        <member name="F:WeChatWASM.GetGameClubDataSuccessCallbackResult.iv">
            <summary>
            加密算法的初始向量
            </summary>
        </member>
        <member name="F:WeChatWASM.GetGameClubDataSuccessCallbackResult.signature">
            <summary>
            使用 sha1( rawData + sessionkey ) 得到字符串，用于校验用户信息
            </summary>
        </member>
        <member name="F:WeChatWASM.GetGroupEnterInfoOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetGroupEnterInfoOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetGroupEnterInfoOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetGroupEnterInfoSuccessCallbackResult.cloudID">
            <summary>
            需要基础库： `2.7.0`
            敏感数据对应的云 ID，开通[云开发](https://developers.weixin.qq.com/minigame/dev/wxcloud/basis/getting-started.html)的小程序才会返回，可通过云调用直接获取开放数据，详细见[云调用直接获取开放数据](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html#method-cloud)
            </summary>
        </member>
        <member name="F:WeChatWASM.GetGroupEnterInfoSuccessCallbackResult.encryptedData">
            <summary>
            包括敏感数据在内的完整转发信息的加密数据，详细见[加密数据解密算法](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html)
            </summary>
        </member>
        <member name="F:WeChatWASM.GetGroupEnterInfoSuccessCallbackResult.errMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:WeChatWASM.GetGroupEnterInfoSuccessCallbackResult.iv">
            <summary>
            加密算法的初始向量，详细见[加密数据解密算法](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html)
            </summary>
        </member>
        <member name="F:WeChatWASM.GetInferenceEnvInfoOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetInferenceEnvInfoOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetInferenceEnvInfoOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetInferenceEnvInfoSuccessCallbackResult.ver">
            <summary>
            AI推理引擎版本
            </summary>
        </member>
        <member name="F:WeChatWASM.GetLocalIPAddressOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetLocalIPAddressOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetLocalIPAddressOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetLocalIPAddressSuccessCallbackResult.errMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:WeChatWASM.GetLocalIPAddressSuccessCallbackResult.localip">
            <summary>
            本机局域网IP地址
            </summary>
        </member>
        <member name="F:WeChatWASM.GetLocalIPAddressSuccessCallbackResult.netmask">
            <summary>
            本机局域网子网掩码，基础库 2.24.0 开始支持
            </summary>
        </member>
        <member name="F:WeChatWASM.GetNetworkTypeOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetNetworkTypeOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetNetworkTypeOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetNetworkTypeSuccessCallbackResult.hasSystemProxy">
            <summary>
            需要基础库： `2.22.1`
            设备是否使用了网络代理
            </summary>
        </member>
        <member name="F:WeChatWASM.GetNetworkTypeSuccessCallbackResult.networkType">
            <summary>
            网络类型
            可选值：
            - 'wifi': wifi 网络;
            - '2g': 2g 网络;
            - '3g': 3g 网络;
            - '4g': 4g 网络;
            - '5g': 5g 网络;
            - 'unknown': Android 下不常见的网络类型;
            - 'none': 无网络;
            </summary>
        </member>
        <member name="F:WeChatWASM.GetNetworkTypeSuccessCallbackResult.signalStrength">
            <summary>
            信号强弱，单位 dbm
            </summary>
        </member>
        <member name="F:WeChatWASM.GetPrivacySettingOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetPrivacySettingOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetPrivacySettingOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetPrivacySettingSuccessCallbackResult.needAuthorization">
            <summary>
            是否需要用户授权隐私协议（如果开发者没有在[mp后台-设置-服务内容声明-用户隐私保护指引]中声明隐私收集类型则会返回false；如果开发者声明了隐私收集，且用户之前同意过隐私协议则会返回false；如果开发者声明了隐私收集，且用户还没同意过则返回true；如果用户之前同意过、但后来小程序又新增了隐私收集类型也会返回true）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetPrivacySettingSuccessCallbackResult.privacyContractName">
            <summary>
            隐私授权协议的名称
            </summary>
        </member>
        <member name="F:WeChatWASM.GetScreenBrightnessOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetScreenBrightnessOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetScreenBrightnessOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetScreenBrightnessSuccessCallbackOption.value">
            <summary>
            屏幕亮度值，范围 0 ~ 1，0 最暗，1 最亮
            </summary>
        </member>
        <member name="F:WeChatWASM.GetScreenRecordingStateOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetScreenRecordingStateOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetScreenRecordingStateOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetScreenRecordingStateSuccessCallbackResult.state">
            <summary>
            录屏状态
            可选值：
            - 'on': 开启;
            - 'off': 关闭;
            </summary>
        </member>
        <member name="F:WeChatWASM.GetSettingOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetSettingOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetSettingOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetSettingOption.withSubscriptions">
            <summary>
            需要基础库： `2.10.1`
            是否同时获取用户订阅消息的订阅状态，默认不获取。注意：withSubscriptions 只返回用户勾选过订阅面板中的“总是保持以上选择，不再询问”的订阅消息。
            </summary>
        </member>
        <member name="F:WeChatWASM.GetSettingSuccessCallbackResult.authSetting">
            <summary>
            [AuthSetting](https://developers.weixin.qq.com/minigame/dev/api/open-api/setting/AuthSetting.html)
            用户授权结果
            </summary>
        </member>
        <member name="F:WeChatWASM.GetSettingSuccessCallbackResult.subscriptionsSetting">
            <summary>
            [SubscriptionsSetting](https://developers.weixin.qq.com/minigame/dev/api/open-api/setting/SubscriptionsSetting.html)
            需要基础库： `2.10.1`
            用户订阅消息设置，接口参数`withSubscriptions`值为`true`时才会返回。
            </summary>
        </member>
        <member name="F:WeChatWASM.GetSettingSuccessCallbackResult.miniprogramAuthSetting">
            <summary>
            [AuthSetting](https://developers.weixin.qq.com/minigame/dev/api/open-api/setting/AuthSetting.html)
            在插件中调用时，当前宿主小程序的用户授权结果
            </summary>
        </member>
        <member name="F:WeChatWASM.SubscriptionsSetting.mainSwitch">
            <summary>
            订阅消息总开关，true为开启，false为关闭
            </summary>
        </member>
        <member name="F:WeChatWASM.SubscriptionsSetting.itemSettings">
            <summary>
            每一项订阅消息的订阅状态。itemSettings对象的键为**一次性订阅消息的模板id**或**系统订阅消息的类型**，值为'accept'、'reject'、'ban'中的其中一种。'accept'表示用户同意订阅这条消息，'reject'表示用户拒绝订阅这条消息，'ban'表示已被后台封禁。一次性订阅消息使用方法详见 [wx.requestSubscribeMessage](https://developers.weixin.qq.com/minigame/dev/api/open-api/subscribe-message/wx.requestSubscribeMessage.html)，永久订阅消息（仅小游戏可用）使用方法详见[wx.requestSubscribeSystemMessage](https://developers.weixin.qq.com/minigame/dev/api/open-api/subscribe-message/wx.requestSubscribeSystemMessage.html)
            ## 注意事项
            - itemSettings 只返回用户勾选过订阅面板中的“总是保持以上选择，不再询问”的订阅消息。
            </summary>
        </member>
        <member name="F:WeChatWASM.GetShareInfoOption.shareTicket">
            <summary>
            shareTicket
            </summary>
        </member>
        <member name="F:WeChatWASM.GetShareInfoOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetShareInfoOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetShareInfoOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetShareInfoOption.timeout">
            <summary>
            需要基础库： `1.9.90`
            超时时间，单位 ms
            </summary>
        </member>
        <member name="F:WeChatWASM.GetStorageInfoOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetStorageInfoOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetStorageInfoOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetStorageInfoSuccessCallbackOption.currentSize">
            <summary>
            当前占用的空间大小, 单位 KB
            </summary>
        </member>
        <member name="F:WeChatWASM.GetStorageInfoSuccessCallbackOption.keys">
            <summary>
            当前 storage 中所有的 key
            </summary>
        </member>
        <member name="F:WeChatWASM.GetStorageInfoSuccessCallbackOption.limitSize">
            <summary>
            限制的空间大小，单位 KB
            </summary>
        </member>
        <member name="F:WeChatWASM.GetSystemInfoOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetSystemInfoOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetSystemInfoOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetSystemInfoAsyncOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetSystemInfoAsyncOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetSystemInfoAsyncOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserInfoOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserInfoOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserInfoOption.lang">
            <summary>
            显示用户信息的语言
            可选值：
            - 'en': 英文;
            - 'zh_CN': 简体中文;
            - 'zh_TW': 繁体中文;
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserInfoOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserInfoOption.withCredentials">
            <summary>
            是否带上登录态信息。当 withCredentials 为 true 时，要求此前有调用过 wx.login 且登录态尚未过期，此时返回的数据会包含 encryptedData, iv 等敏感信息；当 withCredentials 为 false 时，不要求有登录态，返回的数据不包含 encryptedData, iv 等敏感信息。
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserInfoSuccessCallbackResult.cloudID">
            <summary>
            需要基础库： `2.7.0`
            敏感数据对应的云 ID，开通[云开发](https://developers.weixin.qq.com/minigame/dev/wxcloud/basis/getting-started.html)的小程序才会返回，可通过云调用直接获取开放数据，详细见[云调用直接获取开放数据](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html#method-cloud)
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserInfoSuccessCallbackResult.encryptedData">
            <summary>
            包括敏感数据在内的完整用户信息的加密数据，详见 [用户数据的签名验证和加解密](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html#加密数据解密算法)
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserInfoSuccessCallbackResult.iv">
            <summary>
            加密算法的初始向量，详见 [用户数据的签名验证和加解密](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html#加密数据解密算法)
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserInfoSuccessCallbackResult.rawData">
            <summary>
            不包括敏感信息的原始数据字符串，用于计算签名
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserInfoSuccessCallbackResult.signature">
            <summary>
            使用 sha1( rawData + sessionkey ) 得到字符串，用于校验用户信息，详见 [用户数据的签名验证和加解密](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html)
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserInfoSuccessCallbackResult.userInfo">
            <summary>
            [UserInfo](https://developers.weixin.qq.com/minigame/dev/api/open-api/user-info/UserInfo.html)
            用户信息对象，不包含 openid 等敏感信息
            </summary>
        </member>
        <member name="F:WeChatWASM.UserInfo.avatarUrl">
            <summary>
            用户头像图片的 URL。URL 最后一个数值代表正方形头像大小（有 0、46、64、96、132 数值可选，0 代表 640x640 的正方形头像，46 表示 46x46 的正方形头像，剩余数值以此类推。默认132），用户没有头像时该项为空。若用户更换头像，原有头像 URL 将失效。
            </summary>
        </member>
        <member name="F:WeChatWASM.UserInfo.city">
            <summary>
            用户所在城市。不再返回，参考 [相关公告](https://developers.weixin.qq.com/community/develop/doc/00028edbe3c58081e7cc834705b801)
            </summary>
        </member>
        <member name="F:WeChatWASM.UserInfo.country">
            <summary>
            用户所在国家。不再返回，参考 [相关公告](https://developers.weixin.qq.com/community/develop/doc/00028edbe3c58081e7cc834705b801)
            </summary>
        </member>
        <member name="F:WeChatWASM.UserInfo.gender">
            <summary>
            用户性别。不再返回，参考 [相关公告](https://developers.weixin.qq.com/community/develop/doc/00028edbe3c58081e7cc834705b801)
            可选值：
            - 0: 未知;
            - 1: 男性;
            - 2: 女性;
            </summary>
        </member>
        <member name="F:WeChatWASM.UserInfo.language">
            <summary>
            显示 country，province，city 所用的语言。强制返回 “zh_CN”，参考 [相关公告](https://developers.weixin.qq.com/community/develop/doc/00028edbe3c58081e7cc834705b801)
            可选值：
            - 'en': 英文;
            - 'zh_CN': 简体中文;
            - 'zh_TW': 繁体中文;
            </summary>
        </member>
        <member name="F:WeChatWASM.UserInfo.nickName">
            <summary>
            用户昵称
            </summary>
        </member>
        <member name="F:WeChatWASM.UserInfo.province">
            <summary>
            用户所在省份。不再返回，参考 [相关公告](https://developers.weixin.qq.com/community/develop/doc/00028edbe3c58081e7cc834705b801)
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserInteractiveStorageOption.keyList">
            <summary>
            要获取的 key 列表
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserInteractiveStorageOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserInteractiveStorageOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserInteractiveStorageOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserInteractiveStorageFailCallbackResult.errCode">
            <summary>
            错误码
            可选值：
            - -17008: 非法的 key;
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserInteractiveStorageFailCallbackResult.errMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserInteractiveStorageSuccessCallbackResult.cloudID">
            <summary>
            敏感数据对应的云 ID，开通[云开发](https://developers.weixin.qq.com/minigame/dev/wxcloud/basis/getting-started.html)的小程序才会返回，可通过云调用直接获取开放数据，详细见[云调用直接获取开放数据](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html#method-cloud)
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserInteractiveStorageSuccessCallbackResult.encryptedData">
            <summary>
            加密数据，包含互动型托管数据的值。解密后的结果为一个 `KVDataList`，每一项为一个 `KVData`。 [用户数据的签名验证和加解密](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html#加密数据解密算法)
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserInteractiveStorageSuccessCallbackResult.iv">
            <summary>
            加密算法的初始向量，详见 [用户数据的签名验证和加解密](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html#加密数据解密算法)
            </summary>
        </member>
        <member name="F:WeChatWASM.GetWeRunDataOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetWeRunDataOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetWeRunDataOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetWeRunDataSuccessCallbackResult.cloudID">
            <summary>
            需要基础库： `2.7.0`
            敏感数据对应的云 ID，开通云开发的小程序才会返回，可通过云调用直接获取开放数据，详细见[云调用直接获取开放数据](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html#method-cloud)
            </summary>
        </member>
        <member name="F:WeChatWASM.GetWeRunDataSuccessCallbackResult.encryptedData">
            <summary>
            包括敏感数据在内的完整用户信息的加密数据，详细见[加密数据解密算法](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html)。解密后得到的数据结构见后文
            </summary>
        </member>
        <member name="F:WeChatWASM.GetWeRunDataSuccessCallbackResult.iv">
            <summary>
            加密算法的初始向量，详细见[加密数据解密算法](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html)
            </summary>
        </member>
        <member name="F:WeChatWASM.HideKeyboardOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.HideKeyboardOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.HideKeyboardOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.HideLoadingOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.HideLoadingOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.HideLoadingOption.noConflict">
            <summary>
            需要基础库： `2.22.1`
            目前 toast 和 loading 相关接口可以相互混用，此参数可用于取消混用特性
            </summary>
        </member>
        <member name="F:WeChatWASM.HideLoadingOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.HideShareMenuOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.HideShareMenuOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.HideShareMenuOption.menus">
            <summary>
            需要基础库： `2.11.3`
            本接口为 Beta 版本，暂只在 Android 平台支持。需要隐藏的转发按钮名称列表，默认['shareAppMessage', 'shareTimeline']。按钮名称合法值包含 "shareAppMessage"、"shareTimeline" 两种
            </summary>
        </member>
        <member name="F:WeChatWASM.HideShareMenuOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.HideToastOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.HideToastOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.HideToastOption.noConflict">
            <summary>
            需要基础库： `2.22.1`
            目前 toast 和 loading 相关接口可以相互混用，此参数可用于取消混用特性
            </summary>
        </member>
        <member name="F:WeChatWASM.HideToastOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.InitFaceDetectOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.InitFaceDetectOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.InitFaceDetectOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.IsBluetoothDevicePairedOption.deviceId">
            <summary>
            蓝牙设备 id
            </summary>
        </member>
        <member name="F:WeChatWASM.IsBluetoothDevicePairedOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.IsBluetoothDevicePairedOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.IsBluetoothDevicePairedOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.JoinVoIPChatOption.groupId">
            <summary>
            小游戏内此房间/群聊的 ID。同一时刻传入相同 groupId 的用户会进入到同个实时语音房间。
            </summary>
        </member>
        <member name="F:WeChatWASM.JoinVoIPChatOption.nonceStr">
            <summary>
            验证所需的随机字符串
            </summary>
        </member>
        <member name="F:WeChatWASM.JoinVoIPChatOption.signature">
            <summary>
            签名，用于验证小游戏的身份
            </summary>
        </member>
        <member name="F:WeChatWASM.JoinVoIPChatOption.timeStamp">
            <summary>
            验证所需的时间戳
            </summary>
        </member>
        <member name="F:WeChatWASM.JoinVoIPChatOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.JoinVoIPChatOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.JoinVoIPChatOption.forceCellularNetwork">
            <summary>
            需要基础库： `2.29.0`
            开启后，joinVoIPChat 会同时走 Wi-Fi 和蜂窝网络2种网络模式，保证实时通话体验。
            </summary>
        </member>
        <member name="F:WeChatWASM.JoinVoIPChatOption.muteConfig">
            <summary>
            静音设置
            </summary>
        </member>
        <member name="F:WeChatWASM.JoinVoIPChatOption.roomType">
            <summary>
            房间类型
            可选值：
            - 'voice': 音频房间，用于语音通话;
            - 'video': 视频房间，结合 [voip-room](#) 组件可显示成员画面;
            </summary>
        </member>
        <member name="F:WeChatWASM.JoinVoIPChatOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.JoinVoIPChatError.errMsg">
            <summary>
            错误信息
            | 错误码 | 错误信息 | 说明 |
            | - | - | - |
            | -1 | 当前已在房间内 |  |
            | -2 | 录音设备被占用，可能是当前正在使用微信内语音通话或系统通话 |  |
            | -3 | 加入会话期间退出（可能是用户主动退出，或者退后台、来电等原因），因此加入失败 |  |
            | -1000 | 系统错误 |  |
            </summary>
        </member>
        <member name="F:WeChatWASM.JoinVoIPChatError.errCode">
            <summary>
            错误码
            | 错误码 | 错误信息 | 说明 |
            | - | - | - |
            | -1 | 当前已在房间内 |  |
            | -2 | 录音设备被占用，可能是当前正在使用微信内语音通话或系统通话 |  |
            | -3 | 加入会话期间退出（可能是用户主动退出，或者退后台、来电等原因），因此加入失败 |  |
            | -1000 | 系统错误 |  |
            </summary>
        </member>
        <member name="F:WeChatWASM.MuteConfig.muteEarphone">
            <summary>
            是否静音耳机
            </summary>
        </member>
        <member name="F:WeChatWASM.MuteConfig.muteMicrophone">
            <summary>
            是否静音麦克风
            </summary>
        </member>
        <member name="F:WeChatWASM.JoinVoIPChatSuccessCallbackResult.errCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="F:WeChatWASM.JoinVoIPChatSuccessCallbackResult.errMsg">
            <summary>
            调用结果
            </summary>
        </member>
        <member name="F:WeChatWASM.JoinVoIPChatSuccessCallbackResult.openIdList">
            <summary>
            在此通话中的成员 openId 名单
            </summary>
        </member>
        <member name="F:WeChatWASM.LoginOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.LoginOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.LoginOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.LoginOption.timeout">
            <summary>
            需要基础库： `1.9.90`
            超时时间，单位ms
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestFailCallbackErr.errMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestFailCallbackErr.errno">
            <summary>
            需要基础库： `2.24.0`
            errno 错误码，错误码的详细说明参考 [Errno错误码](https://developers.weixin.qq.com/minigame/dev/guide/runtime/debug/PublicErrno.html)
            </summary>
        </member>
        <member name="F:WeChatWASM.LoginSuccessCallbackResult.code">
            <summary>
            用户登录凭证（有效期五分钟）。开发者需要在开发者服务器后台调用 [code2Session](#)，使用 code 换取 openid、unionid、session_key 等信息
            </summary>
        </member>
        <member name="F:WeChatWASM.MakeBluetoothPairOption.deviceId">
            <summary>
            蓝牙设备 id
            </summary>
        </member>
        <member name="F:WeChatWASM.MakeBluetoothPairOption.pin">
            <summary>
            pin 码，Base64 格式。
            </summary>
        </member>
        <member name="F:WeChatWASM.MakeBluetoothPairOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.MakeBluetoothPairOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.MakeBluetoothPairOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.MakeBluetoothPairOption.timeout">
            <summary>
            超时时间，单位 ms
            </summary>
        </member>
        <member name="F:WeChatWASM.NavigateToMiniProgramOption.appId">
            <summary>
            要打开的小程序 appId
            </summary>
        </member>
        <member name="F:WeChatWASM.NavigateToMiniProgramOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.NavigateToMiniProgramOption.envVersion">
            <summary>
            要打开的小程序版本。仅在当前小程序为开发版或体验版时此参数有效。如果当前小程序是正式版，则打开的小程序必定是正式版。
            可选值：
            - 'develop': 开发版;
            - 'trial': 体验版;
            - 'release': 正式版;
            </summary>
        </member>
        <member name="F:WeChatWASM.NavigateToMiniProgramOption.extraData">
            <summary>
            需要传递给目标小程序的数据，目标小程序可在 `App.onLaunch`，`App.onShow` 中获取到这份数据。如果跳转的是小游戏，可以在 [wx.onShow](https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.onShow.html)、[wx.getLaunchOptionsSync](https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.getLaunchOptionsSync.html) 中可以获取到这份数据数据。
            </summary>
        </member>
        <member name="F:WeChatWASM.NavigateToMiniProgramOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.NavigateToMiniProgramOption.noRelaunchIfPathUnchanged">
            <summary>
            需要基础库： `2.24.0`
            不reLaunch目标小程序，直接打开目标跳转的小程序退后台时的页面，需满足以下条件：1. 目标跳转的小程序生命周期未被销毁；2. 且目标当次启动的path、query与上次启动相同，apiCategory以wx.getApiCategory接口的返回结果为准。
            </summary>
        </member>
        <member name="F:WeChatWASM.NavigateToMiniProgramOption.path">
            <summary>
            打开的页面路径，如果为空则打开首页。path 中 ? 后面的部分会成为 query，在小程序的 `App.onLaunch`、`App.onShow` 和 `Page.onLoad` 的回调函数或小游戏的 [wx.onShow](https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.onShow.html) 回调函数、[wx.getLaunchOptionsSync](https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.getLaunchOptionsSync.html) 中可以获取到 query 数据。对于小游戏，可以只传入 query 部分，来实现传参效果，如：传入 "?foo=bar"。
            </summary>
        </member>
        <member name="F:WeChatWASM.NavigateToMiniProgramOption.shortLink">
            <summary>
            需要基础库： `2.18.1`
            小程序链接，当传递该参数后，可以不传 appId 和 path。链接可以通过【小程序菜单】->【复制链接】获取。
            </summary>
        </member>
        <member name="F:WeChatWASM.NavigateToMiniProgramOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.NotifyBLECharacteristicValueChangeOption.characteristicId">
            <summary>
            蓝牙特征的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.NotifyBLECharacteristicValueChangeOption.deviceId">
            <summary>
            蓝牙设备 id
            </summary>
        </member>
        <member name="F:WeChatWASM.NotifyBLECharacteristicValueChangeOption.serviceId">
            <summary>
            蓝牙特征对应服务的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.NotifyBLECharacteristicValueChangeOption.state">
            <summary>
            是否启用 notify
            </summary>
        </member>
        <member name="F:WeChatWASM.NotifyBLECharacteristicValueChangeOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.NotifyBLECharacteristicValueChangeOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.NotifyBLECharacteristicValueChangeOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.NotifyBLECharacteristicValueChangeOption.type">
            <summary>
            需要基础库： `2.4.0`
            设置特征订阅类型，有效值有 `notification` 和 `indication`
            </summary>
        </member>
        <member name="F:WeChatWASM.OnAccelerometerChangeListenerResult.x">
            <summary>
            X 轴
            </summary>
        </member>
        <member name="F:WeChatWASM.OnAccelerometerChangeListenerResult.y">
            <summary>
            Y 轴
            </summary>
        </member>
        <member name="F:WeChatWASM.OnAccelerometerChangeListenerResult.z">
            <summary>
            Z 轴
            </summary>
        </member>
        <member name="F:WeChatWASM.OnAddToFavoritesListenerResult.disableForward">
            <summary>
            禁止收藏后长按转发，默认 false
            </summary>
        </member>
        <member name="F:WeChatWASM.OnAddToFavoritesListenerResult.imageUrl">
            <summary>
            转发显示图片的链接，可以是网络图片路径或本地图片文件路径或相对代码包根目录的图片文件路径。显示图片长宽比是 5:4
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:WeChatWASM.OnAddToFavoritesListenerResult.query" -->
        <member name="F:WeChatWASM.OnAddToFavoritesListenerResult.title">
            <summary>
            收藏标题，不传则默认使用当前小游戏的昵称。
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBLEConnectionStateChangeListenerResult.connected">
            <summary>
            是否处于已连接状态
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBLEConnectionStateChangeListenerResult.deviceId">
            <summary>
            蓝牙设备 id
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBLEMTUChangeListenerResult.deviceId">
            <summary>
            蓝牙设备 id
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBLEMTUChangeListenerResult.mtu">
            <summary>
            最大传输单元
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBLEPeripheralConnectionStateChangedListenerResult.connected">
            <summary>
            连接目前状态
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBLEPeripheralConnectionStateChangedListenerResult.deviceId">
            <summary>
            连接状态变化的设备 id
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBLEPeripheralConnectionStateChangedListenerResult.serverId">
            <summary>
            server 的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBackgroundFetchDataListenerResult.fetchType">
            <summary>
            缓存数据类别，取值为 periodic 或 pre
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBackgroundFetchDataListenerResult.fetchedData">
            <summary>
            缓存数据
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBackgroundFetchDataListenerResult.path">
            <summary>
            小游戏页面路径（一般不需要传，除非使用到小游戏独立分包）
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBackgroundFetchDataListenerResult.query">
            <summary>
            传给页面的 query 参数
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBackgroundFetchDataListenerResult.scene">
            <summary>
            进入小游戏的场景值
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBackgroundFetchDataListenerResult.timeStamp">
            <summary>
            客户端拿到缓存数据的时间戳
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBeaconServiceChangeListenerResult.available">
            <summary>
            服务目前是否可用
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBeaconServiceChangeListenerResult.discovering">
            <summary>
            目前是否处于搜索状态
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBeaconUpdateListenerResult.beacons">
            <summary>
            当前搜寻到的所有 Beacon 设备列表
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBluetoothAdapterStateChangeListenerResult.available">
            <summary>
            蓝牙适配器是否可用
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBluetoothAdapterStateChangeListenerResult.discovering">
            <summary>
            蓝牙适配器是否处于搜索状态
            </summary>
        </member>
        <member name="F:WeChatWASM.OnBluetoothDeviceFoundListenerResult.devices">
            <summary>
            新搜索到的设备列表
            </summary>
        </member>
        <member name="F:WeChatWASM.OnCompassChangeListenerResult.accuracy">
            <summary>
            需要基础库： `2.4.0`
            精度
            </summary>
        </member>
        <member name="F:WeChatWASM.OnCompassChangeListenerResult.direction">
            <summary>
            面对的方向度数
            </summary>
        </member>
        <member name="F:WeChatWASM.OnCopyUrlListenerResult.query">
            <summary>
            用短链打开小程序时当前页面携带的查询字符串。小程序中使用时，应在进入页面时调用 `wx.onCopyUrl` 自定义 `query`，退出页面时调用 `wx.offCopyUrl`，防止影响其它页面。
            </summary>
        </member>
        <member name="F:WeChatWASM.OnDeviceMotionChangeListenerResult.alpha">
            <summary>
            当 手机坐标 X/Y 和 地球 X/Y 重合时，绕着 Z 轴转动的夹角为 alpha，范围值为 [0, 2*PI)。逆时针转动为正。
            </summary>
        </member>
        <member name="F:WeChatWASM.OnDeviceMotionChangeListenerResult.beta">
            <summary>
            当手机坐标 Y/Z 和地球 Y/Z 重合时，绕着 X 轴转动的夹角为 beta。范围值为 [-1*PI, PI) 。顶部朝着地球表面转动为正。也有可能朝着用户为正。
            </summary>
        </member>
        <member name="F:WeChatWASM.OnDeviceMotionChangeListenerResult.gamma">
            <summary>
            当手机 X/Z 和地球 X/Z 重合时，绕着 Y 轴转动的夹角为 gamma。范围值为 [-1*PI/2, PI/2)。右边朝着地球表面转动为正。
            </summary>
        </member>
        <member name="F:WeChatWASM.OnDeviceOrientationChangeListenerResult.value">
            <summary>
            切换后的屏幕方向。
            可选值：
            - 'landscape': 横屏正方向，以 HOME 键在屏幕右侧为正方向;
            - 'landscapeReverse': 横屏反方向，以 HOME 键在屏幕左侧为反方向;
            </summary>
        </member>
        <member name="F:WeChatWASM.Error.message">
            <summary>
            错误
            </summary>
        </member>
        <member name="F:WeChatWASM.Error.stack">
            <summary>
            错误调用堆栈
            </summary>
        </member>
        <member name="F:WeChatWASM.OnHandoffListenerResult.query">
            <summary>
            需要传递给接力客户端的 query
            </summary>
        </member>
        <member name="F:WeChatWASM.OnKeyDownListenerResult.code">
            <summary>
            同 Web 规范 KeyEvent code 属性
            </summary>
        </member>
        <member name="F:WeChatWASM.OnKeyDownListenerResult.key">
            <summary>
            同 Web 规范 KeyEvent key 属性
            </summary>
        </member>
        <member name="F:WeChatWASM.OnKeyDownListenerResult.timeStamp">
            <summary>
            事件触发时的时间戳
            </summary>
        </member>
        <member name="F:WeChatWASM.OnKeyboardInputListenerResult.value">
            <summary>
            键盘输入的当前值
            </summary>
        </member>
        <member name="F:WeChatWASM.OnKeyboardHeightChangeListenerResult.height">
            <summary>
            键盘高度
            </summary>
        </member>
        <member name="F:WeChatWASM.OnMemoryWarningListenerResult.level">
            <summary>
            内存告警等级，只有 Android 才有，对应系统宏定义
            可选值：
            - 5: TRIM_MEMORY_RUNNING_MODERATE;
            - 10: TRIM_MEMORY_RUNNING_LOW;
            - 15: TRIM_MEMORY_RUNNING_CRITICAL;
            </summary>
        </member>
        <member name="F:WeChatWASM.OnMouseDownListenerResult.button">
            <summary>
            按键类型，0左键，1中键，2右键
            </summary>
        </member>
        <member name="F:WeChatWASM.OnMouseDownListenerResult.timeStamp">
            <summary>
            事件触发时的时间戳
            </summary>
        </member>
        <member name="F:WeChatWASM.OnMouseDownListenerResult.x">
            <summary>
            事件触发时鼠标所在的位置横坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.OnMouseDownListenerResult.y">
            <summary>
            事件触发时鼠标所在的位置纵坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.OnMouseMoveListenerResult.movementX">
            <summary>
            鼠标横坐标偏移量
            </summary>
        </member>
        <member name="F:WeChatWASM.OnMouseMoveListenerResult.movementY">
            <summary>
            鼠标纵坐标偏移量
            </summary>
        </member>
        <member name="F:WeChatWASM.OnMouseMoveListenerResult.timeStamp">
            <summary>
            事件触发时的时间戳
            </summary>
        </member>
        <member name="F:WeChatWASM.OnMouseMoveListenerResult.x">
            <summary>
            事件触发时鼠标所在的位置横坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.OnMouseMoveListenerResult.y">
            <summary>
            事件触发时鼠标所在的位置纵坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.OnNetworkStatusChangeListenerResult.isConnected">
            <summary>
            当前是否有网络连接
            </summary>
        </member>
        <member name="F:WeChatWASM.OnNetworkStatusChangeListenerResult.networkType">
            <summary>
            网络类型
            可选值：
            - 'wifi': wifi 网络;
            - '2g': 2g 网络;
            - '3g': 3g 网络;
            - '4g': 4g 网络;
            - '5g': 5g 网络;
            - 'unknown': Android 下不常见的网络类型;
            - 'none': 无网络;
            </summary>
        </member>
        <member name="F:WeChatWASM.OnNetworkWeakChangeListenerResult.networkType">
            <summary>
            当前网络类型
            </summary>
        </member>
        <member name="F:WeChatWASM.OnNetworkWeakChangeListenerResult.weakNet">
            <summary>
            当前是否处于弱网状态
            </summary>
        </member>
        <member name="F:WeChatWASM.OnScreenRecordingStateChangedListenerResult.state">
            <summary>
            录屏状态
            可选值：
            - 'start': 开始录屏;
            - 'stop': 结束录屏;
            </summary>
        </member>
        <member name="F:WeChatWASM.OnShareMessageToFriendListenerResult.errMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:WeChatWASM.OnShareMessageToFriendListenerResult.success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="F:WeChatWASM.OnShareTimelineListenerResult.imageUrl">
            <summary>
            转发显示图片的链接，可以是网络图片路径或本地图片文件路径或相对代码包根目录的图片文件路径。（该图片用于分享到朋友圈的卡片以及从朋友圈转发到会话消息的卡片展示）
            </summary>
        </member>
        <member name="F:WeChatWASM.OnShareTimelineListenerResult.imagePreviewUrl">
            <summary>
            需要基础库： `2.14.3`
            朋友圈预览图链接，不传则默认使用当前游戏画面截图
            </summary>
        </member>
        <member name="F:WeChatWASM.OnShareTimelineListenerResult.imagePreviewUrlId">
            <summary>
            需要基础库： `2.14.3`
            审核通过的朋友圈预览图图片 ID，详见 [使用审核通过的转发图片](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/share/share.html#使用审核通过的转发图片)
            </summary>
        </member>
        <member name="F:WeChatWASM.OnShareTimelineListenerResult.imageUrlId">
            <summary>
            审核通过的图片 ID，详见 [使用审核通过的转发图片](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/share/share.html#使用审核通过的转发图片)
            </summary>
        </member>
        <member name="F:WeChatWASM.OnShareTimelineListenerResult.path">
            <summary>
            需要基础库： `2.12.2`
            独立分包路径。详见 [小游戏独立分包指南](https://developers.weixin.qq.com/minigame/dev/guide/base-ability/independent-sub-packages.html)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:WeChatWASM.OnShareTimelineListenerResult.query" -->
        <member name="F:WeChatWASM.OnShareTimelineListenerResult.title">
            <summary>
            转发标题，不传则默认使用当前小游戏的昵称。
            </summary>
        </member>
        <member name="F:WeChatWASM.OnShowListenerResult.query">
            <summary>
            查询参数
            </summary>
        </member>
        <member name="F:WeChatWASM.OnShowListenerResult.referrerInfo">
            <summary>
            当场景为由从另一个小程序或公众号或App打开时，返回此字段
            </summary>
        </member>
        <member name="F:WeChatWASM.OnShowListenerResult.scene">
            <summary>
            场景值
            </summary>
        </member>
        <member name="F:WeChatWASM.OnShowListenerResult.chatType">
            <summary>
            从微信群聊/单聊打开小程序时，chatType 表示具体微信群聊/单聊类型
            可选值：
            - 1: 微信联系人单聊;
            - 2: 企业微信联系人单聊;
            - 3: 普通微信群聊;
            - 4: 企业微信互通群聊;
            </summary>
        </member>
        <member name="F:WeChatWASM.OnShowListenerResult.shareTicket">
            <summary>
            shareTicket
            </summary>
        </member>
        <member name="F:WeChatWASM.ResultReferrerInfo.appId">
            <summary>
            来源小程序或公众号或App的 appId
            </summary>
        </member>
        <member name="F:WeChatWASM.ResultReferrerInfo.extraData">
            <summary>
            来源小程序传过来的数据，scene=1037或1038时支持
            </summary>
        </member>
        <member name="F:WeChatWASM.OnUnhandledRejectionListenerResult.reason">
            <summary>
            拒绝原因，一般是一个 Error 对象
            </summary>
        </member>
        <member name="F:WeChatWASM.OnVoIPChatInterruptedListenerResult.errCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="F:WeChatWASM.OnVoIPChatInterruptedListenerResult.errMsg">
            <summary>
            调用结果（错误原因）
            </summary>
        </member>
        <member name="F:WeChatWASM.OnVoIPChatMembersChangedListenerResult.errCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="F:WeChatWASM.OnVoIPChatMembersChangedListenerResult.errMsg">
            <summary>
            调用结果
            </summary>
        </member>
        <member name="F:WeChatWASM.OnVoIPChatMembersChangedListenerResult.openIdList">
            <summary>
            还在实时语音通话中的成员 openId 名单
            </summary>
        </member>
        <member name="F:WeChatWASM.OnVoIPChatSpeakersChangedListenerResult.errCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="F:WeChatWASM.OnVoIPChatSpeakersChangedListenerResult.errMsg">
            <summary>
            调用结果（错误原因）
            </summary>
        </member>
        <member name="F:WeChatWASM.OnVoIPChatSpeakersChangedListenerResult.openIdList">
            <summary>
            还在实时语音通话中的成员 openId 名单
            </summary>
        </member>
        <member name="F:WeChatWASM.OnVoIPChatStateChangedListenerResult.code">
            <summary>
            事件码
            </summary>
        </member>
        <member name="F:WeChatWASM.OnVoIPChatStateChangedListenerResult.data">
            <summary>
            附加信息
            </summary>
        </member>
        <member name="F:WeChatWASM.OnVoIPChatStateChangedListenerResult.errCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="F:WeChatWASM.OnVoIPChatStateChangedListenerResult.errMsg">
            <summary>
            调用结果
            </summary>
        </member>
        <member name="F:WeChatWASM.OnWheelListenerResult.deltaX">
            <summary>
            滚轮 x 轴方向滚动量
            </summary>
        </member>
        <member name="F:WeChatWASM.OnWheelListenerResult.deltaY">
            <summary>
            滚轮 y 轴方向滚动量
            </summary>
        </member>
        <member name="F:WeChatWASM.OnWheelListenerResult.deltaZ">
            <summary>
            滚轮 z 轴方向滚动量
            </summary>
        </member>
        <member name="F:WeChatWASM.OnWheelListenerResult.timeStamp">
            <summary>
            事件触发时的时间戳
            </summary>
        </member>
        <member name="F:WeChatWASM.OnWheelListenerResult.x">
            <summary>
            事件触发时鼠标所在的位置横坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.OnWheelListenerResult.y">
            <summary>
            事件触发时鼠标所在的位置纵坐标
            </summary>
        </member>
        <member name="F:WeChatWASM.OnWindowResizeListenerResult.windowHeight">
            <summary>
            变化后的窗口高度，单位 px
            </summary>
        </member>
        <member name="F:WeChatWASM.OnWindowResizeListenerResult.windowWidth">
            <summary>
            变化后的窗口宽度，单位 px
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenAppAuthorizeSettingOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenAppAuthorizeSettingOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenAppAuthorizeSettingOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenBluetoothAdapterOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenBluetoothAdapterOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenBluetoothAdapterOption.mode">
            <summary>
            需要基础库： `2.10.0`
            蓝牙模式，可作为主/从设备，仅 iOS 需要。
            可选值：
            - 'central': 主机模式;
            - 'peripheral': 从机（外围设备）模式;
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenBluetoothAdapterOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCardOption.cardList">
            <summary>
            需要打开的卡券列表
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCardOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCardOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCardOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCardRequestInfo.cardId">
            <summary>
            卡券 ID
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:WeChatWASM.OpenCardRequestInfo.code" -->
        <member name="F:WeChatWASM.OpenChannelsActivityOption.feedId">
            <summary>
            视频 feedId
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsActivityOption.finderUserName">
            <summary>
            视频号 id，以“sph”开头的id，可在视频号助手获取
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsActivityOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsActivityOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsActivityOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsEventOption.eventId">
            <summary>
            活动 id
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsEventOption.finderUserName">
            <summary>
            视频号 id，以“sph”开头的id，可在视频号助手获取
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsEventOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsEventOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsEventOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsLiveOption.finderUserName">
            <summary>
            视频号 id，以“sph”开头的id，可在视频号助手获取
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsLiveOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsLiveOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsLiveOption.feedId">
            <summary>
            直播 feedId，通过 getChannelsLiveInfo 接口获取（基础库 v2.19.2 之前的版本需要填写）
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsLiveOption.nonceId">
            <summary>
            直播 nonceId，通过 getChannelsLiveInfo 接口获取（基础库 v2.19.2 之前的版本需要填写）
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsLiveOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsUserProfileOption.finderUserName">
            <summary>
            视频号 id
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsUserProfileOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsUserProfileOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsUserProfileOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCustomerServiceChatOption.corpId">
            <summary>
            企业ID
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCustomerServiceChatOption.extInfo">
            <summary>
            客服信息
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCustomerServiceChatOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCustomerServiceChatOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCustomerServiceChatOption.sendMessageImg">
            <summary>
            气泡消息图片
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCustomerServiceChatOption.sendMessagePath">
            <summary>
            气泡消息小程序路径
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCustomerServiceChatOption.sendMessageTitle">
            <summary>
            气泡消息标题
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCustomerServiceChatOption.showMessageCard">
            <summary>
            是否发送小程序气泡消息
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCustomerServiceChatOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ExtInfoOption.url">
            <summary>
            客服链接
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCustomerServiceConversationOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCustomerServiceConversationOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCustomerServiceConversationOption.sendMessageImg">
            <summary>
            会话内消息卡片图片路径
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCustomerServiceConversationOption.sendMessagePath">
            <summary>
            会话内消息卡片路径
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCustomerServiceConversationOption.sendMessageTitle">
            <summary>
            会话内消息卡片标题
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCustomerServiceConversationOption.sessionFrom">
            <summary>
            会话来源。该字段会在进入客服会话时透传给开发者配置好的后台服务。该字段（utf-8编码）最长不得超过 1000 个字节（不是字符串长度），超过将被截断。
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCustomerServiceConversationOption.showMessageCard">
            <summary>
            是否显示会话内消息卡片，设置此参数为 true，用户进入客服会话会在右下角显示"可能要发送的小程序"提示，用户点击后可以快速发送小程序消息
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCustomerServiceConversationOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCustomerServiceConversationSuccessCallbackResult.path">
            <summary>
            在客服会话内点击小程序消息卡片进入小程序时，所带的小程序打开路径
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenCustomerServiceConversationSuccessCallbackResult.query">
            <summary>
            在客服会话内点击小程序消息卡片进入小程序时，所带的小程序打开参数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenPrivacyContractOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenPrivacyContractOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenPrivacyContractOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenSettingOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenSettingOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenSettingOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenSettingOption.withSubscriptions">
            <summary>
            需要基础库： `2.10.3`
            是否同时获取用户订阅消息的订阅状态，默认不获取。注意：withSubscriptions 只返回用户勾选过订阅面板中的“总是保持以上选择，不再询问”的订阅消息。
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenSettingSuccessCallbackResult.authSetting">
            <summary>
            [AuthSetting](https://developers.weixin.qq.com/minigame/dev/api/open-api/setting/AuthSetting.html)
            用户授权结果
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenSettingSuccessCallbackResult.subscriptionsSetting">
            <summary>
            [SubscriptionsSetting](https://developers.weixin.qq.com/minigame/dev/api/open-api/setting/SubscriptionsSetting.html)
            需要基础库： `2.10.3`
            用户订阅消息设置，接口参数`withSubscriptions`值为`true`时才会返回。
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenSystemBluetoothSettingOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenSystemBluetoothSettingOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenSystemBluetoothSettingOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OperateGameRecorderVideoOption.atempo">
            <summary>
            对局回放的播放速率，只能设置以下几个值: 0.3, 0.5, 1, 1.5, 2, 2.5, 3.其中1表示元素播放，小于1表示减速播放，大于1表示加速播放
            </summary>
        </member>
        <member name="F:WeChatWASM.OperateGameRecorderVideoOption.audioMix">
            <summary>
            如果原始视频文件中有音频，是否与新传入的bgm混音，默认为false，表示不混音，只保留一个音轨，值为true时表示原始音频与传入的bgm混音
            </summary>
        </member>
        <member name="F:WeChatWASM.OperateGameRecorderVideoOption.bgm">
            <summary>
            对局回放背景音乐的地址
            </summary>
        </member>
        <member name="F:WeChatWASM.OperateGameRecorderVideoOption.desc">
            <summary>
            分享的对局回放打开后的描述内容
            </summary>
        </member>
        <member name="F:WeChatWASM.OperateGameRecorderVideoOption.path">
            <summary>
            分享的对局回放打开后跳转小游戏的 path （独立分包路径）
            </summary>
        </member>
        <member name="F:WeChatWASM.OperateGameRecorderVideoOption.query">
            <summary>
            分享的对局回放打开后跳转小游戏的 query
            </summary>
        </member>
        <member name="F:WeChatWASM.OperateGameRecorderVideoOption.timeRange">
            <summary>
            对局回放的剪辑区间，是一个二维数组，单位 ms（毫秒）。[[1000, 3000], [4000, 5000]] 表示剪辑已录制对局回放的 1-3 秒和 4-5 秒最终合成为一个 3 秒的对局回放。对局回放剪辑后的总时长最多 60 秒，即 1 分钟
            </summary>
        </member>
        <member name="F:WeChatWASM.OperateGameRecorderVideoOption.title">
            <summary>
            分享的对局回放打开后的标题内容
            </summary>
        </member>
        <member name="F:WeChatWASM.OperateGameRecorderVideoOption.volume">
            <summary>
            对局回放的音量大小，最小0，最大1
            </summary>
        </member>
        <member name="F:WeChatWASM.PreviewImageOption.urls">
            <summary>
            需要预览的图片链接列表。[2.2.3](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 起支持云文件ID。
            </summary>
        </member>
        <member name="F:WeChatWASM.PreviewImageOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.PreviewImageOption.current">
            <summary>
            当前显示图片的链接
            </summary>
        </member>
        <member name="F:WeChatWASM.PreviewImageOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.PreviewImageOption.referrerPolicy">
            <summary>
            需要基础库： `2.13.0`
            `origin`: 发送完整的referrer; `no-referrer`: 不发送。格式固定为 `https://servicewechat.com/{appid}/{version}/page-frame.html`，其中 {appid} 为小程序的 appid，{version} 为小程序的版本号，版本号为 0 表示为开发版、体验版以及审核版本，版本号为 devtools 表示为开发者工具，其余为正式版本；
            </summary>
        </member>
        <member name="F:WeChatWASM.PreviewImageOption.showmenu">
            <summary>
            需要基础库： `2.13.0`
            是否显示长按菜单。
            </summary>
        </member>
        <member name="F:WeChatWASM.PreviewImageOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.PreviewMediaOption.sources">
            <summary>
            需要预览的资源列表
            </summary>
        </member>
        <member name="F:WeChatWASM.PreviewMediaOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.PreviewMediaOption.current">
            <summary>
            当前显示的资源序号
            </summary>
        </member>
        <member name="F:WeChatWASM.PreviewMediaOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.PreviewMediaOption.referrerPolicy">
            <summary>
            需要基础库： `2.13.0`
            `origin`: 发送完整的referrer; `no-referrer`: 不发送。格式固定为 `https://servicewechat.com/{appid}/{version}/page-frame.html`，其中 {appid} 为小程序的 appid，{version} 为小程序的版本号，版本号为 0 表示为开发版、体验版以及审核版本，版本号为 devtools 表示为开发者工具，其余为正式版本；
            </summary>
        </member>
        <member name="F:WeChatWASM.PreviewMediaOption.showmenu">
            <summary>
            需要基础库： `2.13.0`
            是否显示长按菜单。
            </summary>
        </member>
        <member name="F:WeChatWASM.PreviewMediaOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.MediaSource.url">
            <summary>
            图片或视频的地址
            </summary>
        </member>
        <member name="F:WeChatWASM.MediaSource.poster">
            <summary>
            视频的封面图片
            </summary>
        </member>
        <member name="F:WeChatWASM.MediaSource.type">
            <summary>
            资源的类型，默认为图片
            可选值：
            - 'image': 图片;
            - 'video': 视频;
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadBLECharacteristicValueOption.characteristicId">
            <summary>
            蓝牙特征的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadBLECharacteristicValueOption.deviceId">
            <summary>
            蓝牙设备 id
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadBLECharacteristicValueOption.serviceId">
            <summary>
            蓝牙特征对应服务的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadBLECharacteristicValueOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadBLECharacteristicValueOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ReadBLECharacteristicValueOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.RemoveStorageOption.key">
            <summary>
            本地缓存中指定的 key
            </summary>
        </member>
        <member name="F:WeChatWASM.RemoveStorageOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.RemoveStorageOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.RemoveStorageOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.RemoveUserCloudStorageOption.keyList">
            <summary>
            要删除掉 key 列表
            </summary>
        </member>
        <member name="F:WeChatWASM.RemoveUserCloudStorageOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.RemoveUserCloudStorageOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.RemoveUserCloudStorageOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ReportSceneOption.sceneId">
            <summary>
            场景ID，在「小程序管理后台」获取
            </summary>
        </member>
        <member name="F:WeChatWASM.ReportSceneOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.ReportSceneOption.costTime">
            <summary>
            此场景的耗时，单位 ms
            </summary>
        </member>
        <member name="F:WeChatWASM.ReportSceneOption.dimension">
            <summary>
            自定义维度数据，key在「小程序管理后台」获取。只支持能够通过JSON.stringify序列化的对象，且序列化后长度不超过1024个字符
            </summary>
        </member>
        <member name="F:WeChatWASM.ReportSceneOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ReportSceneOption.metric">
            <summary>
            自定义指标数据，key在「小程序管理后台」获取。只支持能够通过JSON.stringify序列化的对象，且序列化后长度不超过1024个字符
            </summary>
        </member>
        <member name="F:WeChatWASM.ReportSceneOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ReportSceneError.errMsg">
            <summary>
            错误信息
            | 错误信息 | 说明 |
            | - | - |
            | ${paramName} should be ${expectType} instead of ${paramType} | 参数的类型需为指定的数据类型 |
            | parameter.${paramName} should greater than or equal to zero | 参数的值需要大于等于0 |
            | parameter.${paramName}.${key} needs to be a string type and a non-empty string | value仅支持传入非空字符串 |
            | parameter.${paramName}.${key} needs to be a numeric value of type string | value仅支持传入纯数值组成的字符串（如：'25'） |
            | failed to serialize parameter.${paramName} by JSON.stringify | 参数对象序列化失败 |
            | parameter.${paramName} cannot exceed 1024 characters | 参数序列化后，字符串长度不可超过1024个字符 |
            | report sceneId:${sceneId} repeatedly | 单次启动流程里，场景ID不可重复上报 |
            </summary>
        </member>
        <member name="F:WeChatWASM.ReportSceneError.errCode">
            <summary>
            错误码
            | 错误信息 | 说明 |
            | - | - |
            | ${paramName} should be ${expectType} instead of ${paramType} | 参数的类型需为指定的数据类型 |
            | parameter.${paramName} should greater than or equal to zero | 参数的值需要大于等于0 |
            | parameter.${paramName}.${key} needs to be a string type and a non-empty string | value仅支持传入非空字符串 |
            | parameter.${paramName}.${key} needs to be a numeric value of type string | value仅支持传入纯数值组成的字符串（如：'25'） |
            | failed to serialize parameter.${paramName} by JSON.stringify | 参数对象序列化失败 |
            | parameter.${paramName} cannot exceed 1024 characters | 参数序列化后，字符串长度不可超过1024个字符 |
            | report sceneId:${sceneId} repeatedly | 单次启动流程里，场景ID不可重复上报 |
            </summary>
        </member>
        <member name="F:WeChatWASM.ReportSceneFailCallbackErr.data">
            <summary>
            需要基础库： `2.28.1`
            开发者上报的原始数据
            </summary>
        </member>
        <member name="F:WeChatWASM.ReportSceneFailCallbackErr.errMsg">
            <summary>
            需要基础库： `2.28.1`
            错误信息
            </summary>
        </member>
        <member name="F:WeChatWASM.ReportSceneSuccessCallbackResult.data">
            <summary>
            需要基础库： `2.28.1`
            开发者上报的原始数据
            </summary>
        </member>
        <member name="F:WeChatWASM.ReportUserBehaviorBranchAnalyticsOption.branchId">
            <summary>
            分支ID，在「小程序管理后台」获取
            </summary>
        </member>
        <member name="F:WeChatWASM.ReportUserBehaviorBranchAnalyticsOption.eventType">
            <summary>
            事件类型，1：曝光； 2：点击
            </summary>
        </member>
        <member name="F:WeChatWASM.ReportUserBehaviorBranchAnalyticsOption.branchDim">
            <summary>
            自定义维度，基础库 v2.14.0 开始支持可选
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasFriendPaymentOption.buyQuantity">
            <summary>
            购买数量。mode=game 时必填。购买数量。详见 [buyQuantity 限制说明](#buyQuantity限制说明)。
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasFriendPaymentOption.currencyType">
            <summary>
            币种
            可选值：
            - 'CNY': 人民币;
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasFriendPaymentOption.env">
            <summary>
            环境配置
            可选值：
            - 0: 米大师正式环境;
            - 1: 米大师沙箱环境;
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasFriendPaymentOption.mode">
            <summary>
            支付的类型，不同的支付类型有各自额外要传的附加参数
            可选值：
            - 'game': 购买游戏币;
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasFriendPaymentOption.nonceStr">
            <summary>
            随机字符串，长度应小于 128
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasFriendPaymentOption.offerId">
            <summary>
            在米大师侧申请的应用 id
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasFriendPaymentOption.outTradeNo">
            <summary>
            开发者业务订单号，每个订单号只能使用一次，重复使用会失败。要求32个字符内，只能是数字、大小写字母、符号 `_-|*@`
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasFriendPaymentOption.platform">
            <summary>
            申请接入时的平台，platform 与应用id有关。
            可选值：
            - 'android': Android平台;
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasFriendPaymentOption.signature">
            <summary>
            签名
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasFriendPaymentOption.timeStamp">
            <summary>
            生成这个随机字符串的 UNIX 时间戳（精确到秒）
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasFriendPaymentOption.zoneId">
            <summary>
            分区 ID
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasFriendPaymentOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasFriendPaymentOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasFriendPaymentOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.MidasFriendPaymentError.errMsg">
            <summary>
            错误信息
            | 错误码 | 错误信息 | 说明 |
            | - | - | - |
            | 1000 |  | mode错误 |
            | -15005 |  | 索要权限被封禁（索要功能不可用） |
            | -10073011 |  | 参数错误（具体错误见errMsg） |
            | -10073003 |  | outTradeNo业务单号重复 |
            | -10073012 |  | 索要单已支付 |
            | -10073013 |  | 索要单已超时 |
            | -10073014 |  | 签名错误 |
            | -10073015 |  | 索要功能不可用 |
            </summary>
        </member>
        <member name="F:WeChatWASM.MidasFriendPaymentError.errCode">
            <summary>
            错误码
            | 错误码 | 错误信息 | 说明 |
            | - | - | - |
            | 1000 |  | mode错误 |
            | -15005 |  | 索要权限被封禁（索要功能不可用） |
            | -10073011 |  | 参数错误（具体错误见errMsg） |
            | -10073003 |  | outTradeNo业务单号重复 |
            | -10073012 |  | 索要单已支付 |
            | -10073013 |  | 索要单已超时 |
            | -10073014 |  | 签名错误 |
            | -10073015 |  | 索要功能不可用 |
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasFriendPaymentSuccessCallbackResult.cloudID">
            <summary>
            敏感数据对应的云 ID，开通[云开发](https://developers.weixin.qq.com/minigame/dev/wxcloud/basis/getting-started.html)的小程序才会返回，可通过云调用直接获取开放数据，详细见[云调用直接获取开放数据](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html#method-cloud)
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasFriendPaymentSuccessCallbackResult.encryptedData">
            <summary>
            包括敏感数据在内的完整转发信息的加密数据，详细见[加密数据解密算法](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html)
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasFriendPaymentSuccessCallbackResult.errMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasFriendPaymentSuccessCallbackResult.iv">
            <summary>
            加密算法的初始向量，详细见[加密数据解密算法](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/signature.html)
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasPaymentOption.currencyType">
            <summary>
            币种
            可选值：
            - 'CNY': 人民币;
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasPaymentOption.mode">
            <summary>
            支付的类型，不同的支付类型有各自额外要传的附加参数。
            可选值：
            - 'game': 购买游戏币;
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasPaymentOption.offerId">
            <summary>
            在米大师侧申请的应用 id
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasPaymentOption.outTradeNo">
            <summary>
            业务订单号，每个订单号只能使用一次，重复使用会失败。开发者需要确保该订单号在对应游戏下的唯一性，平台会尽可能校验该唯一性约束，但极端情况下可能会跳过对该约束的校验。要求32个字符内，只能是数字、大小写字母、符号_-|*组成，不能以下划线（)开头。建议每次调用wx.requestMidasPayment都换新的outTradeNo。若没有传入，则平台会自动填充一个，并以下划线开头
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasPaymentOption.buyQuantity">
            <summary>
            购买数量。mode=game 时必填。购买数量。详见 [buyQuantity 限制说明](#buyquantity-限制说明)。
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasPaymentOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasPaymentOption.env">
            <summary>
            环境配置
            可选值：
            - 0: 米大师正式环境;
            - 1: 米大师沙箱环境;
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasPaymentOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasPaymentOption.platform">
            <summary>
            申请接入时的平台，platform 与应用id有关。
            可选值：
            - 'android': android;
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasPaymentOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasPaymentOption.zoneId">
            <summary>
            分区 ID
            </summary>
        </member>
        <member name="F:WeChatWASM.MidasPaymentError.errMsg">
            <summary>
            错误信息
            | 错误码 | 错误信息 | 说明 |
            | - | - | - |
            | -1 |  | 系统失败 |
            | -2 |  | 支付取消 |
            | -15001 |  | 虚拟支付接口错误码，缺少参数 |
            | -15002 |  | 虚拟支付接口错误码，参数不合法 |
            | -15003 |  | 虚拟支付接口错误码，订单重复 |
            | -15004 |  | 虚拟支付接口错误码，后台错误 |
            | -15005 |  | 虚拟支付接口错误码，appId权限被封禁 |
            | -15006 |  | 虚拟支付接口错误码，货币类型不支持 |
            | -15007 |  | 虚拟支付接口错误码，订单已支付 |
            | -15009 |  | 虚拟支付接口错误码，由于健康系统限制，本次支付已超过限额（这种错误情况会有默认弹窗提示） |
            | -15010 |  | 虚拟支付接口错误码，正式版小游戏不允许在沙箱环境支付 |
            | 1 |  | 虚拟支付接口错误码，用户取消支付 |
            | 2 |  | 虚拟支付接口错误码，客户端错误,判断到小程序在用户处于支付中时,又发起了一笔支付请求 |
            | 3 |  | 虚拟支付接口错误码，Android独有错误：用户使用GooglePlay支付，而手机未安装GooglePlay |
            | 4 |  | 虚拟支付接口错误码，用户操作系统支付状态异常 |
            | 5 |  | 虚拟支付接口错误码，操作系统错误 |
            | 6 |  | 虚拟支付接口错误码，其他错误 |
            | 7 |  | 虚拟支付接口错误码，支付取消 |
            | 1000 |  | 参数错误 |
            | 1001 |  | 分区未发布 |
            | 1003 |  | 米大师Portal错误 |
            </summary>
        </member>
        <member name="F:WeChatWASM.MidasPaymentError.errCode">
            <summary>
            错误码
            | 错误码 | 错误信息 | 说明 |
            | - | - | - |
            | -1 |  | 系统失败 |
            | -2 |  | 支付取消 |
            | -15001 |  | 虚拟支付接口错误码，缺少参数 |
            | -15002 |  | 虚拟支付接口错误码，参数不合法 |
            | -15003 |  | 虚拟支付接口错误码，订单重复 |
            | -15004 |  | 虚拟支付接口错误码，后台错误 |
            | -15005 |  | 虚拟支付接口错误码，appId权限被封禁 |
            | -15006 |  | 虚拟支付接口错误码，货币类型不支持 |
            | -15007 |  | 虚拟支付接口错误码，订单已支付 |
            | -15009 |  | 虚拟支付接口错误码，由于健康系统限制，本次支付已超过限额（这种错误情况会有默认弹窗提示） |
            | -15010 |  | 虚拟支付接口错误码，正式版小游戏不允许在沙箱环境支付 |
            | 1 |  | 虚拟支付接口错误码，用户取消支付 |
            | 2 |  | 虚拟支付接口错误码，客户端错误,判断到小程序在用户处于支付中时,又发起了一笔支付请求 |
            | 3 |  | 虚拟支付接口错误码，Android独有错误：用户使用GooglePlay支付，而手机未安装GooglePlay |
            | 4 |  | 虚拟支付接口错误码，用户操作系统支付状态异常 |
            | 5 |  | 虚拟支付接口错误码，操作系统错误 |
            | 6 |  | 虚拟支付接口错误码，其他错误 |
            | 7 |  | 虚拟支付接口错误码，支付取消 |
            | 1000 |  | 参数错误 |
            | 1001 |  | 分区未发布 |
            | 1003 |  | 米大师Portal错误 |
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasPaymentFailCallbackErr.errCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasPaymentFailCallbackErr.errMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasPaymentSuccessCallbackResult.errMsg">
            <summary>
            调用成功信息
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestSubscribeMessageOption.tmplIds">
            <summary>
            需要订阅的消息模板的id的集合，一次调用最多可订阅3条消息（注意：iOS客户端7.0.6版本、Android客户端7.0.7版本之后的一次性订阅/长期订阅才支持多个模板消息，iOS客户端7.0.5版本、Android客户端7.0.6版本之前的一次订阅只支持一个模板消息）消息模板id在[微信公众平台(mp.weixin.qq.com)-功能-订阅消息]中配置。每个tmplId对应的模板标题需要不相同，否则会被过滤。
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestSubscribeMessageOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestSubscribeMessageOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestSubscribeMessageOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestSubscribeMessageFailCallbackResult.errCode">
            <summary>
            接口调用失败错误码
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestSubscribeMessageFailCallbackResult.errMsg">
            <summary>
            接口调用失败错误信息
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestSubscribeMessageSuccessCallbackResult.errMsg">
            <summary>
            [TEMPLATE_ID]是动态的键，即模板id，值包括'accept'、'reject'、'ban'、'filter'。'accept'表示用户同意订阅该条id对应的模板消息，'reject'表示用户拒绝订阅该条id对应的模板消息，'ban'表示已被后台封禁，'filter'表示该模板因为模板标题同名被后台过滤。例如 { errMsg: "requestSubscribeMessage:ok", zun-LzcQyW-edafCVvzPkK4de2Rllr1fFpw2A_x0oXE: "accept"} 表示用户同意订阅zun-LzcQyW-edafCVvzPkK4de2Rllr1fFpw2A_x0oXE这条消息
            </summary>
            <summary>
            接口调用成功时errMsg值为'requestSubscribeMessage:ok'
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestSubscribeSystemMessageOption.msgTypeList">
            <summary>
            系统订阅消息类型列表，一次调用最多可订阅3种类型的消息，目前支持两种类型，"SYS_MSG_TYPE_INTERACTIVE"（好友互动提醒）、"SYS_MSG_TYPE_RANK"（排行榜超越提醒）
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestSubscribeSystemMessageOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestSubscribeSystemMessageOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestSubscribeSystemMessageOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestSubscribeSystemMessageSuccessCallbackResult.errMsg">
            <summary>
            [MSG_TYPE]是动态的键，即系统订阅消息类型，值为'accept'、'reject'、'ban'，'accept'表示用户同意订阅该类型对应的模板消息，'reject'表示用户拒绝订阅该类型对应的模板消息，'ban'表示已被后台封禁。例如 { errMsg: "requestSubscribeSystemMessage:ok", SYS_MSG_TYPE_INTERACTIVE: "accept" } 表示用户同意订阅'SYS_MSG_TYPE_INTERACTIVE'这条消息
            </summary>
            <summary>
            接口调用成功时errMsg值为'requestSubscribeSystemMessage:ok'
            </summary>
        </member>
        <member name="F:WeChatWASM.RequirePrivacyAuthorizeOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.RequirePrivacyAuthorizeOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.RequirePrivacyAuthorizeOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ReserveChannelsLiveOption.noticeId">
            <summary>
            预告 id，通过 getChannelsLiveNoticeInfo 接口获取
            </summary>
        </member>
        <member name="F:WeChatWASM.RestartMiniProgramOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.RestartMiniProgramOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.RestartMiniProgramOption.path">
            <summary>
            打开的页面路径，path 中 ? 后面的部分会成为 query
            </summary>
        </member>
        <member name="F:WeChatWASM.RestartMiniProgramOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SaveFileToDiskOption.filePath">
            <summary>
            待保存文件路径
            </summary>
        </member>
        <member name="F:WeChatWASM.SaveFileToDiskOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.SaveFileToDiskOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SaveFileToDiskOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SaveImageToPhotosAlbumOption.filePath">
            <summary>
            图片文件路径，可以是临时文件路径或永久文件路径 (本地路径) ，不支持网络路径
            </summary>
        </member>
        <member name="F:WeChatWASM.SaveImageToPhotosAlbumOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.SaveImageToPhotosAlbumOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SaveImageToPhotosAlbumOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ScanCodeOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.ScanCodeOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ScanCodeOption.onlyFromCamera">
            <summary>
            需要基础库： `1.2.0`
            是否只能从相机扫码，不允许从相册选择图片
            </summary>
        </member>
        <member name="F:WeChatWASM.ScanCodeOption.scanType">
            <summary>
            需要基础库： `1.7.0`
            扫码类型
            可选值：
            - 'barCode': 一维码;
            - 'qrCode': 二维码;
            - 'datamatrix': Data Matrix 码;
            - 'pdf417': PDF417 条码;
            </summary>
        </member>
        <member name="F:WeChatWASM.ScanCodeOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ScanCodeSuccessCallbackResult.charSet">
            <summary>
            所扫码的字符集
            </summary>
        </member>
        <member name="F:WeChatWASM.ScanCodeSuccessCallbackResult.path">
            <summary>
            当所扫的码为当前小程序二维码时，会返回此字段，内容为二维码携带的 path
            </summary>
        </member>
        <member name="F:WeChatWASM.ScanCodeSuccessCallbackResult.rawData">
            <summary>
            原始数据，base64编码
            </summary>
        </member>
        <member name="F:WeChatWASM.ScanCodeSuccessCallbackResult.result">
            <summary>
            所扫码的内容
            </summary>
        </member>
        <member name="F:WeChatWASM.ScanCodeSuccessCallbackResult.scanType">
            <summary>
            所扫码的类型
            可选值：
            - 'QR_CODE': 二维码;
            - 'AZTEC': 一维码;
            - 'CODABAR': 一维码;
            - 'CODE_39': 一维码;
            - 'CODE_93': 一维码;
            - 'CODE_128': 一维码;
            - 'DATA_MATRIX': 二维码;
            - 'EAN_8': 一维码;
            - 'EAN_13': 一维码;
            - 'ITF': 一维码;
            - 'MAXICODE': 一维码;
            - 'PDF_417': 二维码;
            - 'RSS_14': 一维码;
            - 'RSS_EXPANDED': 一维码;
            - 'UPC_A': 一维码;
            - 'UPC_E': 一维码;
            - 'UPC_EAN_EXTENSION': 一维码;
            - 'WX_CODE': 二维码;
            - 'CODE_25': 一维码;
            </summary>
        </member>
        <member name="F:WeChatWASM.SetBLEMTUOption.deviceId">
            <summary>
            蓝牙设备 id
            </summary>
        </member>
        <member name="F:WeChatWASM.SetBLEMTUOption.mtu">
            <summary>
            最大传输单元。设置范围为 (22,512) 区间内，单位 bytes
            </summary>
        </member>
        <member name="F:WeChatWASM.SetBLEMTUOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.SetBLEMTUOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetBLEMTUOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetBLEMTUFailCallbackResult.mtu">
            <summary>
            最终协商的 MTU 值。如果协商失败则无此参数。安卓客户端 8.0.9 开始支持。
            </summary>
        </member>
        <member name="F:WeChatWASM.SetBLEMTUSuccessCallbackResult.mtu">
            <summary>
            最终协商的 MTU 值，与传入参数一致。安卓客户端 8.0.9 开始支持。
            </summary>
        </member>
        <member name="F:WeChatWASM.SetBackgroundFetchTokenOption.token">
            <summary>
            自定义的登录态
            </summary>
        </member>
        <member name="F:WeChatWASM.SetBackgroundFetchTokenOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.SetBackgroundFetchTokenOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetBackgroundFetchTokenOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetClipboardDataOption.data">
            <summary>
            剪贴板的内容
            </summary>
        </member>
        <member name="F:WeChatWASM.SetClipboardDataOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.SetClipboardDataOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetClipboardDataOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetDeviceOrientationOption.value">
            <summary>
            表示切换为横屏还是竖屏
            可选值：
            - 'landscape': 横屏;
            - 'portrait': 竖屏;
            </summary>
        </member>
        <member name="F:WeChatWASM.SetDeviceOrientationOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.SetDeviceOrientationOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetDeviceOrientationOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetEnableDebugOption.enableDebug">
            <summary>
            是否打开调试
            </summary>
        </member>
        <member name="F:WeChatWASM.SetEnableDebugOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.SetEnableDebugOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetEnableDebugOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetInnerAudioOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.SetInnerAudioOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetInnerAudioOption.mixWithOther">
            <summary>
            是否与其他音频混播，设置为 true 之后，不会终止其他应用或微信内的音乐
            </summary>
        </member>
        <member name="F:WeChatWASM.SetInnerAudioOption.obeyMuteSwitch">
            <summary>
            （仅在 iOS 生效）是否遵循静音开关，设置为 false 之后，即使是在静音模式下，也能播放声音
            </summary>
        </member>
        <member name="F:WeChatWASM.SetInnerAudioOption.speakerOn">
            <summary>
            true 代表用扬声器播放，false 代表听筒播放，默认值为 true。
            </summary>
        </member>
        <member name="F:WeChatWASM.SetInnerAudioOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetKeepScreenOnOption.keepScreenOn">
            <summary>
            是否保持屏幕常亮
            </summary>
        </member>
        <member name="F:WeChatWASM.SetKeepScreenOnOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.SetKeepScreenOnOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetKeepScreenOnOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetMenuStyleOption.style">
            <summary>
            样式风格
            可选值：
            - 'light': 浅色;
            - 'dark': 深色;
            </summary>
        </member>
        <member name="F:WeChatWASM.SetMenuStyleOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.SetMenuStyleOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetMenuStyleOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetScreenBrightnessOption.value">
            <summary>
            屏幕亮度值，范围 0 ~ 1，0 最暗，1 最亮。在安卓端支持传入特殊值 -1，表示屏幕亮度跟随系统变化
            </summary>
        </member>
        <member name="F:WeChatWASM.SetScreenBrightnessOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.SetScreenBrightnessOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetScreenBrightnessOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetStatusBarStyleOption.style">
            <summary>
            样式风格
            可选值：
            - 'white': 白色;
            - 'black': 浅色;
            </summary>
        </member>
        <member name="F:WeChatWASM.SetStatusBarStyleOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.SetStatusBarStyleOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetStatusBarStyleOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetUserCloudStorageOption.KVDataList">
            <summary>
            要修改的 KV 数据列表
            </summary>
        </member>
        <member name="F:WeChatWASM.SetUserCloudStorageOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.SetUserCloudStorageOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetUserCloudStorageOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.KVData.key">
            <summary>
            数据的 key
            </summary>
        </member>
        <member name="F:WeChatWASM.KVData.value">
            <summary>
            数据的 value
            </summary>
        </member>
        <member name="F:WeChatWASM.SetVisualEffectOnCaptureOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.SetVisualEffectOnCaptureOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetVisualEffectOnCaptureOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.SetVisualEffectOnCaptureOption.visualEffect">
            <summary>
            截屏/录屏时的表现，仅支持 none / hidden，传入 hidden 则表示在截屏/录屏时隐藏屏幕
            </summary>
        </member>
        <member name="F:WeChatWASM.ShareAppMessageOption.imageUrl">
            <summary>
            转发显示图片的链接，可以是网络图片路径或本地图片文件路径或相对代码包根目录的图片文件路径。显示图片长宽比是 5:4
            </summary>
        </member>
        <member name="F:WeChatWASM.ShareAppMessageOption.imageUrlId">
            <summary>
            需要基础库： `2.4.3`
            审核通过的图片 ID，详见 [使用审核通过的转发图片](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/share/share.html#使用审核通过的转发图片)
            </summary>
        </member>
        <member name="F:WeChatWASM.ShareAppMessageOption.path">
            <summary>
            需要基础库： `2.12.2`
            独立分包路径。详见 [小游戏独立分包指南](https://developers.weixin.qq.com/minigame/dev/guide/base-ability/independent-sub-packages.html)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:WeChatWASM.ShareAppMessageOption.query" -->
        <member name="F:WeChatWASM.ShareAppMessageOption.title">
            <summary>
            转发标题，不传则默认使用当前小游戏的昵称。
            </summary>
        </member>
        <member name="F:WeChatWASM.ShareAppMessageOption.toCurrentGroup">
            <summary>
            需要基础库： `2.12.2`
            是否转发到当前群。该参数只对从群工具栏打开的场景下生效，默认转发到当前群，填入false时可转发到其他会话。
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowActionSheetOption.itemList">
            <summary>
            按钮的文字数组，数组长度最大为 6
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowActionSheetOption.alertText">
            <summary>
            需要基础库： `2.14.0`
            警示文案
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowActionSheetOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowActionSheetOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowActionSheetOption.itemColor">
            <summary>
            按钮的文字颜色
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowActionSheetOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowActionSheetSuccessCallbackResult.tapIndex">
            <summary>
            用户点击的按钮序号，从上到下的顺序，从0开始
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowKeyboardOption.confirmHold">
            <summary>
            当点击完成时键盘是否收起
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowKeyboardOption.confirmType">
            <summary>
            键盘右下角 confirm 按钮的类型，只影响按钮的文本内容
            可选值：
            - 'done': 完成;
            - 'next': 下一个;
            - 'search': 搜索;
            - 'go': 前往;
            - 'send': 发送;
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowKeyboardOption.defaultValue">
            <summary>
            键盘输入框显示的默认值
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowKeyboardOption.maxLength">
            <summary>
            键盘中文本的最大长度
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowKeyboardOption.multiple">
            <summary>
            是否为多行输入
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowKeyboardOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowKeyboardOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowKeyboardOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowLoadingOption.title">
            <summary>
            提示的内容
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowLoadingOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowLoadingOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowLoadingOption.mask">
            <summary>
            是否显示透明蒙层，防止触摸穿透
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowLoadingOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowModalOption.cancelColor">
            <summary>
            取消按钮的文字颜色，必须是 16 进制格式的颜色字符串
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowModalOption.cancelText">
            <summary>
            取消按钮的文字，最多 4 个字符
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowModalOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowModalOption.confirmColor">
            <summary>
            确认按钮的文字颜色，必须是 16 进制格式的颜色字符串
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowModalOption.confirmText">
            <summary>
            确认按钮的文字，最多 4 个字符
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowModalOption.content">
            <summary>
            提示的内容
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowModalOption.editable">
            <summary>
            需要基础库： `2.17.1`
            是否显示输入框
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowModalOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowModalOption.placeholderText">
            <summary>
            需要基础库： `2.17.1`
            显示输入框时的提示文本
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowModalOption.showCancel">
            <summary>
            是否显示取消按钮
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowModalOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowModalOption.title">
            <summary>
            提示的标题
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowModalSuccessCallbackResult.cancel">
            <summary>
            需要基础库： `1.1.0`
            为 true 时，表示用户点击了取消（用于 Android 系统区分点击蒙层关闭还是点击取消按钮关闭）
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowModalSuccessCallbackResult.confirm">
            <summary>
            为 true 时，表示用户点击了确定按钮
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowModalSuccessCallbackResult.content">
            <summary>
            editable 为 true 时，用户输入的文本
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowShareImageMenuOption.path">
            <summary>
            要分享的图片地址，必须为本地路径或临时路径
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowShareImageMenuOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowShareImageMenuOption.entrancePath">
            <summary>
            需要基础库： `3.2.0`
            从消息小程序入口打开小程序的路径，如果当前页面允许分享给朋友，则默认为当前页面路径，否则默认为小程序首页
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowShareImageMenuOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowShareImageMenuOption.needShowEntrance">
            <summary>
            需要基础库： `3.2.0`
            分享的图片消息是否要带小程序入口
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowShareImageMenuOption.style">
            <summary>
            需要基础库： `3.2.0`
            分享样式，可选 v2
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowShareImageMenuOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowShareMenuOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowShareMenuOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowShareMenuOption.menus">
            <summary>
            需要基础库： `2.11.3`
            本接口为 Beta 版本，暂只在 Android 平台支持。需要显示的转发按钮名称列表，默认['shareAppMessage']。按钮名称合法值包含 "shareAppMessage"、"shareTimeline" 两种
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowShareMenuOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowShareMenuOption.withShareTicket">
            <summary>
            是否使用带 shareTicket 的转发[详情](#)
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowToastOption.title">
            <summary>
            提示的内容
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowToastOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowToastOption.duration">
            <summary>
            提示的延迟时间
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowToastOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowToastOption.icon">
            <summary>
            图标
            可选值：
            - 'success': 显示成功图标，此时 title 文本最多显示 7 个汉字长度;
            - 'error': 显示失败图标，此时 title 文本最多显示 7 个汉字长度;
            - 'loading': 显示加载图标，此时 title 文本最多显示 7 个汉字长度;
            - 'none': 不显示图标，此时 title 文本最多可显示两行，[1.9.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html)及以上版本支持;
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowToastOption.image">
            <summary>
            需要基础库： `1.1.0`
            自定义图标的本地路径，image 的优先级高于 icon
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowToastOption.mask">
            <summary>
            是否显示透明蒙层，防止触摸穿透
            </summary>
        </member>
        <member name="F:WeChatWASM.ShowToastOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StartAccelerometerOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.StartAccelerometerOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StartAccelerometerOption.interval">
            <summary>
            需要基础库： `2.1.0`
            监听加速度数据回调函数的执行频率
            可选值：
            - 'game': 适用于更新游戏的回调频率，在 20ms/次 左右;
            - 'ui': 适用于更新 UI 的回调频率，在 60ms/次 左右;
            - 'normal': 普通的回调频率，在 200ms/次 左右;
            </summary>
        </member>
        <member name="F:WeChatWASM.StartAccelerometerOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StartBeaconDiscoveryOption.uuids">
            <summary>
            Beacon 设备广播的 UUID 列表
            </summary>
        </member>
        <member name="F:WeChatWASM.StartBeaconDiscoveryOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.StartBeaconDiscoveryOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StartBeaconDiscoveryOption.ignoreBluetoothAvailable">
            <summary>
            是否校验蓝牙开关，仅在 iOS 下有效。iOS 11 起，控制面板里关掉蓝牙，还是能继续使用 Beacon 服务。
            </summary>
        </member>
        <member name="F:WeChatWASM.StartBeaconDiscoveryOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StartBluetoothDevicesDiscoveryOption.allowDuplicatesKey">
            <summary>
            是否允许重复上报同一设备。如果允许重复上报，则 [wx.onBlueToothDeviceFound](#) 方法会多次上报同一设备，但是 RSSI 值会有不同。
            </summary>
        </member>
        <member name="F:WeChatWASM.StartBluetoothDevicesDiscoveryOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.StartBluetoothDevicesDiscoveryOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StartBluetoothDevicesDiscoveryOption.interval">
            <summary>
            上报设备的间隔，单位 ms。0 表示找到新设备立即上报，其他数值根据传入的间隔上报。
            </summary>
        </member>
        <member name="F:WeChatWASM.StartBluetoothDevicesDiscoveryOption.powerLevel">
            <summary>
            扫描模式，越高扫描越快，也越耗电。仅安卓微信客户端 7.0.12 及以上支持。
            可选值：
            - 'low': 低;
            - 'medium': 中;
            - 'high': 高;
            </summary>
        </member>
        <member name="F:WeChatWASM.StartBluetoothDevicesDiscoveryOption.services">
            <summary>
            要搜索的蓝牙设备主服务的 UUID 列表（支持 16/32/128 位 UUID）。某些蓝牙设备会广播自己的主 service 的 UUID。如果设置此参数，则只搜索广播包有对应 UUID 的主服务的蓝牙设备。建议通过该参数过滤掉周边不需要处理的其他蓝牙设备。
            </summary>
        </member>
        <member name="F:WeChatWASM.StartBluetoothDevicesDiscoveryOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StartCompassOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.StartCompassOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StartCompassOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StartDeviceMotionListeningOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.StartDeviceMotionListeningOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StartDeviceMotionListeningOption.interval">
            <summary>
            监听设备方向的变化回调函数的执行频率
            可选值：
            - 'game': 适用于更新游戏的回调频率，在 20ms/次 左右;
            - 'ui': 适用于更新 UI 的回调频率，在 60ms/次 左右;
            - 'normal': 普通的回调频率，在 200ms/次 左右;
            </summary>
        </member>
        <member name="F:WeChatWASM.StartDeviceMotionListeningOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StopAccelerometerOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.StopAccelerometerOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StopAccelerometerOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StopBeaconDiscoveryOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.StopBeaconDiscoveryOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StopBeaconDiscoveryOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StopBluetoothDevicesDiscoveryOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.StopBluetoothDevicesDiscoveryOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StopBluetoothDevicesDiscoveryOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StopCompassOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.StopCompassOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StopCompassOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StopDeviceMotionListeningOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.StopDeviceMotionListeningOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StopDeviceMotionListeningOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StopFaceDetectOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.StopFaceDetectOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StopFaceDetectOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdateKeyboardOption.value">
            <summary>
            键盘输入框的当前值
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdateKeyboardOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdateKeyboardOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdateKeyboardOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdateShareMenuOption.activityId">
            <summary>
            需要基础库： `2.4.0`
            动态消息的 activityId。通过 [updatableMessage.createActivityId](https://developers.weixin.qq.com/minigame/dev/api-backend/open-api/updatable-message/updatableMessage.createActivityId.html) 接口获取
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdateShareMenuOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdateShareMenuOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdateShareMenuOption.isPrivateMessage">
            <summary>
            需要基础库： `2.13.0`
            是否是私密消息。详见 [小程序私密消息](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/share/private-message.html)
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdateShareMenuOption.isUpdatableMessage">
            <summary>
            需要基础库： `2.4.0`
            是否是动态消息，详见[动态消息](https://developers.weixin.qq.com/minigame/dev/guide/open-ability/share/updatable-message.html)
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdateShareMenuOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdateShareMenuOption.templateInfo">
            <summary>
            需要基础库： `2.4.0`
            动态消息的模板信息
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdateShareMenuOption.toDoActivityId">
            <summary>
            需要基础库： `2.11.0`
            群待办消息的id，通过toDoActivityId可以把多个群待办消息聚合为同一个。通过 [updatableMessage.createActivityId](https://developers.weixin.qq.com/minigame/dev/api-backend/open-api/updatable-message/updatableMessage.createActivityId.html) 接口获取。详见[群待办消息](#)
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdateShareMenuOption.withShareTicket">
            <summary>
            是否使用带 shareTicket 的转发[详情](#)
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdatableMessageFrontEndTemplateInfo.parameterList">
            <summary>
            参数列表
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdatableMessageFrontEndParameter.name">
            <summary>
            参数名
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdatableMessageFrontEndParameter.value">
            <summary>
            参数值
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdateVoIPChatMuteConfigOption.muteConfig">
            <summary>
            静音设置
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdateVoIPChatMuteConfigOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdateVoIPChatMuteConfigOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdateVoIPChatMuteConfigOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdateWeChatAppOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdateWeChatAppOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.UpdateWeChatAppOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.VibrateLongOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.VibrateLongOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.VibrateLongOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.VibrateShortOption.type">
            <summary>
            需要基础库： `2.13.0`
            震动强度类型，有效值为：heavy、medium、light
            </summary>
        </member>
        <member name="F:WeChatWASM.VibrateShortOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.VibrateShortOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.VibrateShortOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.VibrateShortFailCallbackResult.errMsg">
            <summary>
            错误信息
            可选值：
            - 'style is not support': 当前设备不支持设置震动等级;
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteBLECharacteristicValueOption.characteristicId">
            <summary>
            蓝牙特征的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteBLECharacteristicValueOption.deviceId">
            <summary>
            蓝牙设备 id
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteBLECharacteristicValueOption.serviceId">
            <summary>
            蓝牙特征对应服务的 UUID
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteBLECharacteristicValueOption.value">
            <summary>
            蓝牙设备特征对应的二进制值
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteBLECharacteristicValueOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteBLECharacteristicValueOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteBLECharacteristicValueOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.WriteBLECharacteristicValueOption.writeType">
            <summary>
            蓝牙特征值的写模式设置，有两种模式，iOS 优先 write，安卓优先 writeNoResponse 。（基础库 2.22.0 开始支持）
            可选值：
            - 'write': 强制回复写，不支持时报错;
            - 'writeNoResponse': 强制无回复写，不支持时报错;
            </summary>
        </member>
        <member name="F:WeChatWASM.StartGameLiveOption.query">
            <summary>
            自定义query
            </summary>
        </member>
        <member name="F:WeChatWASM.StartGameLiveOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.StartGameLiveOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.StartGameLiveOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.CheckGameLiveEnabledOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.CheckGameLiveEnabledOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.CheckGameLiveEnabledOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.CheckGameLiveEnabledSuccessCallbackOption.errMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:WeChatWASM.CheckGameLiveEnabledSuccessCallbackOption.isEnabled">
            <summary>
            用户是否有直播权限
            </summary>
        </member>
        <member name="F:WeChatWASM.OnGameLiveStateChangeCallbackResult.state">
            <summary>
            当前直播状态
            state 合法值：
            menuClick 用户点击右上角直播按钮
            start 开始直播
            end 直播结束
            </summary>
        </member>
        <member name="F:WeChatWASM.OnGameLiveStateChangeCallbackResult.feedId">
            <summary>
            当前直播id，只在 state 是 start 时会返回 (基础库v2.19.2开始支持)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:WeChatWASM.OnGameLiveStateChangeCallbackResponse.query" -->
        <member name="F:WeChatWASM.GameLiveState.isLive">
            <summary>
            是否正在直播
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserCurrentGameliveInfoOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserCurrentGameliveInfoOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserCurrentGameliveInfoOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserCurrentGameliveInfoSuccessCallbackOption.feedIdList">
            <summary>
            最近几场直播的 feedId 列表
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserRecentGameLiveInfoOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserRecentGameLiveInfoOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserRecentGameLiveInfoOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserGameLiveDetailsSuccessCallbackOption.encryptedData">
            <summary>
            包括敏感数据在内的完整转发信息的加密数据，详细见加密数据解密算法 https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/signature.html
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserGameLiveDetailsSuccessCallbackOption.iv">
            <summary>
            加密算法的初始向量，详细见加密数据解密算法
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserGameLiveDetailsSuccessCallbackOption.cloudID">
            <summary>
            敏感数据对应的云 ID，开通云开发的小程序才会返回，可通过云调用直接获取开放数据，详细见云调用直接获取开放数据
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserGameLiveDetailsSuccessCallbackOption.feedIdList">
            <summary>
            最近几场直播的 feedId 列表
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserGameLiveDetailsSuccessCallbackOption.errMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserGameLiveDetailsOption.feedIdList">
            <summary>
            要查询的直播的id
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserGameLiveDetailsOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserGameLiveDetailsOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.GetUserGameLiveDetailsOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsLiveCollectionOption.openIds">
            <summary>
            支持填写最多4个openid，该用户的直播间将在直播专区置顶显示；可不填
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsLiveCollectionOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsLiveCollectionOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenChannelsLiveCollectionOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenPageOption.openlink">
            <summary>
            用于打开指定游戏内容页面的开放链接
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenPageOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenPageOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenPageOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasPaymentGameItemOption.signData">
            <summary>
            支付原串
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasPaymentGameItemOption.paySig">
            <summary>
            支付签名
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasPaymentGameItemOption.signature">
            <summary>
            用户态签名
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasPaymentGameItemOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasPaymentGameItemOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestMidasPaymentGameItemOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.MidasPaymentGameItemError.errMsg">
            <summary>
            错误信息
            | 错误码 | 错误信息 | 说明 |
            | - | - | - |
            | -1 |  | 系统失败 |
            | -2 |  | 支付取消 |
            | -15001 |  | 虚拟支付接口错误码，缺少参数 |
            | -15002 |  | 虚拟支付接口错误码，参数不合法 |
            | -15003 |  | 虚拟支付接口错误码，订单重复 |
            | -15004 |  | 虚拟支付接口错误码，后台错误 |
            | -15005 |  | 虚拟支付接口错误码，appId权限被封禁 |
            | -15006 |  | 虚拟支付接口错误码，货币类型不支持 |
            | -15007 |  | 虚拟支付接口错误码，订单已支付 |
            | -15009 |  | 虚拟支付接口错误码，由于健康系统限制，本次支付已超过限额（这种错误情况会有默认弹窗提示） |
            | -15010 |  | 虚拟支付接口错误码，正式版小游戏不允许在沙箱环境支付 |
            | 1 |  | 虚拟支付接口错误码，用户取消支付 |
            | 2 |  | 虚拟支付接口错误码，客户端错误,判断到小程序在用户处于支付中时,又发起了一笔支付请求 |
            | 3 |  | 虚拟支付接口错误码，Android独有错误：用户使用GooglePlay支付，而手机未安装GooglePlay |
            | 4 |  | 虚拟支付接口错误码，用户操作系统支付状态异常 |
            | 5 |  | 虚拟支付接口错误码，操作系统错误 |
            | 6 |  | 虚拟支付接口错误码，其他错误 |
            | 7 |  | 虚拟支付接口错误码，支付取消 |
            | 1000 |  | 参数错误 |
            | 1001 |  | 分区未发布 |
            | 1003 |  | 米大师Portal错误 |
            </summary>
        </member>
        <member name="F:WeChatWASM.MidasPaymentGameItemError.errCode">
            <summary>
            错误码
            | 错误码 | 错误信息 | 说明 |
            | - | - | - |
            | -1 |  | 系统失败 |
            | -2 |  | 支付取消 |
            | -15001 |  | 虚拟支付接口错误码，缺少参数 |
            | -15002 |  | 虚拟支付接口错误码，参数不合法 |
            | -15003 |  | 虚拟支付接口错误码，订单重复 |
            | -15004 |  | 虚拟支付接口错误码，后台错误 |
            | -15005 |  | 虚拟支付接口错误码，appId权限被封禁 |
            | -15006 |  | 虚拟支付接口错误码，货币类型不支持 |
            | -15007 |  | 虚拟支付接口错误码，订单已支付 |
            | -15009 |  | 虚拟支付接口错误码，由于健康系统限制，本次支付已超过限额（这种错误情况会有默认弹窗提示） |
            | -15010 |  | 虚拟支付接口错误码，正式版小游戏不允许在沙箱环境支付 |
            | -15012 |  | 虚拟支付接口错误码，小游戏用户态签名错误 |
            | -15014 |  | 虚拟支付接口错误码，小游戏支付签名错误 |
            | -15015 |  | sessionkey过期 |
            | -15016 |  | goodsprice道具价格错误 |
            | 1 |  | 虚拟支付接口错误码，用户取消支付 |
            | 2 |  | 虚拟支付接口错误码，客户端错误,判断到小程序在用户处于支付中时,又发起了一笔支付请求 |
            | 3 |  | 虚拟支付接口错误码，Android独有错误：用户使用GooglePlay支付，而手机未安装GooglePlay |
            | 4 |  | 虚拟支付接口错误码，用户操作系统支付状态异常 |
            | 5 |  | 虚拟支付接口错误码，操作系统错误 |
            | 6 |  | 虚拟支付接口错误码，其他错误 |
            | 7 |  | 虚拟支付接口错误码，支付取消 |
            | 1000 |  | 参数错误 |
            | 1001 |  | 分区未发布 |
            | 1003 |  | 米大师Portal错误 |
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestSubscribeLiveActivityOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestSubscribeLiveActivityOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestSubscribeLiveActivityOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestSubscribeLiveActivitySuccessCallbackResult.code">
            <summary>
            code
            </summary>
        </member>
        <member name="F:WeChatWASM.RequestSubscribeLiveActivitySuccessCallbackResult.errMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenBusinessViewOption.businessType">
            <summary>
            要打开的业务类型，目前仅支持 'servicecommentpage'
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenBusinessViewOption.complete">
            <summary>
            调用成功、失败都会执行
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenBusinessViewOption.fail">
            <summary>
            评价失败的回调
            </summary>
        </member>
        <member name="F:WeChatWASM.OpenBusinessViewOption.success">
            <summary>
            评价成功的回调
            </summary>
        </member>
        <member name="F:WeChatWASM.FrameDataOptions.data">
            <summary>
            帧数据
            </summary>
        </member>
        <member name="F:WeChatWASM.FrameDataOptions.height">
            <summary>
            帧数据高度
            </summary>
        </member>
        <member name="F:WeChatWASM.FrameDataOptions.pkDts">
            <summary>
            帧原始 dts
            </summary>
        </member>
        <member name="F:WeChatWASM.FrameDataOptions.pkPts">
            <summary>
            帧原始 pts
            </summary>
        </member>
        <member name="F:WeChatWASM.FrameDataOptions.width">
            <summary>
            帧数据宽度
            </summary>
        </member>
        <member name="M:WeChatWASM.WXOpenDataContext.PostMessage(System.String)">
            <summary>
            向开放数据域发送消息
            </summary>
            <param name="msg">要发送的消息</param>
        </member>
        <member name="M:WeChatWASM.WXRealtimeLogManager.WX_RealtimeLogManagerAddFilterMsg(System.String,System.String)">
            <summary>
            [RealtimeLogManager.addFilterMsg(string msg)](https://developers.weixin.qq.com/minigame/dev/api/base/debug/RealtimeLogManager.addFilterMsg.html)
            需要基础库： `2.14.4`
            添加过滤关键字，暂不支持在插件使用
            </summary>
        </member>
        <member name="M:WeChatWASM.WXRealtimeLogManager.WX_RealtimeLogManagerError(System.String,System.String)">
            <summary>
            [RealtimeLogManager.error()](https://developers.weixin.qq.com/minigame/dev/api/base/debug/RealtimeLogManager.error.html)
            需要基础库： `2.14.4`
            写 error 日志，暂不支持在插件使用
            </summary>
        </member>
        <member name="M:WeChatWASM.WXRealtimeLogManager.WX_RealtimeLogManagerInfo(System.String,System.String)">
            <summary>
            [RealtimeLogManager.info()](https://developers.weixin.qq.com/minigame/dev/api/base/debug/RealtimeLogManager.info.html)
            需要基础库： `2.14.4`
            写 info 日志，暂不支持在插件使用
            </summary>
        </member>
        <member name="M:WeChatWASM.WXRealtimeLogManager.WX_RealtimeLogManagerSetFilterMsg(System.String,System.String)">
            <summary>
            [RealtimeLogManager.setFilterMsg(string msg)](https://developers.weixin.qq.com/minigame/dev/api/base/debug/RealtimeLogManager.setFilterMsg.html)
            需要基础库： `2.14.4`
            设置过滤关键字，暂不支持在插件使用
            </summary>
        </member>
        <member name="M:WeChatWASM.WXRealtimeLogManager.WX_RealtimeLogManagerWarn(System.String,System.String)">
            <summary>
            [RealtimeLogManager.warn()](https://developers.weixin.qq.com/minigame/dev/api/base/debug/RealtimeLogManager.warn.html)
            需要基础库： `2.14.4`
            写 warn 日志，暂不支持在插件使用
            </summary>
        </member>
        <member name="F:WeChatWASM.OnFrameRecordedCallbackResult.frameBuffer">
            <summary>
            录音分片数据
            </summary>
        </member>
        <member name="F:WeChatWASM.OnFrameRecordedCallbackResult.isLastFrame">
            <summary>
            当前帧是否正常录音结束前的最后一帧
            </summary>
        </member>
        <member name="F:WeChatWASM.OnFrameRecordedBufferCallbackResult.frameBufferLength">
            <summary>
            录音分片数据长度
            </summary>
        </member>
        <member name="F:WeChatWASM.OnFrameRecordedBufferCallbackResult.isLastFrame">
            <summary>
            当前帧是否正常录音结束前的最后一帧
            </summary>
        </member>
        <member name="F:WeChatWASM.OnStopCallbackResult.duration">
            <summary>
            录音总时长，单位：ms
            </summary>
        </member>
        <member name="F:WeChatWASM.OnStopCallbackResult.fileSize">
            <summary>
            录音文件大小，单位：Byte
            </summary>
        </member>
        <member name="F:WeChatWASM.OnStopCallbackResult.tempFilePath">
            <summary>
            录音文件的临时路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.RecorderManagerStartOption.audioSource">
            <summary>
            需要基础库： `2.1.0`
            指定录音的音频输入源，可通过 [wx.getAvailableAudioSources()](https://developers.weixin.qq.com/minigame/dev/api/media/audio/wx.getAvailableAudioSources.html) 获取当前可用的音频源
            可选值：
            - 'auto': 自动设置，默认使用手机麦克风，插上耳麦后自动切换使用耳机麦克风，所有平台适用;
            - 'buildInMic': 手机麦克风，仅限 iOS;
            - 'headsetMic': 有线耳机麦克风，仅限 iOS;
            - 'mic': 麦克风（没插耳麦时是手机麦克风，插耳麦时是耳机麦克风），仅限 Android;
            - 'camcorder': 同 mic，适用于录制音视频内容，仅限 Android;
            - 'voice_communication': 同 mic，适用于实时沟通，仅限 Android;
            - 'voice_recognition': 同 mic，适用于语音识别，仅限 Android;
            </summary>
        </member>
        <member name="F:WeChatWASM.RecorderManagerStartOption.duration">
            <summary>
            录音的时长，单位 ms，最大值 600000（10 分钟）
            </summary>
        </member>
        <member name="F:WeChatWASM.RecorderManagerStartOption.encodeBitRate">
            <summary>
            编码码率，有效值见下表格
            </summary>
        </member>
        <member name="F:WeChatWASM.RecorderManagerStartOption.format">
            <summary>
            音频格式
            可选值：
            - 'mp3': mp3 格式;
            - 'aac': aac 格式;
            - 'wav': wav 格式;
            - 'PCM': pcm 格式;
            </summary>
        </member>
        <member name="F:WeChatWASM.RecorderManagerStartOption.frameSize">
            <summary>
            指定帧大小，单位 KB。传入 frameSize 后，每录制指定帧大小的内容后，会回调录制的文件内容，不指定则不会回调。暂仅支持 mp3、pcm 格式。
            </summary>
        </member>
        <member name="F:WeChatWASM.RecorderManagerStartOption.numberOfChannels">
            <summary>
            录音通道数
            可选值：
            - 1: 1 个通道;
            - 2: 2 个通道;
            </summary>
        </member>
        <member name="F:WeChatWASM.RecorderManagerStartOption.sampleRate">
            <summary>
            采样率（pc不支持）
            可选值：
            - 8000: 8000 采样率;
            - 11025: 11025 采样率;
            - 12000: 12000 采样率;
            - 16000: 16000 采样率;
            - 22050: 22050 采样率;
            - 24000: 24000 采样率;
            - 32000: 32000 采样率;
            - 44100: 44100 采样率;
            - 48000: 48000 采样率;
            </summary>
        </member>
        <member name="T:WeChatWASM.WXRewardedVideoAd">
            <summary>
            激励视频广告，详见 https://developers.weixin.qq.com/minigame/dev/guide/open-ability/ad/rewarded-video-ad.html
            </summary>
        </member>
        <member name="M:WeChatWASM.WXRewardedVideoAd.Load(System.Action{WeChatWASM.WXTextResponse},System.Action{WeChatWASM.WXADErrorResponse})">
            <summary>
            加载激励视频广告
            </summary>
        </member>
        <member name="M:WeChatWASM.WXRewardedVideoAd.OnClose(System.Action{WeChatWASM.WXRewardedVideoAdOnCloseResponse})">
            <summary>
            监听用户点击 关闭广告 按钮的事件。
            </summary>
            <param name="action">用户点击 关闭广告 按钮的事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXRewardedVideoAd.OffClose(System.Action{WeChatWASM.WXRewardedVideoAdOnCloseResponse})">
            <summary>
            取消监听用户点击 关闭广告 按钮的事件
            </summary>
            <param name="action">用户点击 关闭广告 按钮的事件的回调函数</param>
        </member>
        <member name="M:WeChatWASM.WXRewardedVideoAd.ReportShareBehavior(WeChatWASM.RequestAdReportShareBehaviorParam)">
            <summary>
            上报行为
            需要基础库： `2.24.5`
            </summary>
            <returns></returns>
        </member>
        <member name="M:WeChatWASM.WXSDKManagerHandler.GetLaunchOperaHandler">
            <summary>
            获取启动剧情C#侧交互句柄
            </summary>
            <returns>微信启动剧情交互句柄</returns>
        </member>
        <member name="M:WeChatWASM.WXTCPSocket.BindWifi(WeChatWASM.TCPSocketBindWifiOption)">
            <summary>
            [TCPSocket.bindWifi(Object options)](https://developers.weixin.qq.com/minigame/dev/api/network/tcp/TCPSocket.bindWifi.html)
            需要基础库： `3.1.1`
            将 TCP Socket 绑定到当前 wifi 网络，成功后会触发 onBindWifi 事件（仅安卓支持） 
            </summary>
        </member>
        <member name="M:WeChatWASM.WXTCPSocket.Close">
            <summary>
            [TCPSocket.close()](https://developers.weixin.qq.com/minigame/dev/api/network/tcp/TCPSocket.close.html)
            关闭连接 
            </summary>
        </member>
        <member name="M:WeChatWASM.WXTCPSocket.Connect(WeChatWASM.TCPSocketConnectOption)">
            <summary>
            [TCPSocket.connect(Object options)](https://developers.weixin.qq.com/minigame/dev/api/network/tcp/TCPSocket.connect.html)
            在给定的套接字上启动连接 
            </summary>
        </member>
        <member name="M:WeChatWASM.WXTCPSocket.OffBindWifi(System.Action{WeChatWASM.GeneralCallbackResult})">
            <summary>
            [TCPSocket.offBindWifi(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/tcp/TCPSocket.offBindWifi.html)
            需要基础库： `3.1.1`
            移除当一个 socket 绑定当前 wifi 网络成功时触发该事件的监听函数
            **示例代码**
            ```js
            const listener = function (res) { console.log(res) }
            TCPSocket.onBindWifi(listener)
            TCPSocket.offBindWifi(listener) // 需传入与监听时同一个的函数对象
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXTCPSocket.OffClose(System.Action{WeChatWASM.GeneralCallbackResult})">
            <summary>
            [TCPSocket.offClose(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/tcp/TCPSocket.offClose.html)
            移除一旦 socket 完全关闭就发出该事件的监听函数
            **示例代码**
            ```js
            const listener = function (res) { console.log(res) }
            TCPSocket.onClose(listener)
            TCPSocket.offClose(listener) // 需传入与监听时同一个的函数对象
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXTCPSocket.OffConnect(System.Action{WeChatWASM.GeneralCallbackResult})">
            <summary>
            [TCPSocket.offConnect(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/tcp/TCPSocket.offConnect.html)
            移除当一个 socket 连接成功建立的时候触发该事件的监听函数
            **示例代码**
            ```js
            const listener = function (res) { console.log(res) }
            TCPSocket.onConnect(listener)
            TCPSocket.offConnect(listener) // 需传入与监听时同一个的函数对象
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXTCPSocket.OffError(System.Action{WeChatWASM.GeneralCallbackResult})">
            <summary>
            [TCPSocket.offError(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/tcp/TCPSocket.offError.html)
            移除当错误发生时触发的监听函数
            **示例代码**
            ```js
            const listener = function (res) { console.log(res) }
            TCPSocket.onError(listener)
            TCPSocket.offError(listener) // 需传入与监听时同一个的函数对象
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXTCPSocket.OffMessage(System.Action{WeChatWASM.TCPSocketOnMessageListenerResult})">
            <summary>
            [TCPSocket.offMessage(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/tcp/TCPSocket.offMessage.html)
            移除当接收到数据的时触发该事件的监听函数
            **示例代码**
            ```js
            const listener = function (res) { console.log(res) }
            TCPSocket.onMessage(listener)
            TCPSocket.offMessage(listener) // 需传入与监听时同一个的函数对象
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXTCPSocket.OnBindWifi(System.Action{WeChatWASM.GeneralCallbackResult})">
            <summary>
            [TCPSocket.onBindWifi(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/tcp/TCPSocket.onBindWifi.html)
            需要基础库： `3.1.1`
            监听当一个 socket 绑定当前 wifi 网络成功时触发该事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXTCPSocket.OnClose(System.Action{WeChatWASM.GeneralCallbackResult})">
            <summary>
            [TCPSocket.onClose(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/tcp/TCPSocket.onClose.html)
            监听一旦 socket 完全关闭就发出该事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXTCPSocket.OnConnect(System.Action{WeChatWASM.GeneralCallbackResult})">
            <summary>
            [TCPSocket.onConnect(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/tcp/TCPSocket.onConnect.html)
            监听当一个 socket 连接成功建立的时候触发该事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXTCPSocket.OnError(System.Action{WeChatWASM.GeneralCallbackResult})">
            <summary>
            [TCPSocket.onError(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/tcp/TCPSocket.onError.html)
            监听当错误发生时触发
            </summary>
        </member>
        <member name="M:WeChatWASM.WXTCPSocket.OnMessage(System.Action{WeChatWASM.TCPSocketOnMessageListenerResult},System.Boolean)">
            <summary>
            [TCPSocket.onMessage(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/tcp/TCPSocket.onMessage.html)
            监听当接收到数据的时触发该事件
            needInfo: 是否需要返回localInfo和remoteInfo，设置为 false 时这两个字段会返回null，设置为 true 会降低性能，请按需使用
            多次使用OnMessage时needInfo以第一个OnMessage为准，OffMessage()移除所有回调后再次OnMessage可重新设置needInfo
            </summary>
        </member>
        <member name="M:WeChatWASM.WXTCPSocket.Write(System.Object)">
            <summary>
            [TCPSocket.write(string|ArrayBuffer data)](https://developers.weixin.qq.com/minigame/dev/api/network/tcp/TCPSocket.write.html)
            在 socket 上发送数据 
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUDPSocket.Close">
            <summary>
            [UDPSocket.close()](https://developers.weixin.qq.com/minigame/dev/api/network/udp/UDPSocket.close.html)
            关闭 UDP Socket 实例，相当于销毁。 在关闭之后，UDP Socket 实例不能再发送消息，每次调用 `UDPSocket.send` 将会触发错误事件，并且 message 事件回调函数也不会再也执行。在 `UDPSocket` 实例被创建后将被 Native 强引用，保证其不被 GC。在 `UDPSocket.close` 后将解除对其的强引用，让 UDPSocket 实例遵从 GC。
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUDPSocket.Connect(WeChatWASM.UDPSocketConnectOption)">
            <summary>
            [UDPSocket.connect(Object object)](https://developers.weixin.qq.com/minigame/dev/api/network/udp/UDPSocket.connect.html)
            需要基础库： `2.15.0`
            预先连接到指定的 IP 和 port，需要配合 write 方法一起使用
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUDPSocket.OffClose(System.Action{WeChatWASM.GeneralCallbackResult})">
            <summary>
            [UDPSocket.offClose(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/udp/UDPSocket.offClose.html)
            移除关闭事件的监听函数
            **示例代码**
            ```js
            const listener = function (res) { console.log(res) }
            UDPSocket.onClose(listener)
            UDPSocket.offClose(listener) // 需传入与监听时同一个的函数对象
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUDPSocket.OffError(System.Action{WeChatWASM.GeneralCallbackResult})">
            <summary>
            [UDPSocket.offError(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/udp/UDPSocket.offError.html)
            移除错误事件的监听函数
            **示例代码**
            ```js
            const listener = function (res) { console.log(res) }
            UDPSocket.onError(listener)
            UDPSocket.offError(listener) // 需传入与监听时同一个的函数对象
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUDPSocket.OffListening(System.Action{WeChatWASM.GeneralCallbackResult})">
            <summary>
            [UDPSocket.offListening(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/udp/UDPSocket.offListening.html)
            移除开始监听数据包消息的事件的监听函数
            **示例代码**
            ```js
            const listener = function (res) { console.log(res) }
            UDPSocket.onListening(listener)
            UDPSocket.offListening(listener) // 需传入与监听时同一个的函数对象
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUDPSocket.OffMessage(System.Action{WeChatWASM.UDPSocketOnMessageListenerResult})">
            <summary>
            [UDPSocket.offMessage(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/udp/UDPSocket.offMessage.html)
            移除收到消息的事件的监听函数
            **示例代码**
            ```js
            const listener = function (res) { console.log(res) }
            UDPSocket.onMessage(listener)
            UDPSocket.offMessage(listener) // 需传入与监听时同一个的函数对象
            ```
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUDPSocket.OnClose(System.Action{WeChatWASM.GeneralCallbackResult})">
            <summary>
            [UDPSocket.onClose(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/udp/UDPSocket.onClose.html)
            监听关闭事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUDPSocket.OnError(System.Action{WeChatWASM.GeneralCallbackResult})">
            <summary>
            [UDPSocket.onError(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/udp/UDPSocket.onError.html)
            监听错误事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUDPSocket.OnListening(System.Action{WeChatWASM.GeneralCallbackResult})">
            <summary>
            [UDPSocket.onListening(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/udp/UDPSocket.onListening.html)
            监听开始监听数据包消息的事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUDPSocket.OnMessage(System.Action{WeChatWASM.UDPSocketOnMessageListenerResult},System.Boolean)">
            <summary>
            [UDPSocket.onMessage(function listener)](https://developers.weixin.qq.com/minigame/dev/api/network/udp/UDPSocket.onMessage.html)
            监听收到消息的事件
            needInfo: 是否需要返回localInfo和remoteInfo，设置为 false 时这两个字段会返回null，设置为 true 会降低性能，请按需使用
            多次使用OnMessage时needInfo以第一个OnMessage为准，OffMessage()移除所有回调后再次OnMessage可重新设置needInfo
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUDPSocket.Send(WeChatWASM.UDPSocketSendOption)">
            <summary>
            [UDPSocket.send(Object object)](https://developers.weixin.qq.com/minigame/dev/api/network/udp/UDPSocket.send.html)
            向指定的 IP 和 port 发送消息。基础库 2.9.0 起支持广播 (指定地址为 255.255.255.255)。
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUDPSocket.SetTTL(System.Double)">
            <summary>
            [UDPSocket.setTTL(number ttl)](https://developers.weixin.qq.com/minigame/dev/api/network/udp/UDPSocket.setTTL.html)
            需要基础库： `2.18.0`
            设置 IP_TTL 套接字选项，用于设置一个 IP 数据包传输时允许的最大跳步数
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUDPSocket.Write">
            <summary>
            [UDPSocket.write()](https://developers.weixin.qq.com/minigame/dev/api/network/udp/UDPSocket.write.html)
            需要基础库： `2.15.0`
            用法与 send 方法相同，如果没有预先调用 connect 则与 send 无差异（注意即使调用了 connect 也需要在本接口填入地址和端口参数）
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUDPSocket.Bind(System.Nullable{System.Int32})">
            <summary>
            [number UDPSocket.bind(number port)](https://developers.weixin.qq.com/minigame/dev/api/network/udp/UDPSocket.bind.html)
            绑定一个系统随机分配的可用端口，或绑定一个指定的端口号
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUpdateManager.WX_UpdateManagerApplyUpdate(System.String)">
            <summary>
            [UpdateManager.applyUpdate()](https://developers.weixin.qq.com/minigame/dev/api/base/update/UpdateManager.applyUpdate.html)
            强制小程序重启并使用新版本。在小程序新版本下载完成后（即收到 `onUpdateReady` 回调）调用。
            **示例代码**
            [示例代码](https://developers.weixin.qq.com/minigame/dev/api/base/update/UpdateManager.html#示例代码)
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUpdateManager.WX_UpdateManagerOnCheckForUpdate(System.String)">
            <summary>
            [UpdateManager.onCheckForUpdate(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/update/UpdateManager.onCheckForUpdate.html)
            监听向微信后台请求检查更新结果事件。微信在小程序每次启动（包括热启动）时自动检查更新，不需由开发者主动触发。
            **示例代码**
            [示例代码](https://developers.weixin.qq.com/minigame/dev/api/base/update/UpdateManager.html#示例代码)
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUpdateManager.WX_UpdateManagerOnUpdateFailed(System.String)">
            <summary>
            [UpdateManager.onUpdateFailed(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/update/UpdateManager.onUpdateFailed.html)
            监听小程序更新失败事件。小程序有新版本，客户端主动触发下载（无需开发者触发），下载失败（可能是网络原因等）后回调
            **示例代码**
            [示例代码](https://developers.weixin.qq.com/minigame/dev/api/base/update/UpdateManager.html#示例代码)
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUpdateManager.WX_UpdateManagerOnUpdateReady(System.String)">
            <summary>
            [UpdateManager.onUpdateReady(function listener)](https://developers.weixin.qq.com/minigame/dev/api/base/update/UpdateManager.onUpdateReady.html)
            监听小程序有版本更新事件。客户端主动触发下载（无需开发者触发），下载成功后回调
            **示例代码**
            [示例代码](https://developers.weixin.qq.com/minigame/dev/api/base/update/UpdateManager.html#示例代码)
            </summary>
        </member>
        <member name="F:WeChatWASM.UploadFileOption.filePath">
            <summary>
            要上传文件资源的路径 (本地路径)
            </summary>
        </member>
        <member name="F:WeChatWASM.UploadFileOption.name">
            <summary>
            文件对应的 key，开发者在服务端可以通过这个 key 获取文件的二进制内容
            </summary>
        </member>
        <member name="F:WeChatWASM.UploadFileOption.url">
            <summary>
            开发者服务器地址
            </summary>
        </member>
        <member name="F:WeChatWASM.UploadFileOption.complete">
            <summary>
            接口调用结束的回调函数（调用成功、失败都会执行）
            </summary>
        </member>
        <member name="F:WeChatWASM.UploadFileOption.fail">
            <summary>
            接口调用失败的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.UploadFileOption.formData">
            <summary>
            HTTP 请求中其他额外的 form data
            </summary>
        </member>
        <member name="F:WeChatWASM.UploadFileOption.header">
            <summary>
            HTTP 请求 Header，Header 中不能设置 Referer
            </summary>
        </member>
        <member name="F:WeChatWASM.UploadFileOption.success">
            <summary>
            接口调用成功的回调函数
            </summary>
        </member>
        <member name="F:WeChatWASM.UploadFileOption.timeout">
            <summary>
            需要基础库： `2.10.0`
            超时时间，单位为毫秒
            </summary>
        </member>
        <member name="F:WeChatWASM.UploadFileSuccessCallbackResult.data">
            <summary>
            开发者服务器返回的数据
            </summary>
        </member>
        <member name="F:WeChatWASM.UploadFileSuccessCallbackResult.statusCode">
            <summary>
            开发者服务器返回的 HTTP 状态码
            </summary>
        </member>
        <member name="F:WeChatWASM.OnHeadersReceivedCallbackResult.header">
            <summary>
            开发者服务器返回的 HTTP Response Header
            </summary>
        </member>
        <member name="F:WeChatWASM.UploadTaskOnProgressUpdateCallbackResult.progress">
            <summary>
            上传进度百分比
            </summary>
        </member>
        <member name="F:WeChatWASM.UploadTaskOnProgressUpdateCallbackResult.totalBytesExpectedToSend">
            <summary>
            预期需要上传的数据总长度，单位 Bytes
            </summary>
        </member>
        <member name="F:WeChatWASM.UploadTaskOnProgressUpdateCallbackResult.totalBytesSent">
            <summary>
            已经上传的数据长度，单位 Bytes
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUserInfoButton.Destroy">
            <summary>
            销毁用户信息按钮
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUserInfoButton.Hide">
            <summary>
            隐藏用户信息按钮。
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUserInfoButton.OffTap">
            <summary>
            取消监听用户信息按钮的点击事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXUserInfoButton.OnTap(System.Action{WeChatWASM.WXUserInfoResponse})">
            <summary>
            监听用户信息按钮的点击事件
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:WeChatWASM.WXUserInfoButton.Show">
            <summary>
            显示用户信息按钮
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideo._HandleCallBack(WeChatWASM.WXVideoCallback)">
            <summary>
            内部函数,请不要调用
            </summary>
            <param name="key"></param>
        </member>
        <member name="P:WeChatWASM.WXVideo.src">
            <summary>
            视频的资源地址
            </summary>
        </member>
        <member name="P:WeChatWASM.WXVideo.poster">
            <summary>
            视频的封面
            </summary>
        </member>
        <member name="P:WeChatWASM.WXVideo.x">
            <summary>
            视频的左上角横坐标
            </summary>
        </member>
        <member name="P:WeChatWASM.WXVideo.y">
            <summary>
            视频的左上角纵坐标
            </summary>
        </member>
        <member name="P:WeChatWASM.WXVideo.width">
            <summary>
            视频的宽度
            </summary>
        </member>
        <member name="P:WeChatWASM.WXVideo.height">
            <summary>
            视频的高度
            </summary>
        </member>
        <member name="P:WeChatWASM.WXVideo.isPlaying">
            <summary>
            Gets a value indicating whether 是否正在播放
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideo.Play">
            <summary>
            播放视频
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideo.OnPlay(System.Action)">
            <summary>
            监听视频播放事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideo.OffPlay(System.Action)">
            <summary>
            取消监听视频播放事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideo.OnEnded(System.Action)">
            <summary>
            监听视频播放到末尾事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideo.OffEnded(System.Action)">
            <summary>
            取消监听视频播放到末尾事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideo.OnError(System.Action)">
            <summary>
            监听视频错误事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideo.OffError(System.Action)">
            <summary>
            取消监听视频错误事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideo.OnPause(System.Action)">
            <summary>
            监听视频暂停事件
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideo.OffPause(System.Action)">
            <summary>
            取消监听视频暂停事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideo.OnWaiting(System.Action)">
            <summary>
            监听视频由于需要缓冲下一帧而停止时触发
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideo.OffWaiting(System.Action)">
            <summary>
            取消监听视频由于需要缓冲下一帧而停止时触发,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideo.Destroy">
            <summary>
            销毁当前实例
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideo.ExitFullScreen">
            <summary>
            视频退出全屏
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideo.Pause">
            <summary>
            暂停
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideo.RequestFullScreen(System.Int32)">
            <summary>
            视频全屏
            </summary>
            <param name="direction">设置全屏时视频的方向 0: 正常竖向, 90: 屏幕逆时针90度 . -90: 屏幕顺时针90度</param>
        </member>
        <member name="M:WeChatWASM.WXVideo.Seek(System.Int32)">
            <summary>
            视频跳转
            </summary>
            <param name="time">视频跳转到指定位置，单位为 s 秒</param>
        </member>
        <member name="M:WeChatWASM.WXVideo.Stop">
            <summary>
            停止视频
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideo.OnTimeUpdate(System.Action{WeChatWASM.WXVideoTimeUpdate})">
            <summary>
            监听视频播放进度更新事件
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:WeChatWASM.WXVideo.OffTimeUpdate(System.Action{WeChatWASM.WXVideoTimeUpdate})">
            <summary>
            取消监听视频播放进度更新事件,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideo.OnProgress(System.Action{WeChatWASM.WXVideoProgress})">
            <summary>
            监听视频下载（缓冲）事件
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:WeChatWASM.WXVideo.OffProgress(System.Action{WeChatWASM.WXVideoProgress})">
            <summary>
            取消监听视频下载（缓冲）事件 ,action 为空表示移除全部事件监听
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideoDecoder.WX_VideoDecoderGetFrameData(System.String)">
            <summary>
            [Object VideoDecoder.getFrameData()](https://developers.weixin.qq.com/minigame/dev/api/media/video-decoder/VideoDecoder.getFrameData.html)
            需要基础库： `2.11.1`
            获取下一帧的解码数据
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideoDecoder.WX_VideoDecoderRemove(System.String)">
            <summary>
            [Promise VideoDecoder.remove()](https://developers.weixin.qq.com/minigame/dev/api/media/video-decoder/VideoDecoder.remove.html)
            需要基础库： `2.11.1`
            移除解码器
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideoDecoder.WX_VideoDecoderSeek(System.String,System.Double)">
            <summary>
            [Promise VideoDecoder.seek(number position)](https://developers.weixin.qq.com/minigame/dev/api/media/video-decoder/VideoDecoder.seek.html)
            需要基础库： `2.11.1`
            跳到某个时间点解码
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideoDecoder.WX_VideoDecoderStart(System.String,System.String)">
            <summary>
            [Promise VideoDecoder.start(Object object)](https://developers.weixin.qq.com/minigame/dev/api/media/video-decoder/VideoDecoder.start.html)
            需要基础库： `2.11.1`
            开始解码
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideoDecoder.WX_VideoDecoderStop(System.String)">
            <summary>
            [Promise VideoDecoder.stop()](https://developers.weixin.qq.com/minigame/dev/api/media/video-decoder/VideoDecoder.stop.html)
            需要基础库： `2.11.1`
            停止解码
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideoDecoder.WX_VideoDecoderOff(System.String,System.String)">
            <summary>
            [VideoDecoder.off(string eventName, function callback)](https://developers.weixin.qq.com/minigame/dev/api/media/video-decoder/VideoDecoder.off.html)
            需要基础库： `2.11.1`
            取消监听录制事件。当对应事件触发时，该回调函数不再执行
            </summary>
        </member>
        <member name="M:WeChatWASM.WXVideoDecoder.WX_VideoDecoderOn(System.String,System.String)">
            <summary>
            [VideoDecoder.on(string eventName, function callback)](https://developers.weixin.qq.com/minigame/dev/api/media/video-decoder/VideoDecoder.on.html)
            需要基础库： `2.11.1`
            注册监听录制事件的回调函数。当对应事件触发时，回调函数会被执行
            </summary>
        </member>
        <member name="T:PlayerPrefs">
            <summary>
            覆盖unity的PlayerPrefs
            注意：调用均为同步调用， 容易阻塞游戏主线程造成卡顿，不建议频繁调用
            </summary>
        </member>
    </members>
</doc>
