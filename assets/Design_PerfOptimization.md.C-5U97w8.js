import{_ as i,c as l,o as a,a4 as e}from"./chunks/framework.Br2U662V.js";const c=JSON.parse('{"title":"性能优化总览","description":"","frontmatter":{},"headers":[],"relativePath":"Design/PerfOptimization.md","filePath":"Design/PerfOptimization.md"}'),t={name:"Design/PerfOptimization.md"},r=e('<h1 id="性能优化总览" tabindex="-1">性能优化总览 <a class="header-anchor" href="#性能优化总览" aria-label="Permalink to &quot;性能优化总览&quot;">​</a></h1><h2 id="一、为何需要进行性能优化" tabindex="-1">一、为何需要进行性能优化？ <a class="header-anchor" href="#一、为何需要进行性能优化" aria-label="Permalink to &quot;一、为何需要进行性能优化？&quot;">​</a></h2><p>Unity WebGL导出形式相对于原生APP应用，需要开发者更关注性能与体验调优。有以下几点原因：</p><ol><li>小游戏天生为&quot;即开即用&quot;，在小游戏生态下玩家对启动耗时更敏感。</li><li>Unity WebGL底层基于WebAssembly，算力不及原生APP。</li><li>Unity并未对WebGL平台做特别裁剪，启动较慢。</li></ol><p>因此，相对于原生APP，无论从启动还是运行上我们都需要做进一步性能优化。</p><h2 id="二、优化目标" tabindex="-1">二、优化目标 <a class="header-anchor" href="#二、优化目标" aria-label="Permalink to &quot;二、优化目标&quot;">​</a></h2><p>根据平台在不同游戏类型/机型下的评测，我们给出Unity WebGL小游戏可以参照的的<a href="./PerfMeasure.html">性能评估标准</a>，开发者依此对游戏的启动与运行性能进行调优。</p><h2 id="三、最佳实践" tabindex="-1">三、最佳实践 <a class="header-anchor" href="#三、最佳实践" aria-label="Permalink to &quot;三、最佳实践&quot;">​</a></h2><h3 id="_3-1-加快游戏启动速度" tabindex="-1">3.1 加快游戏启动速度 <a class="header-anchor" href="#_3-1-加快游戏启动速度" aria-label="Permalink to &quot;3.1 加快游戏启动速度&quot;">​</a></h3><ul><li>编译选项中仅勾选首场景</li><li>CDN必须开启Brotli或gzip压缩</li><li>精简首场景物件，尽快渲染让玩家看到游戏首画面</li><li>减少初始化与首帧逻辑，首场景Awake/Start/首次Update不要包含过重逻辑</li><li>减少代码包体, 剔除不必要的插件</li><li>使用代码分包工具缩减WebAssembly首次下载包体</li></ul><p>更多信息请参考：</p><ul><li><a href="./StartupOptimization.html">提升Unity WebGL游戏启动速度</a></li><li><a href="./FirstSceneOptimization.html">首场景启动优化</a></li><li><a href="./WasmSplit.html">使用代码分包工具</a></li></ul><h3 id="_3-2-资源按需加载" tabindex="-1">3.2 资源按需加载 <a class="header-anchor" href="#_3-2-资源按需加载" aria-label="Permalink to &quot;3.2 资源按需加载&quot;">​</a></h3><ul><li>尽量避免在各级Resource包含资源，该目录将被直接打包在首资源包</li><li>使用AssetsBundle/Addressable进行资源加载</li><li>单个包体最好不超过2MB</li><li>资源请求并发数不超过20个</li></ul><p>更多信息请阅读:</p><ul><li><a href="./UsingAddressable.html">使用Addressable进行资源按需加载</a></li><li><a href="./UsingAssetBundle.html">使用 AssetBundle 进行资源按需加载</a></li><li><a href="./UsingPreload.html">使用预下载功能</a></li></ul><h3 id="_3-3-资源处理建议" tabindex="-1">3.3 资源处理建议 <a class="header-anchor" href="#_3-3-资源处理建议" aria-label="Permalink to &quot;3.3 资源处理建议&quot;">​</a></h3><ul><li>贴图maxsize尽量不超过1024，小游戏环境适当降低画质</li><li>贴图尽量不生成Mipmap</li><li>贴图尽量不使用可写属性</li><li>字体文件压缩前最大不超过4MB</li></ul><p>更多信息请阅读:</p><ul><li><a href="./AssetOptimization.html">资源优化工具与建议</a></li></ul><h3 id="_3-4-降低小游戏内存使用" tabindex="-1">3.4 降低小游戏内存使用 <a class="header-anchor" href="#_3-4-降低小游戏内存使用" aria-label="Permalink to &quot;3.4 降低小游戏内存使用&quot;">​</a></h3><ul><li>不要初始化所有未使用的资源</li><li>释放不使用的资源</li><li>发布前使用压缩纹理工具进行优化</li><li>音频资源尽可能勾选强制单声道</li><li>iOS开启高性能+模式</li></ul><p>更多信息请阅读:</p><ul><li><a href="./iOSOptimization.html">iOS 高性能与高性能+模式</a></li><li><a href="./OptimizationMemory.html">优化Unity WebGL的内存</a></li><li><a href="./CompressedTexture.html">压缩纹理优化</a></li><li><a href="https://gameinstitute.qq.com/community/detail/112321" target="_blank" rel="noreferrer">Unity WebGL内存原理详解</a></li></ul><h3 id="_3-5-降低cpu消耗" tabindex="-1">3.5 降低CPU消耗 <a class="header-anchor" href="#_3-5-降低cpu消耗" aria-label="Permalink to &quot;3.5 降低CPU消耗&quot;">​</a></h3><ul><li>iOS使用高性能模式</li><li>尽量使用Android CPU Profiler在小游戏真机环境Profie计算瓶颈</li><li>提前在Unity环境使用Unity Profiler发现问题</li><li>物理计算较重的游戏使用Fixed Timestep控制计算频率</li><li>在中低端机型限制帧率以减轻设备发烫</li></ul><p>更多信息请阅读:</p><ul><li><a href="./iOSOptimization.html">iOS 高性能与高性能+模式</a></li><li><a href="./AndroidProfile.html">使用Android CPU Profiler性能调优</a></li><li><a href="./UnityProfiler.html">使用Unity Profiler性能调优</a></li></ul>',28),o=[r];function n(h,s,d,u,m,p){return a(),l("div",null,o)}const _=i(t,[["render",n]]);export{c as __pageData,_ as default};
