import{_ as a,c as s,o as e,a4 as t}from"./chunks/framework.Br2U662V.js";const _=JSON.parse('{"title":"Symbol 相关","description":"","frontmatter":{},"headers":[],"relativePath":"Design/Symbol.md","filePath":"Design/Symbol.md"}'),n={name:"Design/Symbol.md"},o=t(`<h1 id="symbol-相关" tabindex="-1">Symbol 相关 <a class="header-anchor" href="#symbol-相关" aria-label="Permalink to &quot;Symbol 相关&quot;">​</a></h1><h3 id="tool" tabindex="-1">Tool <a class="header-anchor" href="#tool" aria-label="Permalink to &quot;Tool&quot;">​</a></h3><p>开发者工具或者线上打印出来的堆栈，一般都是 wasm 函数 id，需要通过 symbol 映射到函数名，才能用于定位问题</p><p>这里提供了一个<a href="https://github.com/wechat-miniprogram/minigame-unity-webgl-transform/blob/main/tools/rewrite_exception_symbol.js" target="_blank" rel="noreferrer">小工具</a>用来替换函数 id，用法如下：</p><p>比如以下这段堆栈</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>at Object.WXUncaughtException (https://usr/game.js:108:1264)</span></span>
<span class="line"><span>    at abort (https://usr/game.js:593:247583)</span></span>
<span class="line"><span>    at j88421 (wasm-function[67190]:0x13a062b)</span></span>
<span class="line"><span>    at j88421 (wasm-function[44572]:0x801bd1)</span></span>
<span class="line"><span>    at j23511 (wasm-function[9866]:0x432503)</span></span></code></pre></div><p>将这段内容保存到文件，和 symbol 文件一起传给工具处理</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>node tools/rewrite_exception_symbol.js exception.txt webgl.wasm.symbols.unityweb</span></span></code></pre></div><p>symbol 文件一般会自动生成在 minigame 目录</p><p>Unity 2021 的引擎暂时还不支持导出 symbol，因此需要手动跑工具生成，导出插件导出到 webgl 时的 console 信息有说明要如何操作</p>`,10),i=[o];function l(p,c,r,m,b,d){return e(),s("div",null,i)}const u=a(n,[["render",l]]);export{_ as __pageData,u as default};
