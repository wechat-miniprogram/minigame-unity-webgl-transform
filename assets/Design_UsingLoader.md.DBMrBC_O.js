import{_ as s,c as a,o as i,a4 as n}from"./chunks/framework.Br2U662V.js";const e="/minigame-unity-webgl-transform/assets/coverview_loading.BiGkOLi_.png",u=JSON.parse('{"title":"使用Loader进行游游戏加载","description":"","frontmatter":{},"headers":[],"relativePath":"Design/UsingLoader.md","filePath":"Design/UsingLoader.md"}'),l={name:"Design/UsingLoader.md"},t=n(`<h1 id="使用loader进行游游戏加载" tabindex="-1">使用Loader进行游游戏加载 <a class="header-anchor" href="#使用loader进行游游戏加载" aria-label="Permalink to &quot;使用Loader进行游游戏加载&quot;">​</a></h1><h2 id="一、什么是unity-loader" tabindex="-1">一、什么是Unity Loader？ <a class="header-anchor" href="#一、什么是unity-loader" aria-label="Permalink to &quot;一、什么是Unity Loader？&quot;">​</a></h2><p>Unity Loader是在微信小游戏环境加载Unity WebGL游戏的加载与适配器，使用微信小游戏插件技术开发，功能包括：</p><ul><li>WebAssembly代码分包加载与编译</li><li>资源加载与编译</li><li>启动进度显示</li><li>缓存策略</li><li>数据上报</li></ul><h2 id="二、如何使用unity-loader插件" tabindex="-1">二、如何使用Unity Loader插件 <a class="header-anchor" href="#二、如何使用unity-loader插件" aria-label="Permalink to &quot;二、如何使用Unity Loader插件&quot;">​</a></h2><p>生成微信小游戏项目时，转换工具会在<code>game.json</code>中声明：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;plugins&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;UnityPlugin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;major.minor.patch&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 可切换版本号</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;provider&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wxe5a48f1ed5f544b7&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;contexts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;isolatedContext&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>这部分配置表示使用Unity Loader插件进行游戏加载，开发者无需手动修改</p><h2 id="三、配置unity-loader功能" tabindex="-1">三、配置Unity Loader功能 <a class="header-anchor" href="#三、配置unity-loader功能" aria-label="Permalink to &quot;三、配置Unity Loader功能&quot;">​</a></h2><h3 id="_3-1-资源下载" tabindex="-1">3.1 资源下载 <a class="header-anchor" href="#_3-1-资源下载" aria-label="Permalink to &quot;3.1 资源下载&quot;">​</a></h3><p>声明CDN地址</p><h4 id="转换插件相关配置" tabindex="-1">转换插件相关配置 <a class="header-anchor" href="#转换插件相关配置" aria-label="Permalink to &quot;转换插件相关配置&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>CDN: cdn地址</span></span>
<span class="line"><span>dataFileSubPrefix: 首包资源相对cdn地址的存放目录，默认首包资源放在cdn一级目录</span></span></code></pre></div><h4 id="通过接口修改" tabindex="-1">通过接口修改 <a class="header-anchor" href="#通过接口修改" aria-label="Permalink to &quot;通过接口修改&quot;">​</a></h4><p>游戏存在备用CDN地址，可通过C#接口 <code>WX.SetDataCDN</code> 或js接口 <code>GameGlobal.manager.setDataCDN</code> 修改DATA_CDN配置</p><h3 id="_3-2-启动界面" tabindex="-1">3.2 启动界面 <a class="header-anchor" href="#_3-2-启动界面" aria-label="Permalink to &quot;3.2 启动界面&quot;">​</a></h3><p>由于Unity WebGL启动加载需要一定时间，因此需要使用视频或图片等内容作为过渡以留住玩家。Unity Loader默认使用视频+进度信息呈现，开发者可以自定义封面/视频，可参考<a href="./video.html">启动Loader视频规范</a>进行配置。</p><img src="`+e+`" height="500"><h4 id="转换插件相关配置-1" tabindex="-1">转换插件相关配置 <a class="header-anchor" href="#转换插件相关配置-1" aria-label="Permalink to &quot;转换插件相关配置&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>bgImageSrc: 启动封面图；-- $BACKGROUND_IMAGE</span></span>
<span class="line"><span>VideoUrl: 启动视频；-- $LOADING_VIDEO_URL</span></span>
<span class="line"><span>HideAfterCallMain: 是否callmain完成后立即隐藏封面；-- $HIDE_AFTER_CALLMAIN</span></span>
<span class="line"><span>loadingBarWidth: 加载进度条宽度；-- $LOADING_BAR_WIDTH</span></span></code></pre></div><h4 id="game-js配置" tabindex="-1">game.js配置 <a class="header-anchor" href="#game-js配置" aria-label="Permalink to &quot;game.js配置&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">loadingPageConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 背景图或背景视频，两者都填时，先展示背景图，视频可播放后，播放视频</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  backgroundImage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;$BACKGROUND_IMAGE&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 默认的背景图，可自行替换，支持本地图片和网络图片</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  backgroundVideo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;$LOADING_VIDEO_URL&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 视频url，需要开发者提供，只支持网络url</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 以下是默认值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  barWidth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: $LOADING_BAR_WIDTH, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 加载进度条宽度，默认240，加载文案过长时可设置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  totalLaunchTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 默认总启动耗时，即加载动画默认播放时间，可根据游戏实际情况进行调整</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  textDuration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 当downloadingText有多个文案时，每个文案展示时间</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  firstStartText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;首次加载请耐心等待&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 首次启动时提示文案</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  downloadingText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;正在加载资源&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 加载阶段循环展示的文案</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  compilingText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;编译中&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 编译阶段文案</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  initText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;初始化中&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 初始化阶段文案</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  completeText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;开始游戏&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 初始化完成</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hideAfterCallmain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: $HIDE_AFTER_CALLMAIN, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 是否callmain完成立即隐藏封面</span></span></code></pre></div><blockquote><p>backgroundImage需要注意图片宽高不可超过2048，否则无法显示 使用coverview需要基础库版本&gt;=2.16.1，插件已做兼容，若不支持，降级为使用离屏canvas渲染进度的方式 hideAfterCallmain: 游戏业务Awake逻辑耗时较高时可能导致出现短暂黑屏，改为false可盖住黑屏，等游戏第一帧渲染时隐藏</p></blockquote><p>更多信息请参考<a href="./CustomLoading.html">定制启动封面</a></p><h3 id="_3-3-首包资源加载方式" tabindex="-1">3.3 首包资源加载方式 <a class="header-anchor" href="#_3-3-首包资源加载方式" aria-label="Permalink to &quot;3.3 首包资源加载方式&quot;">​</a></h3><p><strong>加载方式在转换工具导出时就确定好了，开发者一般不需要修改</strong> 当<strong>游戏资源量比较少</strong>时，可选择将首包资源作为小游戏分包加载，了解<a href="https://developers.weixin.qq.com/minigame/dev/guide/base-ability/independent-sub-packages.html" target="_blank" rel="noreferrer">小游戏分包</a> wasm代码已是通过代码分包加载，当<strong>wasm代码+首包资源&gt;20M时，资源包不可再使用小游戏分包加载</strong>。 当首包资源通过小游戏代码分包下载时，会将首包资源存放在minigame/data-package这个分包下</p><h4 id="转换插件相关配置-2" tabindex="-1">转换插件相关配置 <a class="header-anchor" href="#转换插件相关配置-2" aria-label="Permalink to &quot;转换插件相关配置&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>assetLoadType: -- $LOAD_DATA_FROM_SUBPACKAGE</span></span></code></pre></div><h4 id="game-js配置-1" tabindex="-1">game.js配置 <a class="header-anchor" href="#game-js配置-1" aria-label="Permalink to &quot;game.js配置&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> managerConfig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 省略其他配置 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  loadDataPackageFromSubpackage: $LOAD_DATA_FROM_SUBPACKAGE, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 转换工具自动替换</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>若手动将<code>loadDataPackageFromSubpackage</code>改为false，需要将webgl目录下的资源包上传到CDN，并将CDN地址填写到game.js<code>DATA_CDN</code>字段</li><li>同样的，若手动将<code>loadDataPackageFromSubpackage</code>改为true，需要将webgl目录下的资源包copy到minigame/data-package下</li></ul><h3 id="_3-4-预加载资源" tabindex="-1">3.4 预加载资源 <a class="header-anchor" href="#_3-4-预加载资源" aria-label="Permalink to &quot;3.4 预加载资源&quot;">​</a></h3><p>为了充分利用网络带宽，在网络空闲时可预下载游戏需要用到的AB包。详细配置请参考<a href="./UsingPreload.html">使用预下载功能</a>。</p><h3 id="_3-5-资源缓存与淘汰策略" tabindex="-1">3.5 资源缓存与淘汰策略 <a class="header-anchor" href="#_3-5-资源缓存与淘汰策略" aria-label="Permalink to &quot;3.5 资源缓存与淘汰策略&quot;">​</a></h3><p>loader会自动按一定规则做文件缓存，加快二次启动速度 详情参考<a href="./FileCache.html">资源缓存</a></p><h3 id="_3-6-插件调试日志" tabindex="-1">3.6 插件调试日志 <a class="header-anchor" href="#_3-6-插件调试日志" aria-label="Permalink to &quot;3.6 插件调试日志&quot;">​</a></h3><ol><li>通过修改<code>minigame/unity-namespace.js</code> 中 <code>enableDebugLog=true</code>，可查看插件详细日志，例如预下载发起和命中、文件缓存等。</li><li>打开调试</li></ol><ul><li>开发者工具：调试器-&gt;Console</li><li>真机： <ul><li>步骤1(打开调试模式)：右上角菜单-&gt;打开调试-&gt;出现vconsole 或者 game.js增加代码</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEnableDebug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({enableDebug: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><ul><li>步骤2(打开vconsole)：点击vconsole打开日志面板（启动阶段点三次封面视频下方Unity Logo出现 vconsole)</li></ul></li></ul>`,38),h=[t];function p(k,r,d,o,g,c){return i(),a("div",null,h)}const y=s(l,[["render",p]]);export{u as __pageData,y as default};
