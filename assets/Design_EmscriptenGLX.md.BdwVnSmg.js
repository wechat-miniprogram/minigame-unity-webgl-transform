import{_ as e,c as a,o as t,a4 as i}from"./chunks/framework.Br2U662V.js";const s="/minigame-unity-webgl-transform/assets/emscripten_enable.D0ULk5cM.png",r="/minigame-unity-webgl-transform/assets/emscripten_enable_log.C7LVYl0b.png",b=JSON.parse('{"title":"EmscriptenGLX 渲染模式","description":"","frontmatter":{},"headers":[],"relativePath":"Design/EmscriptenGLX.md","filePath":"Design/EmscriptenGLX.md"}'),n={name:"Design/EmscriptenGLX.md"},o=i(`<h1 id="emscriptenglx-渲染模式" tabindex="-1">EmscriptenGLX 渲染模式 <a class="header-anchor" href="#emscriptenglx-渲染模式" aria-label="Permalink to &quot;EmscriptenGLX 渲染模式&quot;">​</a></h1><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>游戏内所有 GL 指令调用需要经过三层转换：<code>WASM(业务逻辑)</code> -&gt; <code>WebGL JS胶水层(GL -&gt; WebGL)</code> -&gt; <code>平台渲染</code>，WASM 模块 与 JavaScript 之间的高频通信无疑带来了繁重的性能开销。</p><p>通过 EmscriptenGLX 渲染模式，可以实现在 WASM 内部完成 <code>GL -&gt; WebGL</code> 指令的处理，将原本 <code>WebGL JS胶水层</code> 的代码下沉至业务逻辑(WASM)中，消除<strong>WASM 与 JS 之间高频调用链路</strong>。详细文档请查阅<a href="https://developers.weixin.qq.com/minigame/dev/guide/performance/perf-emscriptenglx.html" target="_blank" rel="noreferrer">EmscriptenGLX 渲染模式</a></p><h2 id="特别说明" tabindex="-1">特别说明 <a class="header-anchor" href="#特别说明" aria-label="Permalink to &quot;特别说明&quot;">​</a></h2><ol><li>EmscriptenGLX 目前仅支持在 <strong>iOS 高性能+模式</strong> 以及 <strong>Android 平台</strong> 下运行，其他运行时将会自动降级为原有的运行方案。</li><li>基础库版本须 <code>&gt;= 3.8.12</code>，低版本的基础库会使用原有的运行模式运行游戏。</li><li>支持 <code>Unity2021</code>、<code>Unity2022</code> 和 <code>团结引擎</code> 接入</li><li>本方案处于 <code>Beta</code> 测试阶段，建议<strong>充分验证后</strong>再进行发布。</li></ol><h2 id="接入指南" tabindex="-1">接入指南 <a class="header-anchor" href="#接入指南" aria-label="Permalink to &quot;接入指南&quot;">​</a></h2><h3 id="_1-sdk-接入" tabindex="-1">1. SDK 接入 <a class="header-anchor" href="#_1-sdk-接入" aria-label="Permalink to &quot;1. SDK 接入&quot;">​</a></h3><p>请参照 <a href="./SDKInstaller.html">微信 SDK 安装</a>，使用 <code>Package方式</code>进行安装</p><p><code>打开游戏工程</code> -&gt; <code>Editor 菜单栏</code> -&gt; <code>Package Manager</code> -&gt; <code>右上方 &quot;+&quot;</code> -&gt; <code>Add package from git URL</code> -&gt; <code>输入下方的URL地址</code>，即可完成 SDK 导入</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 从 v0.1.29 开始支持</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//github.com/wechat-miniprogram/minigame-tuanjie-transform-sdk.git</span></span></code></pre></div><h3 id="_2-开启-emscriptenglx" tabindex="-1">2. 开启 EmscriptenGLX <a class="header-anchor" href="#_2-开启-emscriptenglx" aria-label="Permalink to &quot;2. 开启 EmscriptenGLX&quot;">​</a></h3><p>通过「微信小游戏工具面板」-「调试编译选项」-「EmscriptenGLX」进行勾选，并开启转换</p><p><img src="`+s+'" alt="开启EmscriptenGLX"></p><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><h3 id="q1-如何确认转换后的游戏使用到了-emscriptenglx-的渲染模式" tabindex="-1">Q1. 如何确认转换后的游戏使用到了 EmscriptenGLX 的渲染模式？ <a class="header-anchor" href="#q1-如何确认转换后的游戏使用到了-emscriptenglx-的渲染模式" aria-label="Permalink to &quot;Q1. 如何确认转换后的游戏使用到了 EmscriptenGLX 的渲染模式？&quot;">​</a></h3><p>请按照下方的步骤进行验证</p><ol><li>删除本地小游戏（包括开发版、体验版和正式版）。</li><li>重新进入游戏并打开调试，查看 vConsole 中的相关日志</li></ol><ul><li>vConsole 第一行，确认基础库版本 <code>&gt;=3.8.12</code></li><li>在 WebGL Context 创建上下文前后，查看是否包含下图高亮的日志信息 <img src="'+r+'" alt="成功开启EmscriptenGLX"></li></ul><h3 id="q2-为什么开启了-emscriptenglx-后-性能更差了-比如单帧耗时更大了。" tabindex="-1">Q2. 为什么开启了 EmscriptenGLX 后，性能更差了？比如单帧耗时更大了。 <a class="header-anchor" href="#q2-为什么开启了-emscriptenglx-后-性能更差了-比如单帧耗时更大了。" aria-label="Permalink to &quot;Q2. 为什么开启了 EmscriptenGLX 后，性能更差了？比如单帧耗时更大了。&quot;">​</a></h3><p>A2. 如果遇到了此类情况，一般是踩到了新方案的坑，请<a href="./IssueAndContact.html">联系我们</a>一起进行排查。</p><h3 id="q3-为什么开启-emscriptenglx-模式后-渲染异常了" tabindex="-1">Q3. 为什么开启 EmscriptenGLX 模式后，渲染异常了？ <a class="header-anchor" href="#q3-为什么开启-emscriptenglx-模式后-渲染异常了" aria-label="Permalink to &quot;Q3. 为什么开启 EmscriptenGLX 模式后，渲染异常了？&quot;">​</a></h3><p>A3. 新方案对 GL 的相关指令进行了重构，若遇到了渲染相关的表现异常问题，请先排查游戏在 iOS 高性能+ 和 原 Android 设备下的渲染表现是否正常，若正常，请<a href="./IssueAndContact.html">联系我们</a>一起进行排查。</p>',23),c=[o];function l(d,p,h,m,g,u){return t(),a("div",null,c)}const k=e(n,[["render",l]]);export{b as __pageData,k as default};
