import{_ as e,c as a,o as i,a4 as t}from"./chunks/framework.Br2U662V.js";const m=JSON.parse('{"title":"WebGL2.0渲染支持说明","description":"","frontmatter":{},"headers":[],"relativePath":"Design/WebGL2.md","filePath":"Design/WebGL2.md"}'),n={name:"Design/WebGL2.md"},r=t('<h1 id="webgl2-0渲染支持说明" tabindex="-1">WebGL2.0渲染支持说明 <a class="header-anchor" href="#webgl2-0渲染支持说明" aria-label="Permalink to &quot;WebGL2.0渲染支持说明&quot;">​</a></h1><h2 id="适合使用场景" tabindex="-1">适合使用场景 <a class="header-anchor" href="#适合使用场景" aria-label="Permalink to &quot;适合使用场景&quot;">​</a></h2><p>WebGL 是一种用于在 Web 浏览器中渲染图形的 API，基于 OpenGL ES 图形库的功能。WebGL 1.0 大致与 OpenGL ES 2.0 功能相匹配，而 WebGL 2.0 大致与 OpenGL ES 3.0 功能相匹配。 根据游戏项目统计，我们发现相对于WebGL1，更适合以下游戏需求:</p><ul><li>线性颜色空间渲染</li><li>使用GPU Instancing提高渲染性能</li><li>使用SRP Batcher提高渲染性能</li><li>使用URP PostProcessing效果提升品质</li><li>存在大量依赖OpenGL ES 3.0以上的Shader难以降低</li></ul><h2 id="用户占比" tabindex="-1">用户占比 <a class="header-anchor" href="#用户占比" aria-label="Permalink to &quot;用户占比&quot;">​</a></h2><p>Unity WebGL较多渲染优化特性依赖WebGL2.0, 因此这里需要针对该特性在小游戏环境的支持进一步说明。</p><ul><li>小游戏Android平台在8.0.24(2022年中版本)已支持WebGL2, 用户占比&gt;85%（2022.12），最新占比请查阅<a href="https://developers.weixin.qq.com/minigame/dev/guide/runtime/client-lib/version.html" target="_blank" rel="noreferrer">基础库版本分布</a>。</li><li>小游戏iOS高性能模式需要iOS系统版本&gt;=15.0，用户占比&gt;75%（2022.12）</li><li>小游戏<a href="https://developers.weixin.qq.com/minigame/dev/guide/performance/perf-high-performance-plus.html" target="_blank" rel="noreferrer">高性能+模式</a>可以支持iOS系统版本&gt;=14.0用户使用WebGL2</li></ul><h2 id="已知兼容问题" tabindex="-1">已知兼容问题 <a class="header-anchor" href="#已知兼容问题" aria-label="Permalink to &quot;已知兼容问题&quot;">​</a></h2><ul><li>iOS高性能使用WebGL2会存在较多问题，平台暂不保证所有能力完善，开发者务必验证游戏所用到的特性支持情况。</li><li>对于WebGL2, <a href="https://developers.weixin.qq.com/minigame/dev/guide/performance/perf-high-performance-plus.html" target="_blank" rel="noreferrer">高性能+模式</a>有更好的兼容性。</li></ul><p>如遇到问题请<a href="./IssueAndContact.html">联系我们</a>详细排查。</p><h3 id="ios高性能模式开启gpu-instance-模型闪烁-消失-不绘制等问题" tabindex="-1">iOS高性能模式开启GPU Instance，模型闪烁/消失/不绘制等问题 <a class="header-anchor" href="#ios高性能模式开启gpu-instance-模型闪烁-消失-不绘制等问题" aria-label="Permalink to &quot;iOS高性能模式开启GPU Instance，模型闪烁/消失/不绘制等问题&quot;">​</a></h3><ul><li><p><strong>原因</strong>：iOS WebKit对webGL2的支持存在问题，当uniform变量过多时，会出现绘制不正确、不绘制、效率变低等现象；</p></li><li><p><strong>解决方法</strong>：</p><ol><li><p>减少shader中Instance Props的大小；</p></li><li><p>shader中添加instancing_options选项（可参考<a href="https://docs.unity3d.com/Manual/gpu-instancing-shader.html" target="_blank" rel="noreferrer">Unity官方文档</a>说明）</p><ul><li>assumeuniformscaling：开启后，默认object缩放为均匀缩放，uniform可以减少sizeof(mat4x4) * instance count的大小</li><li>forcemaxcount:batchSize：限制每次draw call的instance数量</li></ul></li><li><p>根据机型分级，使用GPU instance特性或合批处理（已知iPhone7p及以下机型需要进一步限制instance count）</p></li></ol></li></ul><h3 id="ios高性能模式drawmeshinstanced显示错乱" tabindex="-1">iOS高性能模式DrawMeshInstanced显示错乱 <a class="header-anchor" href="#ios高性能模式drawmeshinstanced显示错乱" aria-label="Permalink to &quot;iOS高性能模式DrawMeshInstanced显示错乱&quot;">​</a></h3><ul><li><strong>原因</strong>：iOS WebKit对webGL2的支持存在问题，当批次较大时出现显示错误</li><li><strong>解决方法</strong>： iOS降低DrawMeshInstanced的参数matrices、count为32或更小的值</li></ul><h2 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-label="Permalink to &quot;参考文档&quot;">​</a></h2><ul><li>Unity官方文档-<a href="https://docs.unity3d.com/cn/2021.2/Manual/webgl-graphics.html" target="_blank" rel="noreferrer">WebGL 图形</a></li></ul>',16),l=[r];function o(s,c,h,d,u,p){return i(),a("div",null,l)}const g=e(n,[["render",o]]);export{m as __pageData,g as default};
