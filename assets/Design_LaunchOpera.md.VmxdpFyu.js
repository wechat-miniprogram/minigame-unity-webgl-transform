import{_ as s,c as a,o as i,a4 as n}from"./chunks/framework.Br2U662V.js";const l="/minigame-unity-webgl-transform/assets/demo-video.bmM6aW-q.mp4",h="/minigame-unity-webgl-transform/assets/app-mmdys.D2V6c5GV.jpeg",t="/minigame-unity-webgl-transform/assets/app-fxzg.CwsGWMYA.jpeg",e="/minigame-unity-webgl-transform/assets/app-jhywl.4N6roqlx.jpeg",p="/minigame-unity-webgl-transform/assets/image-0.j3jmWdo-.png",k="/minigame-unity-webgl-transform/assets/image-1.BvWojOYk.png",m=JSON.parse('{"title":"启动剧情（Beta）","description":"","frontmatter":{},"headers":[],"relativePath":"Design/LaunchOpera.md","filePath":"Design/LaunchOpera.md"}'),r={name:"Design/LaunchOpera.md"},o=n('<h1 id="启动剧情-beta" tabindex="-1">启动剧情（Beta） <a class="header-anchor" href="#启动剧情-beta" aria-label="Permalink to &quot;启动剧情（Beta）&quot;">​</a></h1><p>Unity微信小游戏首次启动会花费较长的加载时间，这段等待期间游戏与玩家之间没有更多的交互，这是新用户的留存率影响的重要因素，微信小游戏希望能够提供一些更早的交互行为来提升这段等待空窗期的用户访问体验，为游戏的主逻辑争取更多的下载、加载时间。由此推出「启动剧情」能力，对于希望进一步提升游戏启动留存的开发者可以基于该能力精心设计用于“迎新”的剧情内容，进而提升玩家的代入感与游戏的顺畅体验。</p><h2 id="剧情效果" tabindex="-1">剧情效果 <a class="header-anchor" href="#剧情效果" aria-label="Permalink to &quot;剧情效果&quot;">​</a></h2><h3 id="演示视频及演示工程源码" tabindex="-1">演示视频及演示工程源码 <a class="header-anchor" href="#演示视频及演示工程源码" aria-label="Permalink to &quot;演示视频及演示工程源码&quot;">​</a></h3><video width="320" height="auto" controls><source src="'+l+'" type="video/mp4"> Your browser does not support the video tag. </video><p><a href="https://github.com/wechat-miniprogram/minigame-unity-webgl-transform/tree/main/Demo/LaunchOpera" target="_blank" rel="noreferrer">演示工程源码</a></p><h3 id="优秀作品" tabindex="-1">优秀作品 <a class="header-anchor" href="#优秀作品" aria-label="Permalink to &quot;优秀作品&quot;">​</a></h3><p>首次访问将直接进入剧情模式（不会显示Unity游戏通用Loading界面），二次访问通常删除本地微信小游戏包再次访问游戏可体验剧情内容（部分游戏使用异步模式，若已经注册游戏角色可能会改变剧情内容，需使用新微信账号访问体验）。</p><table><thead><tr><th>魔魔打勇士</th><th>飞翔之光</th><th>镜花异闻录</th></tr></thead><tbody><tr><td><img src="'+h+'" width="170"></td><td><img src="'+t+'" width="170"></td><td><img src="'+e+`" width="170"></td></tr></tbody></table><p>欢迎更多游戏接入成为优秀案例。</p><h2 id="能力特性" tabindex="-1">能力特性 <a class="header-anchor" href="#能力特性" aria-label="Permalink to &quot;能力特性&quot;">​</a></h2><ul><li>比WASM(C#)更早的运行时机</li><li>独立线程</li><li>支持区分新老用户不同的播放内容</li><li>以视频、插图等形式展现</li></ul><h2 id="推荐内容" tabindex="-1">推荐内容 <a class="header-anchor" href="#推荐内容" aria-label="Permalink to &quot;推荐内容&quot;">​</a></h2><ul><li>前置新人、赛季CG动画短片</li><li>游戏世界观、故事背景的介绍</li><li>游戏厂家启动Logo、防沉迷等信息披露</li></ul><h2 id="接入方式" tabindex="-1">接入方式 <a class="header-anchor" href="#接入方式" aria-label="Permalink to &quot;接入方式&quot;">​</a></h2><p>由于启动剧情为Unity启动加载耗时过久而推出的能力，因此主要配置由 JavaScript 脚本实现（早于WASM初始化）。</p><h3 id="步骤一-设计剧情" tabindex="-1">步骤一：设计剧情 <a class="header-anchor" href="#步骤一-设计剧情" aria-label="Permalink to &quot;步骤一：设计剧情&quot;">​</a></h3><p>剧本设计请阅读 <a href="./LaunchOperaDocument.html">启动剧情剧本自助设计工具及文档</a> 完成设计与调试；</p><p>由工具构建(npm run build)生成剧本产物：资源目录 <code>launchOperaPlay</code>。</p><h3 id="步骤二-配置启动剧情" tabindex="-1">步骤二：配置启动剧情 <a class="header-anchor" href="#步骤二-配置启动剧情" aria-label="Permalink to &quot;步骤二：配置启动剧情&quot;">​</a></h3><ol><li>使用代码编辑工具打开Unity工程中 <code>Assets/WX-WASM-SDK-V2/Runtime/wechat-default</code> 目录；</li><li>将 <strong>步骤一</strong> 中 <code>launchOperaPlay</code> 资源放到 <code>wechat-default</code> 目录中；</li><li>打开 <code>wechat-default/game.js</code> 文件，该文件是 JavaScript 运行的入口文件，在文件底部增加启动剧情初始化配置。</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// game.js</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 原有的代码</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 底部增加启动剧情配置</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// launchOperaInit 是用于初始化剧情的回调事件</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 配置工作需要在该回调中使用「同步」方式完成，请勿使用异步函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GameGlobal.events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;launchOperaInit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">operaHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 如需读取本地缓存请使用 getStorageSync 读取，请勿使用异步方式</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 如需异步请查阅「基于异步干预剧情发展」</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> play </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getStorageSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;launchOperaLocalDataXXX&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 自行管理的本地缓存 Key-Value</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (value) {    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 本地有特定缓存标识意味已经不是首次访问可以不播放</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      play </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (e) { }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 合理位置标记为非新用户，也可以在 C# 侧完成标记</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setStorageSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;launchOperaLocalDataXXX&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { anydata: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 开始配置启动剧情</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  operaHandler.config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 配置本地剧本路径，若 playPath 文件不存在或读取失败则自动放弃启动剧情</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    playPath: play </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/launchOperaPlay/operaPlay.obj&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 注册一些其他的启动剧情事件回调</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  operaHandler.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onEnd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;剧情播放结束&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  operaHandler.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onErr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;发生异常&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    operaHandler.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 发生异常时强制结束，避免用户无法退出剧情插件模式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 弱网处理</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  operaHandler.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onWeakNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // code...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><ol start="4"><li>导出面板进行导出微信小游戏即可。</li></ol><h3 id="基于异步干预剧情发展" tabindex="-1">基于异步干预剧情发展 <a class="header-anchor" href="#基于异步干预剧情发展" aria-label="Permalink to &quot;基于异步干预剧情发展&quot;">​</a></h3><p>初始化期间可以同步读取本地资源简单判断是否需要播放剧情，但对于有网络存档的游戏而言，显然不是可靠的判断新用户的方案（用户新设备或本地缓存丢失时也将判定为新用户），这将涉及到异步方式来干预启动剧情插件的工作。异步由于存在不确定的结果返回时间，游戏的启动自然不能始终等待这段空隙，因此在异步结果返回前，我们应让启动剧情插件<strong>正常启动</strong>，并在后续合理的时机完成故事线的切换。下图给出一种推荐的做法：</p><p><img src="`+p+'" alt=""></p><p>我们可以看到，默认的剧情将固定播放一段大约3～5秒钟的启动动画（可以是游戏厂家Logo、防沉迷提醒等），在3～5秒期间 JavaScript 脚本尝试用一些途径来确定后续的剧情发展（可以通过网络交互、本地读取等），当确认后，启动剧情插件允许配置相关变量进而干预剧情发展。 值得注意的是，异步的获取时间明显是不可控的，因此是有可能在5秒的启动动画结束后，仍未得到期望的结果，因此推荐的设计是默认情况下仅播放5秒的启动动画，后续剧情不播放，当5秒内明确了后续播与不播放的选择时，按结果配置，若仍未得到结果，可以按照老用户立即结束剧情即可。具体如何抉择，开发者可以自行设计。</p><p>异步干预剧情需要使用到 <strong>全局变量</strong> 能力，Beta期间请联系研发助手设计剧情期间咨询异步干预能力。</p><h3 id="自定义上报分析" tabindex="-1">自定义上报分析 <a class="header-anchor" href="#自定义上报分析" aria-label="Permalink to &quot;自定义上报分析&quot;">​</a></h3><p>启动剧情是一个持续较长时间的业务内容，这段时间中任何时刻均会有用户离开，因此上报剧情期间用户不同阶段的行为对于分析剧情内容与留存率是非常重要的。启动剧情的“剧本”由开发者定义，因此开发者更清楚一个剧情的不同阶段的时间点，所以需要开发者自行对不同阶段剧情进行上报打点。开发者配置上报后，MP管理后台提供了漏斗图的数据可视化看板，将方便开发者进行数据分析。 有关自定义上报详细内容请参考 <a href="https://developers.weixin.qq.com/minigame/dev/guide/performance/perf-action-start-reportScene.html" target="_blank" rel="noreferrer">启动场景上报分析</a> 。</p><h3 id="外显进度条接入" tabindex="-1">外显进度条接入 <a class="header-anchor" href="#外显进度条接入" aria-label="Permalink to &quot;外显进度条接入&quot;">​</a></h3><p>启动剧情能力工作期间，仍然提供了加载进度外显能力，这有助于在剧情播放期间通过截图方式反馈一些加载进度信息，默认情况下位于小游戏底部区域，如图所示：</p><img src="'+k+`" width="50%"><p>启动剧情外显进度条默认为用户开启，并且进度条前70%固定为Unity小游戏封面启动进度，开发者可以自行补充后30%进度的显示，若开发者未定义后30%显示进度则启动剧情插件将在首资源包与WASM初始化完成后以平滑动画完成100%进度显示。</p><h4 id="关闭-样式调整" tabindex="-1">关闭/样式调整 <a class="header-anchor" href="#关闭-样式调整" aria-label="Permalink to &quot;关闭/样式调整&quot;">​</a></h4><p>如需关闭/样式调整外显进度条，如下配置：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GameGlobal.event.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;launchOperaInit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">operaHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // other codes...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 配置外显进度条</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  operaHandler.config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    progressStyle: {   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 外显进度条配置，所有配置项均可缺省，以下为默认值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      position: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0 顶部 1 底部</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      hidden: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 是否隐藏</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      color: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#FFFFFF&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,             </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 进度条颜色</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      backgroundColor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#000000&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 进度条背景颜色</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 进度条高度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    useCustomProgress: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 声明控制后30%显示，默认不控制将以动画自动补间</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>如开启 <code>useCustomProgress</code> 则可在游戏侧完成控制</p><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">launchOpera.percentage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 开发者输入 .0～1.0 浮点数，对应控制剩余 30%</span></span></code></pre></div><h3 id="弱网处理" tabindex="-1">弱网处理 <a class="header-anchor" href="#弱网处理" aria-label="Permalink to &quot;弱网处理&quot;">​</a></h3><p>启动剧情通常以视频内容呈现为主，网络流畅度对用户体验是存在直接关系，除了开发者需要确保使用可靠的CDN服务托管视频资源确保足够的输出带宽，用户的实际网络也是影响的重要因素。微信小游戏启动剧情对可能影响用户体验的弱网情况做了相应的回调事件，也对网络情况做了三个级别的分级，请开发者对弱网的反馈同样做出合理的处理提升用户体验。</p><p>弱网级别：</p><ul><li>0级：视频、音频数据流畅（不会产生onWeakNetwork回调）</li><li>1级：存在稍微卡顿但可及时恢复播放。可适当给出Loading动画提醒网络加载，或使用全局变量控制剧情显示退出/跳过按钮由用户主动放弃剧情。</li><li>2级：严重卡顿，长时间等待视频数据缓冲。可主动提前结束启动剧情，进入原本的Unity loading模式。</li></ul><p>请参阅 <a href="#onweaknetworkcallback-function">.onWeakNetwork</a> API描述。</p><h2 id="api执行环境说明" tabindex="-1">API执行环境说明 <a class="header-anchor" href="#api执行环境说明" aria-label="Permalink to &quot;API执行环境说明&quot;">​</a></h2><p>启动剧情的运行环境主要以 JavaScript 为主，当然我们也提供了部分 C# 侧需要用到的访问接口。JavaScript 侧指的是导出目录中 <code>minigame</code> 文件夹中的脚本，这是微信开发者工具打开的脚本目录，<code>minigame/game.js</code> 是整个游戏客户端启动的入口，我们通常也是从该入口进行能力迭代。不过值得注意的是，<code>minigame</code> 目录是导出产物，在重新导出游戏时将会被覆盖，所以正确的修改目录应该位于 <code>Assets/WX-WASM-SDK-V2/Runtime/wechat-default</code> 目录中，这里是导出 <code>minigame</code> 的模板文件，并且能够跟随项目Git等代码版本托管迭代。</p><p>C# 侧指的是游戏在 Unity 环境中的函数调用，区别于 JavaScript 他的时机将更晚，因为 C# 侧需要等待 WASM 准备充分（首场景加载完成）后才能够进行一系列的函数调用，因此配置性的操作是不能此完成（请在 JavaScript 完成），当剧情启动并给到充分的 WASM 启动后，C# 将得到一些信息反馈，如：何时结束剧情、外显进度条的进度设置等。</p><h2 id="api-javascript侧" tabindex="-1">API（JavaScript侧） <a class="header-anchor" href="#api-javascript侧" aria-label="Permalink to &quot;API（JavaScript侧）&quot;">​</a></h2><p>在 JavaScript 中除了 <code>launchOperaInit</code> 回调函数参数中可获得句柄外， 全局变量 <code>GameGlobal.launchOpera</code> 可以让开发者在任意位置访问到控制句柄；</p><h3 id="running" tabindex="-1">.running <a class="header-anchor" href="#running" aria-label="Permalink to &quot;.running&quot;">​</a></h3><p>只读属性，获得当前剧情插件运行状态，<code>true</code> 代表正在播放剧情，<code>false</code> 为未运行或已播放结束资源已完成析构。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(GameGlobal.launchOpera.running);    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true or false</span></span></code></pre></div><h3 id="config" tabindex="-1">.config <a class="header-anchor" href="#config" aria-label="Permalink to &quot;.config&quot;">​</a></h3><p>在初始化期间对启动剧情组件进行相关配置。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GameGlobal.launchOpera.config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  playPath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 可选，剧本文件路径，填写该项则意味开启启动剧情</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  progressStyle: {   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 外显进度条配置，所有配置项均可缺省，以下为默认值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    position: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0 顶部 1 底部</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hidden: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 是否隐藏</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    color: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#FFFFFF&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,             </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 进度条颜色</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    backgroundColor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#000000&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 进度条背景颜色</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 进度条高度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  useCustomProgress: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 是否接入自定义外显进度条</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="end" tabindex="-1">.end() <a class="header-anchor" href="#end" aria-label="Permalink to &quot;.end()&quot;">​</a></h3><p>提前结束启动剧情。</p><h3 id="onend-callback-function" tabindex="-1">.onEnd(callback: Function) <a class="header-anchor" href="#onend-callback-function" aria-label="Permalink to &quot;.onEnd(callback: Function)&quot;">​</a></h3><p>注册当剧情结束时的回调事件。</p><p>当产生该回调时意味着启动剧情组件资源已经完全析构，同时自动释放注册的事件（如 .onErr 、.onEnd），无需开发手动释放。</p><h3 id="offend-callback-function" tabindex="-1">.offEnd(callback: Function) <a class="header-anchor" href="#offend-callback-function" aria-label="Permalink to &quot;.offEnd(callback: Function)&quot;">​</a></h3><p>注销当剧情结束时配置的回调事件。</p><h3 id="onerr-callback-function" tabindex="-1">.onErr(callback: Function) <a class="header-anchor" href="#onerr-callback-function" aria-label="Permalink to &quot;.onErr(callback: Function)&quot;">​</a></h3><p>注册当发生异常时的回调事件。</p><p>引发异常的可能是：剧本文件读取失败、剧本与启动剧情插件版本不兼容、插件环境异常、CDN视频资源播放失败等。</p><p>为避免发生异常时用户无法退出启动剧情插件，推荐开发者在 onErr 强制结束启动剧情。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">launchOpera.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onErr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  launchOpera.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 强制结束</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="offerr-callback-function" tabindex="-1">.offErr(callback: Function) <a class="header-anchor" href="#offerr-callback-function" aria-label="Permalink to &quot;.offErr(callback: Function)&quot;">​</a></h3><p>注销当发生异常时的回调事件。</p><h3 id="onweaknetwork-callback-function" tabindex="-1">.onWeakNetwork(callback: Function) <a class="header-anchor" href="#onweaknetwork-callback-function" aria-label="Permalink to &quot;.onWeakNetwork(callback: Function)&quot;">​</a></h3><p>当发生1-2级弱网情况时发生的回调事件。</p><p>一种推荐的配置：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">launchOpera.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onWeakNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * info 结构：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   *  interface info {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   *    level: number;  // 弱网级别</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   *    url: string;  // 产生本次回调的远程资源url</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   *  }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (info.level </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">showToast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;网络较弱正在缓冲...&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      icon: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;none&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 使用 GlobalVar 显示跳过/退出按钮</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // code...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 不是 level 1 则为 level 2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">showToast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;网络较差，已为您跳过剧情&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      icon: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;none&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    launchOpera.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 强制结束</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="offweaknetwork-callback-function" tabindex="-1">.offWeakNetwork(callback: Function) <a class="header-anchor" href="#offweaknetwork-callback-function" aria-label="Permalink to &quot;.offWeakNetwork(callback: Function)&quot;">​</a></h3><p>注销当发生弱网情况时的回调事件。</p><h3 id="setglobalvar-globalname-string-value-string" tabindex="-1">.setGlobalVar(globalName: string, value: string) <a class="header-anchor" href="#setglobalvar-globalname-string-value-string" aria-label="Permalink to &quot;.setGlobalVar(globalName: string, value: string)&quot;">​</a></h3><p>设置启动剧情全局变量值。</p><h3 id="getglobalvar-globalname-string-string-null" tabindex="-1">.getGlobalVar(globalName: string): string | null <a class="header-anchor" href="#getglobalvar-globalname-string-string-null" aria-label="Permalink to &quot;.getGlobalVar(globalName: string): string | null&quot;">​</a></h3><p>读取启动剧情全局变量值。</p><h3 id="onglobalvarchange-globalname-string-callback-function" tabindex="-1">.onGlobalVarChange(globalName: string, callback: Function) <a class="header-anchor" href="#onglobalvarchange-globalname-string-callback-function" aria-label="Permalink to &quot;.onGlobalVarChange(globalName: string, callback: Function)&quot;">​</a></h3><p>当启动剧情全局变量变化时回调。</p><h3 id="offglobalvarchange-globalname-string-callback-function" tabindex="-1">.offGlobalVarChange(globalName: string, callback: Function) <a class="header-anchor" href="#offglobalvarchange-globalname-string-callback-function" aria-label="Permalink to &quot;.offGlobalVarChange(globalName: string, callback: Function)&quot;">​</a></h3><p>注销启动剧情全局变量变化时回调。</p><h2 id="api-c-侧" tabindex="-1">API（C#侧） <a class="header-anchor" href="#api-c-侧" aria-label="Permalink to &quot;API（C#侧）&quot;">​</a></h2><h3 id="获得交互句柄" tabindex="-1">获得交互句柄 <a class="header-anchor" href="#获得交互句柄" aria-label="Permalink to &quot;获得交互句柄&quot;">​</a></h3><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> launchOperaHandler</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WX.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetLaunchOperaHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h3 id="void-setpercentage-double-value" tabindex="-1">void SetPercentage(double value) <a class="header-anchor" href="#void-setpercentage-double-value" aria-label="Permalink to &quot;void SetPercentage(double value)&quot;">​</a></h3><p>当开启自定义外显进度条时（useCustomProgress）可控制进度条进度，value 接受 .0 ~ 1.0 区间浮点数，对应外显进度条的 70% ~ 100% 进度。</p><h3 id="bool-getrunning" tabindex="-1">bool GetRunning() <a class="header-anchor" href="#bool-getrunning" aria-label="Permalink to &quot;bool GetRunning()&quot;">​</a></h3><p>获得当前剧情插件运行状态，<code>true</code> 代表正在播放剧情，<code>false</code> 为未运行或已播放结束资源析构。</p><h3 id="void-end" tabindex="-1">void End() <a class="header-anchor" href="#void-end" aria-label="Permalink to &quot;void End()&quot;">​</a></h3><p>提前结束启动剧情。</p><h3 id="void-onend-action-bool-callback" tabindex="-1">void onEnd(Action&lt;bool&gt; callback) <a class="header-anchor" href="#void-onend-action-bool-callback" aria-label="Permalink to &quot;void onEnd(Action\\&lt;bool&gt; callback)&quot;">​</a></h3><p>注册当剧情结束时的回调事件。</p><p>由于 C# 代码启动较晚，如果在开发者注册时剧情已经结束，则在注册该方法时会立即产生回调，注册的回调只会产生1次。</p><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// On LaunchOpera End</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WX.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetLaunchOperaHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onEnd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    WX.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ShowToast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ShowToastOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        title </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;C#(WASM) received the ending callback event!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        icon </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;none&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="void-offend-action-bool-callback" tabindex="-1">void offEnd(Action&lt;bool&gt; callback) <a class="header-anchor" href="#void-offend-action-bool-callback" aria-label="Permalink to &quot;void offEnd(Action\\&lt;bool&gt; callback)&quot;">​</a></h3><p>注销当剧情结束时配置的回调事件。</p><h3 id="void-setglobalvar-string-key-string-value" tabindex="-1">void SetGlobalVar(string key, string value) <a class="header-anchor" href="#void-setglobalvar-string-key-string-value" aria-label="Permalink to &quot;void SetGlobalVar(string key, string value)&quot;">​</a></h3><p>设置启动剧情全局变量值。</p><h3 id="string-getglobalvar-string-key" tabindex="-1">string GetGlobalVar(string key) <a class="header-anchor" href="#string-getglobalvar-string-key" aria-label="Permalink to &quot;string GetGlobalVar(string key)&quot;">​</a></h3><p>读取启动剧情全局变量值。</p>`,102),E=[o];function d(c,g,y,u,b,F){return i(),a("div",null,E)}const f=s(r,[["render",d]]);export{m as __pageData,f as default};
