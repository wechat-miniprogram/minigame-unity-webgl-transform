import{_ as a,c as e,o as i,a4 as t}from"./chunks/framework.Br2U662V.js";const k=JSON.parse('{"title":"微信SDK安装","description":"","frontmatter":{},"headers":[],"relativePath":"Design/SDKInstaller.md","filePath":"Design/SDKInstaller.md"}'),s={name:"Design/SDKInstaller.md"},n=t(`<h1 id="微信sdk安装" tabindex="-1">微信SDK安装 <a class="header-anchor" href="#微信sdk安装" aria-label="Permalink to &quot;微信SDK安装&quot;">​</a></h1><ul><li>请查阅<a href="/minigame-unity-webgl-transform/Design/UnityVersion.html">推荐引擎版本</a>，安装时选择 WeiXin MiniGame（团结引擎）或 WebGL（Unity引擎）组件</li><li>前往<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/stable.html" target="_blank" rel="noreferrer">微信开发者工具下载</a>安装Stable版开发者工具【注意：为保证稳定性，请勿使用小游戏版 Minigame Build】</li><li>查阅<a href="https://developers.weixin.qq.com/minigame/dev/guide/" target="_blank" rel="noreferrer">小游戏开发者文档-快速上手</a>创建小游戏类目应用</li><li>登录<a href="https://mp.weixin.qq.com" target="_blank" rel="noreferrer">MP微信公众平台</a>，能力地图-生产提效包-快适配，开通使用</li><li>查阅<a href="/minigame-unity-webgl-transform/Design/Transform.html">快速开始：转换工具导出微信小游戏</a>进行小游戏导出转换</li></ul><p>为兼容历史团结/Unity版本的使用，微信小游戏团队将SDK分为如下两种模式安装使用。</p><h2 id="方法一-推荐-package-方式安装" tabindex="-1">方法一（推荐）：Package 方式安装 <a class="header-anchor" href="#方法一-推荐-package-方式安装" aria-label="Permalink to &quot;方法一（推荐）：Package 方式安装&quot;">​</a></h2><p>目前<a href="https://unity.cn/tuanjie/tuanjieyinqing" target="_blank" rel="noreferrer">团结引擎</a>、Unity 2019及以后版本推荐使用 Package 方式安装WXSDK。</p><h3 id="安装指南" tabindex="-1">安装指南 <a class="header-anchor" href="#安装指南" aria-label="Permalink to &quot;安装指南&quot;">​</a></h3><p><code>打开游戏工程</code> -&gt; <code>Unity/团结引擎 Editor 菜单栏</code> -&gt; <code>Package Manager</code> -&gt; <code>右上方 “+”</code> -&gt; <code>Add package from git URL</code> URL地址为：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>https://github.com/wechat-miniprogram/minigame-tuanjie-transform-sdk.git</span></span></code></pre></div><p>或国内Gitee镜像：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>https://gitee.com/wechat-minigame/minigame-tuanjie-transform-sdk.git</span></span></code></pre></div><p>即可完成SDK导入。</p><h2 id="方法二-资源包方式安装" tabindex="-1">方法二：资源包方式安装 <a class="header-anchor" href="#方法二-资源包方式安装" aria-label="Permalink to &quot;方法二：资源包方式安装&quot;">​</a></h2><p>对于 Unity 2018 版本引擎使用资源包方式可安装 WXSDK</p><h3 id="安装指南-1" tabindex="-1">安装指南 <a class="header-anchor" href="#安装指南-1" aria-label="Permalink to &quot;安装指南&quot;">​</a></h3><p>如果当前版本暂不支持 PackageManager 导入，请 <a href="https://game.weixin.qq.com/cgi-bin/gamewxagwasmsplitwap/getunityplugininfo?download=1" target="_blank" rel="noreferrer">下载UnitySDK</a> 后导入游戏工程中。</p><h2 id="目录结构说明" tabindex="-1">目录结构说明 <a class="header-anchor" href="#目录结构说明" aria-label="Permalink to &quot;目录结构说明&quot;">​</a></h2><p>我们希望SDK与工程代码解耦，如此一来也更方便开发者的代码版本维护。因此 PackageManager 模式下，微信SDK内容将不再存放在游戏工程的Assets目录中。为兼容需要，仍然会自动在 Assets 目录下创建 <code>WX-WASM-SDK-V2</code> 数据目录，如需保持相关的应用配置应始终保留该目录内容。</p><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><h4 id="_1-游戏工程可以导出但在微信开发者工具运行提示报错" tabindex="-1">1.游戏工程可以导出但在微信开发者工具运行提示报错： <a class="header-anchor" href="#_1-游戏工程可以导出但在微信开发者工具运行提示报错" aria-label="Permalink to &quot;1.游戏工程可以导出但在微信开发者工具运行提示报错：&quot;">​</a></h4><p>常见的情况是发生在如空项目或游戏代码中从未使用WXSDK的任何Runtime能力时，引擎导出项目将微信Runtime包裁剪，解决办法是在游戏合理位置增加对WXSDK的使用即可。 如：</p><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 无直接的API能力调用可使用读取系统信息等API</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WX.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetSystemInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> GetSystemInfoOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 读取SystemInfo</span></span></code></pre></div>`,21),r=[n];function l(o,h,p,d,c,g){return i(),e("div",null,r)}const u=a(s,[["render",l]]);export{k as __pageData,u as default};
