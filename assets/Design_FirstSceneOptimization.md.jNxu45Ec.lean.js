import{_ as t,E as e,c as n,m as l,a as i,J as r,w as o,a4 as s,o as p}from"./chunks/framework.Br2U662V.js";const h="/minigame-unity-webgl-transform/assets/profile.yCnwPQ6L.png",d="/minigame-unity-webgl-transform/assets/stop.CFvG6dL8.png",k="/minigame-unity-webgl-transform/assets/stopprofile.DmPV0U4-.png",g="/minigame-unity-webgl-transform/assets/chromeload.sYqunEFg.png",c="/minigame-unity-webgl-transform/assets/benchmarkprofile.BvHHzfgK.png",v=JSON.parse('{"title":"首场景启动优化","description":"","frontmatter":{},"headers":[],"relativePath":"Design/FirstSceneOptimization.md","filePath":"Design/FirstSceneOptimization.md"}'),m={name:"Design/FirstSceneOptimization.md"},E=s("",13),y=s("",9);function f(u,P,_,C,F,b){const a=e("font");return p(),n("div",null,[E,l("p",null,[i("目前为止，开发者可以操作的主要是PlayerLoadFirstScene函数的调用，参照Unity的Benchmark项目，要尽可能将PlayerLoadFirstScene的耗时控制在整个CallMain耗时的"),r(a,{color:"#dd0000"},{default:o(()=>[i("20%")]),_:1}),i("左右，如果CallMain耗时过大，可以借助上面提到的Profile工具进行优化，下面简单分析流程。")]),y])}const B=t(m,[["render",f]]);export{v as __pageData,B as default};
