import{_ as s,c as a,o as i,a4 as t}from"./chunks/framework.Br2U662V.js";const y=JSON.parse('{"title":"启动剧情剧本自助设计工具及文档","description":"","frontmatter":{},"headers":[],"relativePath":"Design/LaunchOperaDocument.md","filePath":"Design/LaunchOperaDocument.md"}'),n={name:"Design/LaunchOperaDocument.md"},e=t(`<h1 id="启动剧情剧本自助设计工具及文档" tabindex="-1">启动剧情剧本自助设计工具及文档 <a class="header-anchor" href="#启动剧情剧本自助设计工具及文档" aria-label="Permalink to &quot;启动剧情剧本自助设计工具及文档&quot;">​</a></h1><h2 id="_1-文档说明" tabindex="-1">1.文档说明 <a class="header-anchor" href="#_1-文档说明" aria-label="Permalink to &quot;1.文档说明&quot;">​</a></h2><p>启动剧情能力上线初期微信小游戏团队希望更多开发者能够一定程度上自助接入该能力设计剧本，来减少人工协助带来的额外时间消耗，为此提供本指南及工具，游戏开发者通常可通过阅读指南与使用本工具自行完成剧本的设计并上线能力。</p><h2 id="_2-准备工作" tabindex="-1">2.准备工作 <a class="header-anchor" href="#_2-准备工作" aria-label="Permalink to &quot;2.准备工作&quot;">​</a></h2><ul><li><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html" target="_blank" rel="noreferrer">微信开发者工具</a></li><li><a href="https://nodejs.org/en/download/current" target="_blank" rel="noreferrer">Node.js (版本 &gt;= 18.0.0)</a></li><li>需要了解一些 JavaScript 的基本语法</li><li>一个专业的JavaScript代码编辑器（推荐 <a href="https://code.visualstudio.com/download" target="_blank" rel="noreferrer">VScode</a>、Sublime 等）</li></ul><h2 id="_3-快速入门" tabindex="-1">3.快速入门 <a class="header-anchor" href="#_3-快速入门" aria-label="Permalink to &quot;3.快速入门&quot;">​</a></h2><p>如果你还没接触 Cli 开发模式，请跟随本教程直至你能在 <strong>微信开发者工具</strong> 中随意的预览你创作的剧情设计。</p><h4 id="step1-安装启动剧情cli工具" tabindex="-1">Step1 安装启动剧情Cli工具 <a class="header-anchor" href="#step1-安装启动剧情cli工具" aria-label="Permalink to &quot;Step1 安装启动剧情Cli工具&quot;">​</a></h4><p>确保正确安装Node.js与npm包管理器时，只需在你的PC命令行中输入：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> launch-opera-cli</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span></span></code></pre></div><p>有时可能需要以管理员身份运行该命令。</p><h4 id="step2-创建剧情工程" tabindex="-1">Step2 创建剧情工程 <a class="header-anchor" href="#step2-创建剧情工程" aria-label="Permalink to &quot;Step2 创建剧情工程&quot;">​</a></h4><p>在合适的目录下创建你的剧情编辑工程，PC命令行中输入：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lacop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span></span></code></pre></div><p>按照提示创建，如名为 <code>lac-opera-test</code> 的剧情工程，等待片刻创建成功后请进入该目录。</p><h4 id="step3-启动开发模式" tabindex="-1">Step3 启动开发模式 <a class="header-anchor" href="#step3-启动开发模式" aria-label="Permalink to &quot;Step3 启动开发模式&quot;">​</a></h4><p>创建成功后进入 <code>lac-opera-test</code> （本案例名）目录中执行：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lacop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> watch</span></span></code></pre></div><p>等待片刻提示 <code>Starting compilation in watch mode...</code> 代表启动成功，此时将自动生成 <code>/minigame</code> 文件夹。 <strong>注意在调试期间请勿关闭该命令行，应使其始终保持活跃，直到结束剧本设计</strong>。</p><h4 id="step4-预览默认剧情" tabindex="-1">Step4 预览默认剧情 <a class="header-anchor" href="#step4-预览默认剧情" aria-label="Permalink to &quot;Step4 预览默认剧情&quot;">​</a></h4><p>使用 <code>微信开发者工具</code> 打开 <code>/minigame</code> 目录，AppID 请切换成当前登录用户有开发权限的小游戏AppID，如果AppID是首次打开后会要求添加用于调试的小游戏插件，按照提示申请权限，若一切正常，你将在工具完全载入资源后看到默认的启动剧情内容。</p><h4 id="step5-对剧本修改" tabindex="-1">Step5 对剧本修改 <a class="header-anchor" href="#step5-对剧本修改" aria-label="Permalink to &quot;Step5 对剧本修改&quot;">​</a></h4><p>可能与平时开发小程序/小游戏直接在 <code>微信开发者工具</code> 修改剧本不同的是，你无需修改 <code>/minigame</code> 目录中的任何资源，因为这是一个动态构建的产物，他会随着 <code>/src</code> 目录中的资源变化被不断覆盖。所以你真正需要修改的是 <code>/src</code> 中的代码资源。</p><p>接下来请你使用 JavaScript 代码编辑器打开当前工程目录（如 VSCode 打开），找到 <code>/src/launchOperaPlay/index.ts</code> 脚本。</p><p>请修改脚本中大约第 51 行的 skipButton 的 setParams 参数为：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">skipButton.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setParams</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // right: 30,   // 修改前</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  left: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 修改后</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bottom: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">173</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  url: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;launchOperaPlay/skip.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  visible: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>此时保存这个文件，如果你的 Step3 中启动的开发模式还在工作，那么 <code>/minigame</code> 目录资源也将被实时更新，此时 <code>微信开发者工具</code> 通常也将重新加载游戏内容，你会看到被你刚刚修改的按钮贴图位置从右下角变成左下角。</p><p>以此类推，你可以快速修改你看到的很多属性内容，比如位置信息、URL地址从而改变剧情的内容。</p><h4 id="step6-导出剧本" tabindex="-1">Step6 导出剧本 <a class="header-anchor" href="#step6-导出剧本" aria-label="Permalink to &quot;Step6 导出剧本&quot;">​</a></h4><p>当你对剧情设计完成，需要导出剧本给正式的游戏工程使用时，请回到 Step3 中你开启的命令行窗口，Windows系统下使用 <code>Ctrl + C</code> MacOS 系统下使用 <code>control + C</code> 结束开发模式。</p><p>再次执行：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lacop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><p>等待程序执行结束后，你将在根目录看到 <code>/release</code> 目录，此时你可以将 release 目录内资源放到你的正式游戏工程导出的 minigame 目录下使用。</p><p>有关图片资源路径问题请阅读 <a href="#常见qa">常见Q&amp;A</a> 中说明。</p><p>至此你已经完成了一次很小变动的剧本导出工作。</p><h4 id="step7-尝试更多的模板" tabindex="-1">Step7 尝试更多的模板 <a class="header-anchor" href="#step7-尝试更多的模板" aria-label="Permalink to &quot;Step7 尝试更多的模板&quot;">​</a></h4><p>启动剧情能够设计很复杂的交互剧情内容，但是这对于初次使用的开发者还需要阅读本文更多的内容，后续请查阅 <a href="#4进阶指南">进阶指南</a>。如果你想快速应用场景，类似 Step5 中这样仅修改属性值就可以替换成自己的游戏素材还是十分便捷。我们提供了多种模板可供选择，只需要在命令行中输入 <code>lacop template</code> 可以快速切换提供的多种模板效果拿来使用。</p><p><strong>实际上你可以直接执行 <code>lacop</code> 而无需带后面的参数进行能力的自主选择</strong></p><h2 id="_4-进阶指南" tabindex="-1">4.进阶指南 <a class="header-anchor" href="#_4-进阶指南" aria-label="Permalink to &quot;4.进阶指南&quot;">​</a></h2><p>如果模板还不能满足你的需要，请仔细阅读本节，你将学会设计复杂的剧情内容。</p><h3 id="_4-1-了解构建工具" tabindex="-1">4.1 了解构建工具 <a class="header-anchor" href="#_4-1-了解构建工具" aria-label="Permalink to &quot;4.1 了解构建工具&quot;">​</a></h3><p>本构建工具已经为开发者配置好了相关类型声明，如果你使用例如 <code>VScode</code> 等具备 JavaScript/TypeScript 解析的 IDE 工具将可以享受到函数名联想及参数注释能力。</p><p>在使用前请了解本工具的一些行为约束：</p><ul><li><code>src</code> 目录中资源将根据层级结构覆盖构建至 <code>minigame</code> 目录中，因此你可以将图片资源放置在本目录中以供引用，其中 <code>.ts</code> 结尾的脚本不会覆盖；</li><li><code>src/launchOperaPlay</code> 是固定的启动剧情资源目录，请勿修改名称；</li><li><code>src/launchOperaPlay/index.ts</code> 是固定的剧情撰写文件，请勿修改名称；</li><li>视频、音频资源均需要存放至 CDN 中，贴图资源只能放置 <code>src</code> 目录中；</li><li><code>operaData</code> 是整个剧情的编辑句柄，剧情的设计将由操作它开始。</li></ul><h3 id="_4-2-基本概念" tabindex="-1">4.2 基本概念 <a class="header-anchor" href="#_4-2-基本概念" aria-label="Permalink to &quot;4.2 基本概念&quot;">​</a></h3><p>在启动剧情中由两个剧本元素组成，分别是 <strong>关键动作帧(Frame)</strong> 、<strong>故事线(StoryLine)</strong>，关键动作帧更像是一个“函数”，核心思想在于执行到该帧时会引发某种动作，而故事线则是将多个独立的关键动作帧串联有序执行。</p><h4 id="_4-2-1-关键动作帧" tabindex="-1">4.2.1 关键动作帧 <a class="header-anchor" href="#_4-2-1-关键动作帧" aria-label="Permalink to &quot;4.2.1 关键动作帧&quot;">​</a></h4><p>有关关键动作帧的种类，请查阅 <a href="#5api速查">API速查</a> 。每个关键动作帧均有两个必要的组成部分：属性、事件。</p><h5 id="_4-2-1-1-属性" tabindex="-1">4.2.1.1 属性 <a class="header-anchor" href="#_4-2-1-1-属性" aria-label="Permalink to &quot;4.2.1.1 属性&quot;">​</a></h5><p>属性是从关键动作帧激活的那一刻起被赋予其特定的值，属性决定了该帧的真实视图表现。例如：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建了一个 Image，并赋予了他一些初始化的属性</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> skipButton</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operaData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FrameType.createImage, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  url: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`launchOpera/skip_button.png\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  right: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bottom: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 也可以创建后再修改其属性，与上面的写法实际效果完全一样</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> skipButton</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operaData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FrameType.createImage);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">skipButton.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setParams</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  url: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`launchOpera/skip_button.png\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  right: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bottom: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 注意设置属性是一个最终态的表现，也就意味着如下设置只有最后一个是生效的</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">skipButton.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setParams</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 会因下面设置会覆盖，因此该设置无效</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">skipButton.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setParams</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">101</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 会因下面设置会覆盖，因此该设置无效</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">skipButton.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setParams</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">102</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 因最后赋值则有效，skipButton 的 height 初始值则为 102</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h5 id="_4-2-1-2-事件" tabindex="-1">4.2.1.2 事件 <a class="header-anchor" href="#_4-2-1-2-事件" aria-label="Permalink to &quot;4.2.1.2 事件&quot;">​</a></h5><p>事件是对于不同关键动作帧存在不同的事件从而可以引发新的故事线的能力。比如 图片 可以存在被点击(onClick)的事件，视频组件存在开始播放(onPlay)、播放到第n秒时(onPlayTimeAt)、播放结束时(onEnded)等事件，当发生某种事件自然也就可以触发新的故事线内容。</p><p>其中，播放到第n秒时(onPlayTimeAt)，n 是一个可变系数，因此事件也是支持配置参数的。</p><p>例子：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> video1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operaData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FrameType.createVideo, { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置多个不同的事件</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ①</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">video1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  event: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;onPlayTimeAt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  params: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sec: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bind: nextStoryLine,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ②</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">video1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  event: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;onPlayTimeAt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  params: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sec: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  keep: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bind: [ skipButton ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ③</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">skipButton.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  event: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;onClick&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bind: [ operaData.EndFrame ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>上面的例子展示了实际应用的多种可能，首先是不同于 <a href="#4211-属性">属性</a> 的后设置的值将覆盖前设置特点，同名事件是支持创建多个并同时生效（对照① ②中均是 pnPlayTimeAt 事件，但都是独立生效）。② 中使用了一个 keep 字段告诉剧情引擎该事件是反复有效，意味着实际运行时多次达到该事件条件都会引发该事件，而 ① ③ 没有设置 keep 发生一次事件后再达成条件也不会再次引发该事件。</p><p>再次观察 ① ② 的 bind，可以发现发生事件后执行的新的故事线其实可以存在多种表达方式，① 中是上下文中开发者自行创建的名为 <code>nextStoryLine</code> 故事线，有关故事线创建请阅读 <a href="#422-故事线">故事线</a> 小节，而 ② 中是放了一个由 关键动作帧 组成的数组，这其实是一种匿名故事线。</p><p>最后 ③ 中的 <code>operaData.EndFrame</code> 实际上最特殊的关键动作帧，当执行到该帧后，启动剧情将立即结束。</p><h4 id="_4-2-2-故事线" tabindex="-1">4.2.2 故事线 <a class="header-anchor" href="#_4-2-2-故事线" aria-label="Permalink to &quot;4.2.2 故事线&quot;">​</a></h4><p>故事线是将一个或多个关键动作帧有序打包的容器，比较特殊的是，启动剧情需要存在一个主故事线作为启动入口。</p><h5 id="_4-2-2-1-创建及添加关键动作帧" tabindex="-1">4.2.2.1 创建及添加关键动作帧 <a class="header-anchor" href="#_4-2-2-1-创建及添加关键动作帧" aria-label="Permalink to &quot;4.2.2.1 创建及添加关键动作帧&quot;">​</a></h5><p>创建故事线以及添加关键动作帧很简单，使用 operaData 句柄执行：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> storyLine</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operaData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createStoryLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建一系列的动作帧...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 如需添加动作帧</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">storyLine.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(var_GC_GUIDE_STEP, startImg, video1, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> );</span></span></code></pre></div><h5 id="_4-2-2-2-主故事线" tabindex="-1">4.2.2.2 主故事线 <a class="header-anchor" href="#_4-2-2-2-主故事线" aria-label="Permalink to &quot;4.2.2.2 主故事线&quot;">​</a></h5><p>主故事线是启动剧情启动后最先执行的内容，当你第一次创建故事线时，那条线也就是主故事线了。</p><p>主故事线有一些很常见的用途，比如挂载一些全局变量放到主故事线上就很合理，这样你可以在任何时候对全局变量进行使用，对于全局变量的详细介绍请阅读 <a href="#全局变量">全局变量</a> 小节。</p><h2 id="_5-api速查" tabindex="-1">5.API速查 <a class="header-anchor" href="#_5-api速查" aria-label="Permalink to &quot;5.API速查&quot;">​</a></h2><p>了解基本概念后，你也就知道驱动整个剧情发展无非3点。</p><ul><li>合适的时机执行需要的关键动作帧；</li><li>用故事线串联一系列动作帧让他们有序执行；</li><li>关键动作帧可以达成某种事件从而产生新的一条故事线。</li></ul><p>故事线的理解比较简单，重点是了解微信小游戏为开发者们提供了哪些关键动作帧，你可以略读 FrameType速查表 大概知道有哪些能力，并可以具体查看每一个 FrameType 的使用说明，来完成剧情的自主设计。</p><h3 id="frametype速查表" tabindex="-1">FrameType速查表 <a class="header-anchor" href="#frametype速查表" aria-label="Permalink to &quot;FrameType速查表&quot;">​</a></h3><p>点击名称可快速查阅说明</p><table><thead><tr><th>FrameType</th><th>释义</th></tr></thead><tbody><tr><td><a href="#frametypecreatevideo">createVideo</a></td><td>创建视频组件</td></tr><tr><td><a href="#frametypepausevideo">pauseVide</a></td><td>将某个视频组件进行暂停</td></tr><tr><td><a href="#frametypeplayvideo">playVideo</a></td><td>将某个视频组件进行继续播放</td></tr><tr><td><a href="#frametypecreateaudio">createAudio</a></td><td>创建音频组件</td></tr><tr><td><a href="#frametypepauseaudio">pauseAudio</a></td><td>将某个音频组件进行暂停</td></tr><tr><td><a href="#frametypeplayaudio">playAudio</a></td><td>将某个音频组件进行继续播放</td></tr><tr><td><a href="#frametypecreateimage">createImage</a></td><td>创建贴图</td></tr><tr><td><a href="#frametypecreaterect">createRect</a></td><td>创建矩形区域（可透明、填充纯色、用于区域点击识别）</td></tr><tr><td><a href="#frametypesetparam">setParam</a></td><td>设置某个关键动作帧的属性</td></tr><tr><td><a href="#frametypesetparamsizeandposition">setParamSizeAndPosition</a></td><td>同时设置组件的Size、Position属性</td></tr><tr><td><a href="#frametypesettimeout">setTimeout</a></td><td>创建延迟执行</td></tr><tr><td><a href="#frametypecreateanimationfunction">createAnimationFunction</a></td><td>创建动画函数</td></tr><tr><td><a href="#frametypevar">var</a></td><td>创建全局变量</td></tr><tr><td><a href="#frametypeif">if</a></td><td>条件判断</td></tr><tr><td><a href="#frametypereport">report</a></td><td>创建上报节点</td></tr></tbody></table><h3 id="类型约定" tabindex="-1">类型约定 <a class="header-anchor" href="#类型约定" aria-label="Permalink to &quot;类型约定&quot;">​</a></h3><p>类型主要包括以下几种：</p><table><thead><tr><th>类型名</th><th>说明</th></tr></thead><tbody><tr><td>String</td><td>字符串</td></tr><tr><td>Boolean</td><td>布尔值</td></tr><tr><td>Number</td><td>数值</td></tr><tr><td>None</td><td>可缺省值</td></tr><tr><td>Percent</td><td>百分比字符串，如 30%</td></tr><tr><td>Frame</td><td>关键动作帧句柄，如 Frame.var 只接受 FrameType 为 var 的句柄</td></tr></tbody></table><h3 id="空间描述约定" tabindex="-1">空间描述约定 <a class="header-anchor" href="#空间描述约定" aria-label="Permalink to &quot;空间描述约定&quot;">​</a></h3><p>在描述组件的空间位置时，提供了几种简单的描述几乎可以满足大部分的使用需要。</p><p>空间描述主要涉及：left、right、top、bottom、width、height 5个属性，这5个属性均支持缺省（None），实际上描述一个组件在屏幕中的位置有时不需要将5个属性完全设置，比如当你规定了 left=0、right=0 时，也就意味着 width=屏幕宽度（width=100%），同理当你 left=0、width=100%，自然right也就=0。</p><p>在处理相对位置的时候有时 Number 与 Percent 可能都不能满足你的需要，比如：left=50% 代表屏幕中间，但是你希望屏幕中间再靠左10像素，就无法直接使用 Percent 实现，因为不同用户的设备宽度是不相同的，此时用到 calc 表达式方式，比如刚刚的案例中你可以这样描述： left=calc(50%-10) 就可以了。</p><h3 id="视频相关" tabindex="-1">视频相关 <a class="header-anchor" href="#视频相关" aria-label="Permalink to &quot;视频相关&quot;">​</a></h3><h4 id="frametype-createvideo" tabindex="-1">FrameType.createVideo <a class="header-anchor" href="#frametype-createvideo" aria-label="Permalink to &quot;FrameType.createVideo&quot;">​</a></h4><p>创建视频组件。</p><h5 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h5><table><thead><tr><th>属性名</th><th>类型</th><th>介绍</th></tr></thead><tbody><tr><td>top</td><td>Number/Percent</td><td>顶端。可参阅<a href="#空间描述约定">空间描述约定</a></td></tr><tr><td>bottom</td><td>Number/Percent</td><td>底端</td></tr><tr><td>left</td><td>Number/Percent</td><td>左端</td></tr><tr><td>right</td><td>Number/Percent</td><td>右端</td></tr><tr><td>visible</td><td>Boolean</td><td>可视</td></tr><tr><td>width</td><td>Number/Percent</td><td>宽度</td></tr><tr><td>height</td><td>Number/Percent</td><td>高度</td></tr><tr><td>url</td><td>String/Frame.var</td><td>视频资源CDN地址</td></tr><tr><td>autoPlay</td><td>Boolean</td><td>是否自动播放</td></tr><tr><td>playing</td><td>Boolean</td><td>是否播放中</td></tr><tr><td>objectFit</td><td>String/Frame.var</td><td>视频的缩放模式，可选值：fill(填充拉伸)、contain(包含，可能有黑边)、cover(覆盖，可能有部分内容溢出屏幕)</td></tr><tr><td>seek</td><td>Number/String/Frame.var</td><td>视频跳转到特定秒数，如果 &lt; 0 则不跳转</td></tr><tr><td>loop</td><td>Boolean</td><td>是否循环播放</td></tr></tbody></table><h5 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h5><table><thead><tr><th>事件名</th><th>参数</th><th>介绍</th></tr></thead><tbody><tr><td>onPlayTimeAt</td><td>sec:Number</td><td>当播放到第sec秒数时（sec单位：秒）</td></tr><tr><td>onEnded</td><td>-</td><td>视频播放结束时</td></tr><tr><td>onPlay</td><td>-</td><td>视频开始播放时</td></tr></tbody></table><h5 id="案例" tabindex="-1">案例 <a class="header-anchor" href="#案例" aria-label="Permalink to &quot;案例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> video</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operaData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FrameType.createVideo);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">video.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setParams</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 全屏视频</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  left: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  right: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  top: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bottom: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 视频完整呈现，可能存在黑边</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  objectFit: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;contain&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 视频CDN</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  url: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://abc.com/xx.mp4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  autoPlay: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 播放 1.5s 时触发新的关键动作帧</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">video.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  event: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;onPlayTimeAt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  params: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sec: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bind: [ xxxx ] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 新的关键动作帧/故事线</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 可以创建多个事件，互相独立</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">video.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  event: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;onPlayTimeAt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h6 id="seek-的使用案例" tabindex="-1">seek 的使用案例 <a class="header-anchor" href="#seek-的使用案例" aria-label="Permalink to &quot;seek 的使用案例&quot;">​</a></h6><p>seek 需要配合 Frame.SetParam 使用，意味其他事件触发 Frame.SetParam 后为 video 关键动作帧赋值 seek 则产生视频跳转，如需了解 SetParam 请移步特定章节阅读，此处给出 seek 案例：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> video</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ...</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 创建video</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建一个 setParam ，对 video 的 seek 属性设置为 10</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 意味着当触发 seek0 时，video 组件视频将从10秒的位置开始播放</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> seek0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operaData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FrameType.setParam, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  frame: video,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  param: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;seek&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;10&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 在特定条件下触发 seek0</span></span></code></pre></div><h4 id="frametype-pausevideo" tabindex="-1">FrameType.pauseVideo <a class="header-anchor" href="#frametype-pausevideo" aria-label="Permalink to &quot;FrameType.pauseVideo&quot;">​</a></h4><p>暂停视频。</p><h5 id="属性-1" tabindex="-1">属性 <a class="header-anchor" href="#属性-1" aria-label="Permalink to &quot;属性&quot;">​</a></h5><table><thead><tr><th>属性名</th><th>类型</th><th>介绍</th></tr></thead><tbody><tr><td>video</td><td>Frame.createVideo</td><td>需要暂停的视频的关键动作帧句柄</td></tr></tbody></table><h5 id="案例-1" tabindex="-1">案例 <a class="header-anchor" href="#案例-1" aria-label="Permalink to &quot;案例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> video</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ...</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 创建video</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> playVideo0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operaData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FrameType.playVideo, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  video: video,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 在特定条件下触发 playVideo0</span></span></code></pre></div><h4 id="frametype-playvideo" tabindex="-1">FrameType.playVideo <a class="header-anchor" href="#frametype-playvideo" aria-label="Permalink to &quot;FrameType.playVideo&quot;">​</a></h4><p>（继续）播放视频。</p><h5 id="属性-2" tabindex="-1">属性 <a class="header-anchor" href="#属性-2" aria-label="Permalink to &quot;属性&quot;">​</a></h5><table><thead><tr><th>属性名</th><th>类型</th><th>介绍</th></tr></thead><tbody><tr><td>video</td><td>Frame.createVideo</td><td>需要（继续）播放的视频的关键动作帧句柄</td></tr></tbody></table><h5 id="案例-2" tabindex="-1">案例 <a class="header-anchor" href="#案例-2" aria-label="Permalink to &quot;案例&quot;">​</a></h5><p>同 <a href="#frametypepausevideo">FrameType.pauseVideo</a> 使用。</p><h3 id="音频相关" tabindex="-1">音频相关 <a class="header-anchor" href="#音频相关" aria-label="Permalink to &quot;音频相关&quot;">​</a></h3><h4 id="frametype-createaudio" tabindex="-1">FrameType.createAudio <a class="header-anchor" href="#frametype-createaudio" aria-label="Permalink to &quot;FrameType.createAudio&quot;">​</a></h4><p>创建音频组件。</p><h5 id="属性-3" tabindex="-1">属性 <a class="header-anchor" href="#属性-3" aria-label="Permalink to &quot;属性&quot;">​</a></h5><table><thead><tr><th>属性名</th><th>类型</th><th>介绍</th></tr></thead><tbody><tr><td>url</td><td>String/Frame.var</td><td>音频资源CDN地址</td></tr><tr><td>autoPlay</td><td>Boolean</td><td>是否自动播放</td></tr><tr><td>playing</td><td>Boolean</td><td>是否播放中</td></tr><tr><td>seek</td><td>Number/String/Frame.var</td><td>视频跳转到特定秒数，如果 &lt; 0 则不跳转</td></tr><tr><td>loop</td><td>Boolean</td><td>是否循环播放</td></tr><tr><td>volume</td><td>Number</td><td>音量，0～1之间的数值，默认为1</td></tr></tbody></table><h5 id="事件-1" tabindex="-1">事件 <a class="header-anchor" href="#事件-1" aria-label="Permalink to &quot;事件&quot;">​</a></h5><table><thead><tr><th>事件名</th><th>参数</th><th>介绍</th></tr></thead><tbody><tr><td>onPlayTimeAt</td><td>sec:Number</td><td>当播放到第sec秒数时（sec单位：秒）</td></tr><tr><td>onEnded</td><td>-</td><td>音频播放结束时</td></tr><tr><td>onPlay</td><td>-</td><td>音频开始播放时</td></tr></tbody></table><h5 id="案例-3" tabindex="-1">案例 <a class="header-anchor" href="#案例-3" aria-label="Permalink to &quot;案例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> audio</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operaData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FrameType.createAudio);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">audio.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setParams</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 视频CDN</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  url: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://abc.com/xx.mp3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  autoPlay: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 播放 1.5s 时触发新的关键动作帧</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">audio.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  event: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;onPlayTimeAt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  params: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sec: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bind: [ xxxx ] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 新的关键动作帧/故事线</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 可以创建多个事件，互相独立</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">audio.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  event: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;onPlayTimeAt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h4 id="frametype-pauseaudio" tabindex="-1">FrameType.pauseAudio <a class="header-anchor" href="#frametype-pauseaudio" aria-label="Permalink to &quot;FrameType.pauseAudio&quot;">​</a></h4><p>暂停音频。</p><h5 id="属性-4" tabindex="-1">属性 <a class="header-anchor" href="#属性-4" aria-label="Permalink to &quot;属性&quot;">​</a></h5><table><thead><tr><th>属性名</th><th>类型</th><th>介绍</th></tr></thead><tbody><tr><td>audio</td><td>Frame.createAudio</td><td>需要暂停的音频的关键动作帧句柄</td></tr></tbody></table><h5 id="案例-4" tabindex="-1">案例 <a class="header-anchor" href="#案例-4" aria-label="Permalink to &quot;案例&quot;">​</a></h5><p>同 <a href="#frametypepausevideo">FrameType.pauseVideo</a> 使用。</p><h4 id="frametype-playaudio" tabindex="-1">FrameType.playAudio <a class="header-anchor" href="#frametype-playaudio" aria-label="Permalink to &quot;FrameType.playAudio&quot;">​</a></h4><p>（继续）播放音频。</p><h5 id="属性-5" tabindex="-1">属性 <a class="header-anchor" href="#属性-5" aria-label="Permalink to &quot;属性&quot;">​</a></h5><table><thead><tr><th>属性名</th><th>类型</th><th>介绍</th></tr></thead><tbody><tr><td>audio</td><td>Frame.createAudio</td><td>需要（继续）播放的音频的关键动作帧句柄</td></tr></tbody></table><h5 id="案例-5" tabindex="-1">案例 <a class="header-anchor" href="#案例-5" aria-label="Permalink to &quot;案例&quot;">​</a></h5><p>同 <a href="#frametypepausevideo">FrameType.pauseVideo</a> 使用。</p><h3 id="贴图相关" tabindex="-1">贴图相关 <a class="header-anchor" href="#贴图相关" aria-label="Permalink to &quot;贴图相关&quot;">​</a></h3><h4 id="frametype-createimage" tabindex="-1">FrameType.createImage <a class="header-anchor" href="#frametype-createimage" aria-label="Permalink to &quot;FrameType.createImage&quot;">​</a></h4><p>创建贴图组件。</p><p>贴图只能加载小游戏包内图片资源，并且需要主动设置高宽（不会自动读取贴图资源尺寸）。</p><h5 id="属性-6" tabindex="-1">属性 <a class="header-anchor" href="#属性-6" aria-label="Permalink to &quot;属性&quot;">​</a></h5><table><thead><tr><th>属性名</th><th>类型</th><th>介绍</th></tr></thead><tbody><tr><td>top</td><td>Number/Percent</td><td>顶端。可参阅<a href="#空间描述约定">空间描述约定</a></td></tr><tr><td>bottom</td><td>Number/Percent</td><td>底端</td></tr><tr><td>left</td><td>Number/Percent</td><td>左端</td></tr><tr><td>right</td><td>Number/Percent</td><td>右端</td></tr><tr><td>visible</td><td>Boolean</td><td>可视</td></tr><tr><td>width</td><td>Number/Percent</td><td>宽度</td></tr><tr><td>height</td><td>Number/Percent</td><td>高度</td></tr><tr><td>opacity</td><td>Number</td><td>透明度 0～1</td></tr><tr><td>url</td><td>String/Frame.var</td><td>图片资源本地路径</td></tr><tr><td>scaleWidth</td><td>Number</td><td>宽度放缩系数</td></tr><tr><td>scaleHeight</td><td>Number</td><td>高度放缩系数</td></tr></tbody></table><h5 id="事件-2" tabindex="-1">事件 <a class="header-anchor" href="#事件-2" aria-label="Permalink to &quot;事件&quot;">​</a></h5><table><thead><tr><th>事件名</th><th>参数</th><th>介绍</th></tr></thead><tbody><tr><td>onClick</td><td>-</td><td>当贴图被点击</td></tr></tbody></table><h5 id="案例-6" tabindex="-1">案例 <a class="header-anchor" href="#案例-6" aria-label="Permalink to &quot;案例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> image</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operaData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FrameType.createImage);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 右下角跳过贴图</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">image.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setParams</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bottom: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  right: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  url: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;launchOperaPlay/skip.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 点击事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">image.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  event: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;onClick&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bind: [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  keep: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 事件始终有效</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="frametype-createrect" tabindex="-1">FrameType.createRect <a class="header-anchor" href="#frametype-createrect" aria-label="Permalink to &quot;FrameType.createRect&quot;">​</a></h4><p>创建透明、纯色矩形区域，通常用于透明点击区域、背景色。</p><h5 id="属性-7" tabindex="-1">属性 <a class="header-anchor" href="#属性-7" aria-label="Permalink to &quot;属性&quot;">​</a></h5><table><thead><tr><th>属性名</th><th>类型</th><th>介绍</th></tr></thead><tbody><tr><td>top</td><td>Number/Percent</td><td>顶端。可参阅<a href="#空间描述约定">空间描述约定</a></td></tr><tr><td>bottom</td><td>Number/Percent</td><td>底端</td></tr><tr><td>left</td><td>Number/Percent</td><td>左端</td></tr><tr><td>right</td><td>Number/Percent</td><td>右端</td></tr><tr><td>visible</td><td>Boolean</td><td>可视</td></tr><tr><td>width</td><td>Number/Percent</td><td>宽度</td></tr><tr><td>height</td><td>Number/Percent</td><td>高度</td></tr><tr><td>color</td><td>String</td><td>十六进制颜色描述字符串（如：#FFFFFF00）</td></tr></tbody></table><h5 id="事件-3" tabindex="-1">事件 <a class="header-anchor" href="#事件-3" aria-label="Permalink to &quot;事件&quot;">​</a></h5><table><thead><tr><th>事件名</th><th>参数</th><th>介绍</th></tr></thead><tbody><tr><td>onClick</td><td>-</td><td>当贴图被点击</td></tr></tbody></table><h5 id="案例-7" tabindex="-1">案例 <a class="header-anchor" href="#案例-7" aria-label="Permalink to &quot;案例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rect</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operaData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FrameType.createRect);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 一个全屏的透明区域，可以用于点击事件透明遮罩</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rect.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setParams</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  top: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  left: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bottom: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  right: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  color: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#FFFFFF00&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 点击事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rect.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  event: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;onClick&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bind: [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="属性修改" tabindex="-1">属性修改 <a class="header-anchor" href="#属性修改" aria-label="Permalink to &quot;属性修改&quot;">​</a></h3><h4 id="frametype-setparam" tabindex="-1">FrameType.setParam <a class="header-anchor" href="#frametype-setparam" aria-label="Permalink to &quot;FrameType.setParam&quot;">​</a></h4><p>设置单个属性。</p><h5 id="属性-8" tabindex="-1">属性 <a class="header-anchor" href="#属性-8" aria-label="Permalink to &quot;属性&quot;">​</a></h5><table><thead><tr><th>属性名</th><th>类型</th><th>介绍</th></tr></thead><tbody><tr><td>frame</td><td>Frame</td><td>需要修改的 frame 句柄</td></tr><tr><td>param</td><td>String</td><td>属性名</td></tr><tr><td>value</td><td>String/Frame.var/Number/Boolean</td><td>新的值</td></tr></tbody></table><h5 id="案例-8" tabindex="-1">案例 <a class="header-anchor" href="#案例-8" aria-label="Permalink to &quot;案例&quot;">​</a></h5><p>参阅 <a href="#seek-的使用案例">seek的使用案例</a> 案例</p><h4 id="frametype-setparamsizeandposition" tabindex="-1">FrameType.setParamSizeAndPosition <a class="header-anchor" href="#frametype-setparamsizeandposition" aria-label="Permalink to &quot;FrameType.setParamSizeAndPosition&quot;">​</a></h4><p>同时设置 Size 或 Position 相关属性。相比较于 <a href="#frametypesetparam">FrameType.setParam</a> 每次只能设置1个属性，对于常见的位置属性可以使用 <code>FrameType.setParamSizeAndPosition</code> 一次性设置。</p><h5 id="属性-9" tabindex="-1">属性 <a class="header-anchor" href="#属性-9" aria-label="Permalink to &quot;属性&quot;">​</a></h5><p>类型中 None 代表可缺省，即不设置该属性。</p><table><thead><tr><th>属性名</th><th>类型</th><th>介绍</th></tr></thead><tbody><tr><td>frame</td><td>Frame</td><td>需要修改的 frame 句柄</td></tr><tr><td>top</td><td>Number/Percent/None</td><td>顶端</td></tr><tr><td>bottom</td><td>Number/Percent/None</td><td>底端</td></tr><tr><td>left</td><td>Number/Percent/None</td><td>左端</td></tr><tr><td>right</td><td>Number/Percent/None</td><td>右端</td></tr><tr><td>visible</td><td>Boolean/None</td><td>可视</td></tr><tr><td>width</td><td>Number/Percent/None</td><td>宽度</td></tr><tr><td>height</td><td>Number/Percent/None</td><td>高度</td></tr><tr><td>opacity</td><td>Number/None</td><td>透明度 0～1</td></tr><tr><td>scaleWidth</td><td>Number/None</td><td>宽度放缩系数</td></tr><tr><td>scaleHeight</td><td>Number/None</td><td>高度放缩系数</td></tr></tbody></table><h5 id="案例-9" tabindex="-1">案例 <a class="header-anchor" href="#案例-9" aria-label="Permalink to &quot;案例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> image</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ...</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 创建image</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 调整Image位置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> setPositon</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operaData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FrameType.setParamSizeAndPosition, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  frame: image,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  top: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  right: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;10%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  opacity: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 在特定条件下触发 setPositon</span></span></code></pre></div><h3 id="延迟执行" tabindex="-1">延迟执行 <a class="header-anchor" href="#延迟执行" aria-label="Permalink to &quot;延迟执行&quot;">​</a></h3><h4 id="frametype-settimeout" tabindex="-1">FrameType.setTimeout <a class="header-anchor" href="#frametype-settimeout" aria-label="Permalink to &quot;FrameType.setTimeout&quot;">​</a></h4><p>类似 JavaScript <code>setTimeout</code> 的延迟执行。</p><h5 id="属性-10" tabindex="-1">属性 <a class="header-anchor" href="#属性-10" aria-label="Permalink to &quot;属性&quot;">​</a></h5><table><thead><tr><th>属性名</th><th>类型</th><th>介绍</th></tr></thead><tbody><tr><td>timeout</td><td>String/Number/Frame.var</td><td>延迟时长，单位 ms</td></tr><tr><td>cancel</td><td>Boolean</td><td>取消状态，运行时赋值false可提前终止延迟执行</td></tr></tbody></table><h5 id="事件-4" tabindex="-1">事件 <a class="header-anchor" href="#事件-4" aria-label="Permalink to &quot;事件&quot;">​</a></h5><table><thead><tr><th>事件名</th><th>参数</th><th>介绍</th></tr></thead><tbody><tr><td>onEnded</td><td>-</td><td>当延迟结束后</td></tr><tr><td>onCancel</td><td>-</td><td>当主动取消时</td></tr></tbody></table><h5 id="案例-10" tabindex="-1">案例 <a class="header-anchor" href="#案例-10" aria-label="Permalink to &quot;案例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> delay1000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operaData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FrameType.setTimeout, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  timeout: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1000ms</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">delay1000.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  event: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;onEnded&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bind: [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1000ms 后执行的关键动作帧/故事线</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="动画相关" tabindex="-1">动画相关 <a class="header-anchor" href="#动画相关" aria-label="Permalink to &quot;动画相关&quot;">​</a></h3><h4 id="frametype-createanimationfunction" tabindex="-1">FrameType.createAnimationFunction <a class="header-anchor" href="#frametype-createanimationfunction" aria-label="Permalink to &quot;FrameType.createAnimationFunction&quot;">​</a></h4><p>创建动画函数，使得视图组件的某(几)个属性能够按照持续时间完成渐变。无需考虑卸载动画函数，当动画函数被作用的关键动作帧句柄不可视状态时，动画函数将自动结束。</p><p>动画在微信开发者工具（模拟器）中表现异常，以真机表现为准。</p><h5 id="属性-11" tabindex="-1">属性 <a class="header-anchor" href="#属性-11" aria-label="Permalink to &quot;属性&quot;">​</a></h5><table><thead><tr><th>属性名</th><th>类型</th><th>介绍</th></tr></thead><tbody><tr><td>frame</td><td>Frame</td><td>动画被作用的关键动作帧句柄</td></tr><tr><td>duration</td><td>String/Frame.var</td><td>持续时长</td></tr><tr><td>easing</td><td>String/Frame.var</td><td>曲率函数，如 ease-out</td></tr><tr><td>top</td><td>Number/Percent/None</td><td>顶端</td></tr><tr><td>bottom</td><td>Number/Percent/None</td><td>底端</td></tr><tr><td>left</td><td>Number/Percent/None</td><td>左端</td></tr><tr><td>right</td><td>Number/Percent/None</td><td>右端</td></tr><tr><td>visible</td><td>Boolean/None</td><td>可视</td></tr><tr><td>width</td><td>Number/Percent/None</td><td>宽度</td></tr><tr><td>height</td><td>Number/Percent/None</td><td>高度</td></tr><tr><td>opacity</td><td>Number/None</td><td>透明度 0～1</td></tr><tr><td>scaleWidth</td><td>Number/None</td><td>宽度放缩系数</td></tr><tr><td>scaleHeight</td><td>Number/None</td><td>高度放缩系数</td></tr></tbody></table><h5 id="事件-5" tabindex="-1">事件 <a class="header-anchor" href="#事件-5" aria-label="Permalink to &quot;事件&quot;">​</a></h5><table><thead><tr><th>事件名</th><th>参数</th><th>介绍</th></tr></thead><tbody><tr><td>onEnded</td><td>-</td><td>当动画结束后</td></tr></tbody></table><h5 id="案例-11" tabindex="-1">案例 <a class="header-anchor" href="#案例-11" aria-label="Permalink to &quot;案例&quot;">​</a></h5><p>使用动画实现贴图按钮“点击继续”的「呼吸态」是最常见的实用应用，本演示将提供呼吸态按钮的实现：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 一个位于底部居中的 点击继续 按钮</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> button</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operaData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FrameType.createImage, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bottom: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  left: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;50%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  url: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;launchOperaPlay/click_go_on.png&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建一个淡出的动画（透明度从 1-&gt;0.2）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> goonButtonAnimationFadeOut</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operaData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  FrameType.createAnimationFunction,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    opacity: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    duration: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    easing: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ease-out&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    frame: button,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 再创建一个淡入的动画（透明度从 0.2-&gt;1）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> goonButtonAnimationFadeIn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operaData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  FrameType.createAnimationFunction,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    opacity: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    duration: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    easing: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ease-out&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    frame: button,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 需要两个 Animation 结束后互相调用，即 淡入-&gt;结束-&gt;淡出-&gt;结束-&gt;... 循环之</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">goonButtonAnimationFadeOut.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  event: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;onEnded&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bind: goonButtonAnimationFadeIn,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  keep: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// keep = true 很关键，因为该事件将被反复执行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">goonButtonAnimationFadeIn.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  event: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;onEnded&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bind: goonButtonAnimationFadeOut,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  keep: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 挂载一个适合的故事线中触发后则实现「呼吸态」</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">storyLineX.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(button, goonButtonAnimationFadeOut);</span></span></code></pre></div><h3 id="全局变量" tabindex="-1">全局变量 <a class="header-anchor" href="#全局变量" aria-label="Permalink to &quot;全局变量&quot;">​</a></h3><p>全局变量是外界脚本（C#、JavaScript）与剧情内部“沟通”的桥梁，外界可以修改全局变量使得剧情内部完成基于<a href="#条件判断">条件判断</a>实现的不同逻辑分支，外界也可以通过监听某个全局变量值来实时监控剧情内部通过<a href="#frametypesetparam">属性修改</a>产生的一些消息反馈。</p><p>有关外界对全局变量的赋值与监听请阅读<a href="./LaunchOpera.html">API使用文档</a>，本节仅介绍全局变量在剧情编辑时的创建及属性介绍。</p><h4 id="frametype-var" tabindex="-1">FrameType.var <a class="header-anchor" href="#frametype-var" aria-label="Permalink to &quot;FrameType.var&quot;">​</a></h4><p>全局变量目前以字符串类型进行内容存储，为方便使用一般在剧情最早的时候进行创建并挂载到主故事线中。</p><h5 id="属性-12" tabindex="-1">属性 <a class="header-anchor" href="#属性-12" aria-label="Permalink to &quot;属性&quot;">​</a></h5><table><thead><tr><th>属性名</th><th>类型</th><th>介绍</th></tr></thead><tbody><tr><td>value</td><td>String</td><td>变量值</td></tr><tr><td>globalName</td><td>String/None</td><td>全局变量名，设置后可供外界访问。缺省则为剧情内部全局变量，外界无法访问。</td></tr></tbody></table><h5 id="事件-6" tabindex="-1">事件 <a class="header-anchor" href="#事件-6" aria-label="Permalink to &quot;事件&quot;">​</a></h5><table><thead><tr><th>事件名</th><th>参数</th><th>介绍</th></tr></thead><tbody><tr><td>onChange</td><td>-</td><td>当变量被赋值时触发的事件，重复赋相同值也会发生事件</td></tr><tr><td>onChanged</td><td>-</td><td>当变量被赋值且值发生变化时触发的事件</td></tr></tbody></table><h5 id="案例-12" tabindex="-1">案例 <a class="header-anchor" href="#案例-12" aria-label="Permalink to &quot;案例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> var_Level0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operaData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FrameType.var, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  globalName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;level0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 外界可根据此名称读取/监听该全局变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">storyLine.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(var_Level0); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 及时挂载到主故事线使其生效</span></span></code></pre></div><h3 id="条件判断" tabindex="-1">条件判断 <a class="header-anchor" href="#条件判断" aria-label="Permalink to &quot;条件判断&quot;">​</a></h3><h4 id="frametype-if" tabindex="-1">FrameType.if <a class="header-anchor" href="#frametype-if" aria-label="Permalink to &quot;FrameType.if&quot;">​</a></h4><p>可以对某(两)个全局变量进行判断的关键动作帧。</p><h5 id="属性-13" tabindex="-1">属性 <a class="header-anchor" href="#属性-13" aria-label="Permalink to &quot;属性&quot;">​</a></h5><table><thead><tr><th>属性名</th><th>类型</th><th>介绍</th></tr></thead><tbody><tr><td>valueA</td><td>String/Frame.var</td><td>需要对比的变量值或全局变量句柄</td></tr><tr><td>valueB</td><td>String/Frame.var</td><td>需要对比的变量值或全局变量句柄</td></tr></tbody></table><h5 id="事件-7" tabindex="-1">事件 <a class="header-anchor" href="#事件-7" aria-label="Permalink to &quot;事件&quot;">​</a></h5><table><thead><tr><th>事件名</th><th>参数</th><th>介绍</th></tr></thead><tbody><tr><td>isTrue</td><td>-</td><td>当 valueA == valueB 时</td></tr><tr><td>isFalse</td><td>-</td><td>当 valueA != valueB 时</td></tr></tbody></table><h5 id="案例-13" tabindex="-1">案例 <a class="header-anchor" href="#案例-13" aria-label="Permalink to &quot;案例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建变量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> var_Level0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operaData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FrameType.var, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  globalName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;level0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 外界可根据此名称读取/监听该全局变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">storyLine.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(var_Level0); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 及时挂载到主故事线使其生效</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> if_go_on</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operaData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FrameType.if, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  valueA: var_Level0,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  valueB: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 判断 var_Level0 是否 == &#39;1&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;isTrue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    bind: [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ],      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 成立时执行的故事线</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;isFalse&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    bind: [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ],      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 不成立时执行的故事线</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre></div><h3 id="上报" tabindex="-1">上报 <a class="header-anchor" href="#上报" aria-label="Permalink to &quot;上报&quot;">​</a></h3><p>上报模块有助于帮助开发者量化启动剧情不同阶段的用户曝光情况分析用户体验，因此建议游戏开发者合理接入该能力。</p><h4 id="frametype-report" tabindex="-1">FrameType.Report <a class="header-anchor" href="#frametype-report" aria-label="Permalink to &quot;FrameType.Report&quot;">​</a></h4><p>该上报本质使用的是 <a href="https://developers.weixin.qq.com/minigame/dev/guide/performance/perf-action-start-reportScene.html" target="_blank" rel="noreferrer">启动场景上报分析</a> 能力，因此使用前应阅读该能力文档。</p><p>注意：启动上报每个sceneId在一次启动过程中最多只能上报1次，因此在接入故事线打点时请务必确保路径只会执行1次同sceneId的上报。</p><h5 id="属性-14" tabindex="-1">属性 <a class="header-anchor" href="#属性-14" aria-label="Permalink to &quot;属性&quot;">​</a></h5><table><thead><tr><th>属性名</th><th>类型</th><th>介绍</th></tr></thead><tbody><tr><td>sceneId</td><td>String/Frame.var</td><td>自定义上报场景ID</td></tr><tr><td>dimension</td><td>String/Frame.var/None</td><td>自定义上报维度JSON字符串，请阅读上报说明填写</td></tr><tr><td>metric</td><td>String/Frame.var/None</td><td>自定义上报指标JSON字符串，请阅读上报说明填写</td></tr></tbody></table><h5 id="案例-14" tabindex="-1">案例 <a class="header-anchor" href="#案例-14" aria-label="Permalink to &quot;案例&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建好多个 report</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> report_1001</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operaData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FrameType.report, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  sceneId: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1001&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> report_1002</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> operaData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FrameType.report, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  sceneId: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1002&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 合理的位置进行上报</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">video0.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  event: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;onEnded&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bind: [ report_1001 ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 合理的位置进行上报</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">video1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  event: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;onEnded&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bind: [ report_1002 ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="_6-常见q-a" tabindex="-1">6.常见Q&amp;A <a class="header-anchor" href="#_6-常见q-a" aria-label="Permalink to &quot;6.常见Q&amp;A&quot;">​</a></h2><h4 id="_6-1-图片资源可以使用网络图片吗" tabindex="-1">6.1 图片资源可以使用网络图片吗？ <a class="header-anchor" href="#_6-1-图片资源可以使用网络图片吗" aria-label="Permalink to &quot;6.1 图片资源可以使用网络图片吗？&quot;">​</a></h4><p>目前图片资源只能存放于小游戏 minigame 目录中，不可使用网络图片。</p><h4 id="_6-2-为什么要放首帧图片-firstframepic" tabindex="-1">6.2 为什么要放首帧图片（firstFramePic） <a class="header-anchor" href="#_6-2-为什么要放首帧图片-firstframepic" aria-label="Permalink to &quot;6.2 为什么要放首帧图片（firstFramePic）&quot;">​</a></h4><p>图片资源是跟随微信小游戏包上传至微信服务器，所以在小游戏主逻辑运行时，图片资源也处于就绪状态可以同步加载，因此玩家打开游戏时首帧将看到具体的游戏画面。而视频是存放在CDN的远程资源，不可避免的存在加载延迟问题，所以配置好首帧图片后，在视频可播放后再隐藏图片资源。</p>`,212),h=[e];function l(p,k,r,d,E,o){return i(),a("div",null,h)}const g=s(n,[["render",l]]);export{y as __pageData,g as default};
