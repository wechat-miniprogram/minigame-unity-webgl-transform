import{_ as a}from"./chunks/extension-panel.CY9x27Ol.js";import{_ as i,c as e,o as l,a4 as s}from"./chunks/framework.Br2U662V.js";const t="/minigame-unity-webgl-transform/assets/update-plugin.QaxP19qF.png",n="/minigame-unity-webgl-transform/assets/enable-plugin-1.hrkbpNFb.png",r="/minigame-unity-webgl-transform/assets/enable-plugin-2.gCjA-u1u.png",o="/minigame-unity-webgl-transform/assets/start-split.Bf36xgxL.png",p="/minigame-unity-webgl-transform/assets/preproc.B1bs5gTC.png",h="/minigame-unity-webgl-transform/assets/increment-update.B83feQqF.png",d="/minigame-unity-webgl-transform/assets/wait-split.DY23j374.png",c="/minigame-unity-webgl-transform/assets/main.CwerfU8n.png",u="/minigame-unity-webgl-transform/assets/WasmSplitOptimization.C3QOil6A.png",m="/minigame-unity-webgl-transform/assets/WasmSplitFuncName.B2dE-GoF.png",g="/minigame-unity-webgl-transform/assets/WasmSplitCI.DBnBaVMN.png",b="/minigame-unity-webgl-transform/assets/check-version.BiswJbE4.png",F=JSON.parse('{"title":"代码分包","description":"","frontmatter":{},"headers":[],"relativePath":"Design/WasmSplit.md","filePath":"Design/WasmSplit.md"}'),f={name:"Design/WasmSplit.md"},q=s('<h1 id="代码分包" tabindex="-1">代码分包 <a class="header-anchor" href="#代码分包" aria-label="Permalink to &quot;代码分包&quot;">​</a></h1><ul><li><a href="#代码分包">代码分包</a><ul><li><a href="#概述">概述</a><ul><li><a href="#背景">背景</a></li><li><a href="#作用">作用</a></li></ul></li><li><a href="#实现原理">实现原理</a></li><li><a href="#插件安装">插件安装</a></li><li><a href="#插件更新">插件更新</a></li><li><a href="#插件使用">插件使用</a><ul><li><a href="#启用分包">启用分包</a></li><li><a href="#输入版本描述">输入版本描述</a></li><li><a href="#等待上传文件">等待上传文件</a></li><li><a href="#等待预处理">等待预处理</a></li><li><a href="#选择是否增量分包">选择是否增量分包</a></li><li><a href="#等待分包">等待分包</a></li><li><a href="#android收集--ios收集">android收集 + iOS收集</a></li><li><a href="#重复收集与生成">重复收集与生成</a></li><li><a href="#微信优化项">微信优化项</a></li><li><a href="#函数名获取与手动上报">函数名获取与手动上报</a></li><li><a href="#关闭分包">关闭分包</a></li><li><a href="#注意事项">注意事项</a></li></ul></li><li><a href="#CI工具">CI工具</a></li><li><a href="#faq">FAQ</a><ul><li><a href="#分包是否是必要的">分包是否是必要的</a></li><li><a href="#收集到什么时候可以结束">收集到什么时候可以结束</a></li><li><a href="#游戏内容难以遍历完整怎么办">游戏内容难以遍历完整怎么办</a></li><li><a href="#分包总大小比原始包大">分包总大小比原始包大</a></li><li><a href="#新增收集的函数要重新再次提审才会在首包吗">新增收集的函数要重新再次提审才会在首包吗</a></li><li><a href="#会不会最终跑到所有函数都收集的情况">会不会最终跑到所有函数都收集的情况</a></li><li><a href="#ios-高性能模式收集很卡">iOS 高性能模式收集很卡</a></li><li><a href="#ios-高性能模式代码分包后内存反而变得很高">iOS 高性能模式代码分包后内存反而变得很高</a></li><li><a href="#ios-高性能模式出现-impport-sections-count-is-too-big">iOS 高性能模式出现 impport section&#39;s count is too big</a></li><li><a href="#没有看到增量分包的界面">没有看到增量分包的界面</a></li><li><a href="#增量分包没生效">增量分包没生效</a></li><li><a href="#如何更新分包插件">如何更新分包插件</a></li><li><a href="#分包插件安装失败">分包插件安装失败</a></li><li><a href="#分包插件卡住">分包插件卡住</a></li><li><a href="#内存优化版本未观察到内存优化">内存优化版本未观察到内存优化</a></li><li><a href="#如何查看分包插件日志">如何查看分包插件日志</a></li></ul></li><li><a href="#changelog">Changelog</a><ul><li><a href="#v1113">v1.1.13</a><ul><li><a href="#fixed">Fixed</a></li></ul></li><li><a href="#v1112">v1.1.12</a><ul><li><a href="#fixed">Fixed</a></li></ul></li><li><a href="#v1111">v1.1.11</a><ul><li><a href="#fixed">Fixed</a></li></ul></li><li><a href="#v1110">v1.1.10</a><ul><li><a href="#fixed">Fixed</a></li></ul></li><li><a href="#v119">v1.1.9</a><ul><li><a href="#feature">Feature</a></li></ul></li><li><a href="#v118">v1.1.8</a><ul><li><a href="#changed">Changed</a></li></ul></li><li><a href="#v116">v1.1.6</a><ul><li><a href="#changed-1">Changed</a></li></ul></li><li><a href="#v115">v1.1.5</a><ul><li><a href="#fixed-1">Fixed</a></li></ul></li><li><a href="#v114">v1.1.4</a><ul><li><a href="#fixed-2">Fixed</a></li></ul></li><li><a href="#v112">v1.1.2</a><ul><li><a href="#changed-2">Changed</a></li></ul></li><li><a href="#v110">v1.1.0</a><ul><li><a href="#added">Added</a></li></ul></li><li><a href="#v102">v1.0.2</a><ul><li><a href="#added-1">Added</a></li></ul></li></ul></li></ul></li></ul><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><h3 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h3><p>unity 导出小游戏项目后，代码是在一个 wasm 文件里，经过 brotli 压缩后，放在 wasmcode 目录下</p><p>一般小游戏的 wasm 大小都为 30M 左右，压缩后为 6M 左右</p><p>启动阶段，小游戏需要先下载完 wasmcode 再编译，这里会占用较高的内存和时间</p><p>因此我们提供了代码分包工具，将原来的 wasm 拆分为两个，一个用于启动加载（主包），另一个可以延迟加载（子包）</p><p>使得小游戏可以先加载较小的首包进入主场景，再异步加载剩下的分包</p><p>另外对于iOS高性能模式，子包不会加载，会转为按函数粒度按需加载</p><h3 id="作用" tabindex="-1">作用 <a class="header-anchor" href="#作用" aria-label="Permalink to &quot;作用&quot;">​</a></h3><p>分包的作用在于优化启动时间</p><p>另外对于 iOS 新的高性能模式，分包还有两个作用：</p><ol><li>减少内存使用，以支持更多 iOS 低端机上运行高性能模式</li><li>减少编译时间，降低了游戏前期的发烫情况</li></ol><h2 id="实现原理" tabindex="-1">实现原理 <a class="header-anchor" href="#实现原理" aria-label="Permalink to &quot;实现原理&quot;">​</a></h2><p>目前我们采用了一种 Profile Guided Optimization 的方式，通过运行时收集信息，按函数粒度对小游戏的 wasm 代码包进行拆分</p><p>开发者可以在离线测试阶段，通过真机运行小游戏，并尽量覆盖游戏内的场景，特别是启动后最先进入的场景和关卡（比如新手教学，游戏最初的关卡内容）来收集信息</p><p>工具上会显示收集到的函数个数，这时候就可以重新分包，将收集到的函数加入首包</p><p>因此收集工作非常重要，收集的场景覆盖率越高，命中子包的时机就可以相应延后，使得首包可以满足大部分新玩家前几分钟的游戏进程</p><p>我们提供了一个微信开发者工具里的插件来辅助分包过程，依赖的<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html" target="_blank" rel="noreferrer">开发者工具</a>版本为 1.05.2104251 RC 及以上，稳定版 1.05.2105100 已支持</p><h2 id="插件安装" tabindex="-1">插件安装 <a class="header-anchor" href="#插件安装" aria-label="Permalink to &quot;插件安装&quot;">​</a></h2><p>通过开发者工具的设置-拓展设置-编辑器自定义拓展，安装 wasmCodeSplit 这个插件</p><img src="'+a+'"><h2 id="插件更新" tabindex="-1">插件更新 <a class="header-anchor" href="#插件更新" aria-label="Permalink to &quot;插件更新&quot;">​</a></h2><p>开发者工具上（如果用的是stable版，非minigame版）的插件一般是自动更新的</p><p>手动更新 <img src="'+t+'"></p><h2 id="插件使用" tabindex="-1">插件使用 <a class="header-anchor" href="#插件使用" aria-label="Permalink to &quot;插件使用&quot;">​</a></h2><p>分包插件按小游戏的md5（wasmcode下的wasm文件名里的md5）来区分不同的小游戏包</p><p>相同md5的小游戏包会复用同一份分包结果</p><p>对于新构建的小游戏包，分包流程如下：</p><ul><li>点启用代码分包</li><li>输入当前项目版本描述</li><li>等待上传代码包</li><li>等待预处理</li><li>选择是否增量分包，然后下一步</li><li>等待第一次分包</li><li>进入正式分包阶段，先android收集，然后继续下一步</li><li>iOS收集，然后继续下一步</li><li>选择生成profile或者release包，然后收集，这一步可以重复进行</li></ul><p>最后一步这里已经可以随时上传体验版了</p><p>具体操作和注意事项如下</p><h4 id="启用分包" tabindex="-1">启用分包 <a class="header-anchor" href="#启用分包" aria-label="Permalink to &quot;启用分包&quot;">​</a></h4><p>打开插件开关后，在目录树上的工具栏中，可以看到插件的按钮，如图所示，点击后即可进入插件页： <img src="'+n+'"></p><h4 id="输入版本描述" tabindex="-1">输入版本描述 <a class="header-anchor" href="#输入版本描述" aria-label="Permalink to &quot;输入版本描述&quot;">​</a></h4><img src="'+r+'"><h4 id="等待上传文件" tabindex="-1">等待上传文件 <a class="header-anchor" href="#等待上传文件" aria-label="Permalink to &quot;等待上传文件&quot;">​</a></h4><img src="'+o+'"><h4 id="等待预处理" tabindex="-1">等待预处理 <a class="header-anchor" href="#等待预处理" aria-label="Permalink to &quot;等待预处理&quot;">​</a></h4><img src="'+p+'"><p><strong>注意：如果出现红框中的提示，说明这里的状态更新已经中断，需要重启开发者工具</strong></p><p>这一步一般是分钟级的耗时，<strong>如果等待超过10分钟，建议先重启下开发者工具</strong></p><h4 id="选择是否增量分包" tabindex="-1">选择是否增量分包 <a class="header-anchor" href="#选择是否增量分包" aria-label="Permalink to &quot;选择是否增量分包&quot;">​</a></h4><img src="'+h+'"><p>如果这个游戏之前的包已经有用过代码分包，没有比较大的代码修改的情况下（比如大范围的代码重构，更换引擎），可以使用增量更新，也就是选择之前的某个包作为参考</p><p>我们会对比前后两个包的symbol，把之前收集过的函数当做放到首包，即无需重复收集</p><p>因此要求前后两个包都必须提供symbol文件</p><p><strong>在unity侧使用微信插件导出时，需要开启profiling func</strong>，这样打包时就会导出symbol文件</p><p><strong>无需担心开启profiling func导致的包体增大，分包工具会优化函数名</strong></p><h4 id="等待分包" tabindex="-1">等待分包 <a class="header-anchor" href="#等待分包" aria-label="Permalink to &quot;等待分包&quot;">​</a></h4><img src="'+d+'"><h4 id="android收集-ios收集" tabindex="-1"><p id="android-and-ios-collection">android收集 + iOS收集</p> <a class="header-anchor" href="#android收集-ios收集" aria-label="Permalink to &quot;&lt;p id=&quot;android-and-ios-collection&quot;&gt;android收集 + iOS收集&lt;/p&gt;&quot;">​</a></h4><img src="'+c+'"><p>分包的收集，一般需要android和iOS单独收集</p><p>收集操作：</p><ul><li>点击开发者工具的预览（<strong>注意是预览，不是真机调试</strong>，在真机上跑游戏，覆盖尽可能多的场景</li><li>当插件页显示的收集到增量函数个数相对稳定时，可以点击“我已收集好，继续下一步”</li></ul><p>这里主要关注首包函数个数，一般跑完这两个步骤首包函数占整包函数个数的30%以上就差不多了</p><h4 id="重复收集与生成" tabindex="-1">重复收集与生成 <a class="header-anchor" href="#重复收集与生成" aria-label="Permalink to &quot;重复收集与生成&quot;">​</a></h4><p>android和iOS收集完，基本就可以测试和发布了</p><p>有条件的话，可以尽量覆盖各种机型(主流品牌)再多跑几次收集</p><p>每次收集发现新增函数趋于稳定之后，就可以继续点生成profile分包或者生成release分包</p><p>每次点生成时，会先跳到前面的等待分包界面，完成后再回来</p><p><strong>每次生成会当前的分包version会加1</strong></p><h4 id="微信优化项" tabindex="-1">微信优化项 <a class="header-anchor" href="#微信优化项" aria-label="Permalink to &quot;微信优化项&quot;">​</a></h4><p>在“后台服务版本：6”的基础上支持选择开启特殊优化。</p><ul><li><strong>profile包性能优化</strong>会修改函数调用上报的记录方式，使得运行性能接近 release 包，提高收集函数的效率，并且不存在什么负面影响，默认开启。</li><li><strong>函数量优化</strong>可以进一步减小分包后的wasm包中的函数量，从而减小编译内存占用。但是会对运行性能有负面影响，新版本 UnityPlugin 会上报用于优化此功能的信息，可将性能损耗控制在 5% 以内且避免一些异常情况。所以为了避免严重的负面影响只在unityPluginVersion≥1.2.69时显示勾选框，且默认不启用。 <img src="'+u+'" alt="微信优化项"></li></ul><h4 id="函数名获取与手动上报" tabindex="-1">函数名获取与手动上报 <a class="header-anchor" href="#函数名获取与手动上报" aria-label="Permalink to &quot;函数名获取与手动上报&quot;">​</a></h4><p>为了方便开发者分析首包函数来精简代码，提供了“已收集函数名获取”和“手动上报”的能力。</p><p>点击“获取首包函数名和新增函数的函数名”会下载并打开两个txt文件分别包含首包函数名和新增函数名。</p><p>点击“选择函数名文件手动上报”即可选择之前下载的函数名文件上报，方便在切换 appid 后也能实现增量分包，也可以针对自己游戏预先准备好一份函数名文件手动上传来节约人工运行收集函数的时间。</p><p><img src="'+m+`" alt="函数名获取与手动上报"></p><h3 id="关闭分包" tabindex="-1">关闭分包 <a class="header-anchor" href="#关闭分包" aria-label="Permalink to &quot;关闭分包&quot;">​</a></h3><p>如果想回退到未分包的版本，点击关闭代码分包即可</p><h3 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h3><p>上线前</p><ul><li>生成release版分包</li><li><code>首包函数个数</code>至少要有原始包函数总数的30%</li><li><code>新增收集函数个数</code>清零</li><li>关注android或者iOS普通模式的子包是否过早加载（是否有<code>wait for func</code>的日志）</li><li>关注iOS高性能是否有<code>fetch js</code>相关的日志</li></ul><p>如果有最后两点，那就还要继续收集+生成分包</p><p>上线后</p><ul><li>小游戏包先不要删掉</li><li><code>新增收集函数个数</code>这个数据非常重要，要尽量保持关注，包括上线后</li></ul><p>如果上线后，有玩家遇到新增函数个数，分包插件上也会更新（主要来源是iOS高性能），或者收到小游戏数据助手的相关告警，这个时候要继续生成分包，同时提审发布</p><h2 id="ci工具" tabindex="-1">CI工具 <a class="header-anchor" href="#ci工具" aria-label="Permalink to &quot;CI工具&quot;">​</a></h2><p>wasm代码分包作为微信开发者工具的插件，需要开发者在微信开发者工具中手动操作，在高频发布场景下效率偏低</p><p>因此我们提供wasmsplit-ci工具，可以不打开微信开发者工具，独立使用进行分包的各种操作（真机收集除外），供开发者集成到ci流水线上</p><h3 id="功能" tabindex="-1">功能 <a class="header-anchor" href="#功能" aria-label="Permalink to &quot;功能&quot;">​</a></h3><p>wasmsplit-ci目前提供以下能力：</p><ul><li>打开分包</li><li>生成分包</li><li>获取分包信息</li><li>关闭分包</li></ul><p>建议使用场景:</p><ul><li>大版本开发阶段：按新增函数阈值定期生成profile包</li><li>小版本（代码无修改或无新增函数）或者bugfix阶段：直接走增量分包生成release包</li></ul><h3 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h3><h4 id="密钥配置" tabindex="-1">密钥配置 <a class="header-anchor" href="#密钥配置" aria-label="Permalink to &quot;密钥配置&quot;">​</a></h4><p>wasmsplit-ci的使用需要传入密钥，需要在mp管理端-开发支持-研发工具箱-密钥管理-Wasm分包CI鉴权配置密钥</p><h3 id="命令行调用" tabindex="-1">命令行调用 <a class="header-anchor" href="#命令行调用" aria-label="Permalink to &quot;命令行调用&quot;">​</a></h3><h4 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h4><p>通过npm获取</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>npm install -g wasmsplit-ci</span></span></code></pre></div><h4 id="支持命令" tabindex="-1">支持命令 <a class="header-anchor" href="#支持命令" aria-label="Permalink to &quot;支持命令&quot;">​</a></h4><p>打开分包</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Usage: wasmsplit-ci init [options]</span></span>
<span class="line"><span>init miniprogram</span></span>
<span class="line"><span>Options:</span></span>
<span class="line"><span>  -p, --project-path &lt;projectPath&gt;                </span></span>
<span class="line"><span>      project path, 小游戏项目的路径, 必填</span></span>
<span class="line"><span>  -k, --private-key-path &lt;privateKeyPath&gt;         </span></span>
<span class="line"><span>      private key path, 私钥文件的保存位置, 必填</span></span>
<span class="line"><span>  -d, --version-description &lt;versionDescription&gt;  </span></span>
<span class="line"><span>      version description, 版本描述</span></span>
<span class="line"><span>  -r, --refer-md5 &lt;originalMd5&gt;                   </span></span>
<span class="line"><span>      original code md5, 历史代码包md5</span></span>
<span class="line"><span>  -h, --help                                      </span></span>
<span class="line"><span>      display help for command</span></span></code></pre></div><p>init命令会检查当前项目（appid+code_md5）的分包状态，完成必须的前置准备工作</p><p><strong>流水线每次执行</strong>都需调用init命令进行初始化操作</p><p><strong>如果本次流水线需要增量更新</strong>则需传入供增量参考的游戏包的md5</p><p>增量更新必须在项目首次分包时使用</p><p>示例</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 首次分包，需要增量分包</span></span>
<span class="line"><span>wasmsplit-ci init -p ./minigame-dir/ -k ./ci-privatekey -d &quot;v1.0.0&quot; -r $REFER_MD5</span></span>
<span class="line"><span># 非首次分包，或者首次但不需要增量分包</span></span>
<span class="line"><span>wasmsplit-ci init -p ./minigame-dir/ -k ./ci-privatekey -d &quot;v1.0.0&quot;</span></span></code></pre></div><p>查看当前分包信息</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Usage: wasmsplit-ci getinfo [options]</span></span>
<span class="line"><span>get minigame function info</span></span>
<span class="line"><span>Options:  -p, --project-path &lt;projectPath&gt;         </span></span>
<span class="line"><span>      project path, 小游戏项目路径, 必填</span></span>
<span class="line"><span>  -k, --private-key-path &lt;privateKeyPath&gt;  </span></span>
<span class="line"><span>      private key path, 私钥文件路径, 必填</span></span>
<span class="line"><span>  -h, --help                               </span></span>
<span class="line"><span>      display help for command</span></span></code></pre></div><p>getinfo获取信息，并以json格式保存在&quot;$projectpath/.plugincache/codesplit/gameinfo.txt&quot;中。</p><p>getinfo的json字段说明</p><table><thead><tr><th>键</th><th>说明</th></tr></thead><tbody><tr><td>isProfile</td><td>当前分包版本(profile或release)</td></tr><tr><td>appid</td><td>当前项目AppId</td></tr><tr><td>md5</td><td>当前代码md5</td></tr><tr><td>subVersion</td><td>当前分包version</td></tr><tr><td>apiVersion</td><td>当前后台服务版本</td></tr><tr><td>sourceFuncNum</td><td>原始包函数总个数</td></tr><tr><td>increaseNum</td><td>新增收集函数个数</td></tr><tr><td>currentNum</td><td>当前首包函数个数</td></tr></tbody></table><p>示例</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>wasmsplit-ci getinfo -p ./minigame-dir/ -k ./ci-privatekey</span></span></code></pre></div><p>生成分包</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Usage: wasmsplit-ci dosplit [options]</span></span>
<span class="line"><span>split minigame package</span></span>
<span class="line"><span>Options:  -p, --project-path &lt;projectPath&gt;         </span></span>
<span class="line"><span>      project path, 小游戏项目路径, 必填</span></span>
<span class="line"><span>  -k, --private-key-path &lt;privateKeyPath&gt;  </span></span>
<span class="line"><span>      private key path, 私钥文件路径, 必填</span></span>
<span class="line"><span>  --release                                </span></span>
<span class="line"><span>      release, otherwise profile, 是否release分包</span></span>
<span class="line"><span>  -h, --help                               </span></span>
<span class="line"><span>      display help for command</span></span></code></pre></div><p>有新增函数即可调用，命令执行成功后会<strong>下载分包结果，应用到minigame-dir目录</strong>，执行失败可重复执行</p><p>生成分包后，可随时上传体验版</p><p>示例</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># profile</span></span>
<span class="line"><span>wasmsplit-ci dosplit -p ./minigame-dir/ -k ./ci-privatekey</span></span>
<span class="line"><span>#release</span></span>
<span class="line"><span>wasmsplit-ci dosplit -p ./minigame-dir/ -k ./ci-privatekey --release</span></span></code></pre></div><p>关闭代码分包</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Usage: wasmsplit-ci disable [options]</span></span>
<span class="line"><span>disable code split Options:</span></span>
<span class="line"><span>  -p, --project-path &lt;string&gt;  project path, 小游戏项目路径, 必填 </span></span>
<span class="line"><span>  -h, --help                    display help for command</span></span></code></pre></div><p>disable命令用于关闭代码分包，和插件的关闭代码分包作用相同</p><p>示例</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>wasmsplit-ci disable -p ./minigame-dir/</span></span></code></pre></div><h3 id="流水线示例流程" tabindex="-1">流水线示例流程 <a class="header-anchor" href="#流水线示例流程" aria-label="Permalink to &quot;流水线示例流程&quot;">​</a></h3><p><img src="`+g+'" alt="alt text"></p><h3 id="注意事项-1" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项-1" aria-label="Permalink to &quot;注意事项&quot;">​</a></h3><ul><li>此工具不能完成真机收集过程，真机收集仍需开发者单独执行</li><li>分包工具CI不提供预览及上传功能，可以使用微信开发者工具CI进行预览</li><li>请不要将密钥配置文件（id_rsa.conf）放在小游戏项目下，这会导致密钥文件一同被上传</li><li>日志文件保存在$projectpath/.plugincache/codesplit/log目录下，使用两个文件滚动保存(latest.log和backup.log)，每个文件保存最大容量为5M</li><li>如需更改appid,自行修改项目路径下project.config.json文件中的appid</li></ul><h3 id="常见问题排查" tabindex="-1">常见问题排查 <a class="header-anchor" href="#常见问题排查" aria-label="Permalink to &quot;常见问题排查&quot;">​</a></h3><ul><li>错误码:-10000401 密钥检验失败，请检查密钥是否正确 验签失败，请检查公钥私钥是否匹配</li><li>出现&quot;need retry task: retryInit&quot;之类的日志后中断执行，如果不是私钥路径错误的话，一般是私钥格式不对，私钥和MP配置的公钥都需要是PEM格式的。</li><li>使用CI分包后，miniprogram-ci上传时报错&quot;main package source size 4369KB exceed max limit 4096KB&quot;，需要更新miniprogram-ci到beta版2.1.14。</li></ul><h2 id="faq" tabindex="-1">FAQ <a class="header-anchor" href="#faq" aria-label="Permalink to &quot;FAQ&quot;">​</a></h2><h3 id="分包是否是必要的" tabindex="-1">分包是否是必要的 <a class="header-anchor" href="#分包是否是必要的" aria-label="Permalink to &quot;分包是否是必要的&quot;">​</a></h3><hr><p>对于 iOS 高性能模式，由于内存限制，游戏加载完整 wasm 基本就会内存 crash。分包能降低内存占用，同时我们对子包支持按需加载，才让游戏能稳定跑起来</p><p>所以如果是使用了 iOS 高性能模式则是必须的</p><p>对于 android 和 iOS 普通模式，分包主要目的是优化启动加载，另外这两个 runtime 下由于子包可以全量加载，因此对游戏运行影响最多只有加载子包的一次性影响</p><p>我们也会在启动 callmain 后 30s 提前加载子包，在这个时间之后才触发未收集函数的情况也不会有加载子包的影响</p><h3 id="收集到什么时候可以结束" tabindex="-1">收集到什么时候可以结束 <a class="header-anchor" href="#收集到什么时候可以结束" aria-label="Permalink to &quot;收集到什么时候可以结束&quot;">​</a></h3><hr><p>按照我们经验，一般首包函数有整包个数的 33%以上的时候就可以接受了，当然能尽量再收集完善刚好，个别游戏可能会接近 50%</p><p>这时候不代表没收集的函数都没用了，实际上有些函数可能只是调用比较冷门，后续还是可能会被调到，可以通过分包插件面板的<code>新增收集函数个数</code>来留意线上新增的情况，</p><p>如果线上新增较多（超过 50），可以考虑再往下分一次包然后提审发布</p><h3 id="游戏内容难以遍历完整怎么办" tabindex="-1">游戏内容难以遍历完整怎么办 <a class="header-anchor" href="#游戏内容难以遍历完整怎么办" aria-label="Permalink to &quot;游戏内容难以遍历完整怎么办&quot;">​</a></h3><p>我们针对这种情况也有线上patch可以进行补漏，但是patch有大小限制</p><p>建议新增收集函数个数超过100个的还是要生成新分包+发版本</p><h3 id="分包总大小比原始包大" tabindex="-1">分包总大小比原始包大 <a class="header-anchor" href="#分包总大小比原始包大" aria-label="Permalink to &quot;分包总大小比原始包大&quot;">​</a></h3><hr><ol><li>分包的目的主要是将启动时需要的包减小，一般分包后wasm首包可以控制在原包的1/3到1/2之间</li><li>子包是有延迟加载的，因此耗时上不需要看总的大小，看首包的减少量即可</li><li>一般iOS高性能模式才有内存使用瓶颈，而iOS上子包是按需加载的，可以缓解内存问题 因此，这里不需要关注分包后所有wasm包的总和，主要关注wasm首包（即minigame/wasmcode）的大小即可</li></ol><h3 id="新增收集的函数要重新再次提审才会在首包吗" tabindex="-1">新增收集的函数要重新再次提审才会在首包吗 <a class="header-anchor" href="#新增收集的函数要重新再次提审才会在首包吗" aria-label="Permalink to &quot;新增收集的函数要重新再次提审才会在首包吗&quot;">​</a></h3><hr><p>对的，用户下载的代码包只能是提审发布过的</p><h3 id="会不会最终跑到所有函数都收集的情况" tabindex="-1">会不会最终跑到所有函数都收集的情况 <a class="header-anchor" href="#会不会最终跑到所有函数都收集的情况" aria-label="Permalink to &quot;会不会最终跑到所有函数都收集的情况&quot;">​</a></h3><hr><p>目前还没出现这种情况，超过整包 50%的都很少</p><p>大部分游戏收集 1 小时的函数个数都在 33%到 50%之间</p><p>可以等收集函数超过 75%了再来考虑这个问题</p><h3 id="ios-高性能模式收集很卡" tabindex="-1"><p id="ios-high-performance-lag-when-profiling">iOS 高性能模式收集很卡</p> <a class="header-anchor" href="#ios-高性能模式收集很卡" aria-label="Permalink to &quot;&lt;p id=&quot;ios-high-performance-lag-when-profiling&quot;&gt;iOS 高性能模式收集很卡&lt;/p&gt;&quot;">​</a></h3><hr><p>iOS 高性能模式由于加载子包的实现不同，刚开始收集时又基本是跑子包函数，所以最开始的收集会比较卡</p><p>这个时候可以观察分包插件面板，如果能看到有新增函数个数的变化，一般就是没问题的。如果出现卡顿（并且有新增函数）或者新增函数较多（超过 50），可以先继续往下生成分包，再进行收集。游戏运行会随着收集越来越流畅</p><h3 id="ios-高性能模式代码分包后内存反而变得很高" tabindex="-1"><p id="ios-high-performance-more-memory">iOS 高性能模式代码分包后内存反而变得很高</p> <a class="header-anchor" href="#ios-高性能模式代码分包后内存反而变得很高" aria-label="Permalink to &quot;&lt;p id=&quot;ios-high-performance-more-memory&quot;&gt;iOS 高性能模式代码分包后内存反而变得很高&lt;/p&gt;&quot;">​</a></h3><hr><p>这种情况一般是太多新增函数（比如几百个），iOS 高性能模式的子包代码也会占用大量内存，可以继续生成分包，将这部分函数放在首包（放首包的内存占用相对小些）</p><h3 id="ios-高性能模式出现-impport-section-s-count-is-too-big" tabindex="-1"><p id="ios-high-performance-import-section-too-big">iOS 高性能模式出现 impport section&#39;s count is too big</p> <a class="header-anchor" href="#ios-高性能模式出现-impport-section-s-count-is-too-big" aria-label="Permalink to &quot;&lt;p id=&quot;ios-high-performance-import-section-too-big&quot;&gt;iOS 高性能模式出现 impport section&#39;s count is too big&lt;/p&gt;&quot;">​</a></h3><hr><p>新版的插件已经规避这个问题，更新插件即可</p><h3 id="没有看到增量分包的界面" tabindex="-1">没有看到增量分包的界面 <a class="header-anchor" href="#没有看到增量分包的界面" aria-label="Permalink to &quot;没有看到增量分包的界面&quot;">​</a></h3><hr><p>由于增量分包是新增的功能，因此之前的项目不能被用来增量更新。更新分包插件后，第二次导出的版本开始才可以使用</p><h3 id="增量分包没生效" tabindex="-1">增量分包没生效 <a class="header-anchor" href="#增量分包没生效" aria-label="Permalink to &quot;增量分包没生效&quot;">​</a></h3><hr><p>请检查指定参考的旧版本以及当前版本是否都有 symbol 文件，以及是否有更换引擎或者其他导致代码变动较大的操作</p><h3 id="如何更新分包插件" tabindex="-1">如何更新分包插件 <a class="header-anchor" href="#如何更新分包插件" aria-label="Permalink to &quot;如何更新分包插件&quot;">​</a></h3><hr><p>微信开发者工具会自动更新分包插件，一般不需要手动更新。可前往<strong>微信开发者工具-编辑器区域-拓展列表</strong>查看插件版本确认是否为最新版本</p><blockquote><p>请勿使用小游戏版微信开发者工具，会出现插件无法正常更新或安装。请前往：适配文档-安装与使用，下载stable版本微信开发者工具。</p></blockquote><img src="'+b+'"><h3 id="分包插件安装失败" tabindex="-1">分包插件安装失败 <a class="header-anchor" href="#分包插件安装失败" aria-label="Permalink to &quot;分包插件安装失败&quot;">​</a></h3><hr><p><strong>首先确认是否为stable版本开发者工具。</strong></p><p>有两个地方可安装插件:</p><ol><li>编辑器区域-拓展：搜索wasm-code-split，点击安装</li><li>菜单栏-设置-拓展设置，找到wasmcodesplit，点击进入详情页，点击获取</li></ol><h3 id="分包插件卡住" tabindex="-1">分包插件卡住 <a class="header-anchor" href="#分包插件卡住" aria-label="Permalink to &quot;分包插件卡住&quot;">​</a></h3><p>遇到流程卡住问题，一般先尝试关闭分包，然后重启开发者工具，再打开分包，大部分时候有奇效</p><h3 id="内存优化版本未观察到内存优化" tabindex="-1">内存优化版本未观察到内存优化 <a class="header-anchor" href="#内存优化版本未观察到内存优化" aria-label="Permalink to &quot;内存优化版本未观察到内存优化&quot;">​</a></h3><hr><ol><li>首先排查项目是否已经是内存优化版本的分包：插件面板当前后台服务版本为3（或者看framework最后的API_VERSION）</li><li>这里的内存优化主要针对iOS高性能模式，主要是减少了编译相关的内存（和函数个数相关，10w+函数的包可以减少约100M），可以通过在callmain或者raf之前暂停来观察</li><li>最终到游戏内有可能会上涨到和原来差不多，但这个是受gc策略和系统进程内存优化的影响，可以点右上角退出小游戏触发强制gc来观察</li></ol><h3 id="如何查看分包插件日志" tabindex="-1">如何查看分包插件日志 <a class="header-anchor" href="#如何查看分包插件日志" aria-label="Permalink to &quot;如何查看分包插件日志&quot;">​</a></h3><p>当出现问题时，优先排查是否stable版本的微信开发者工具，能解决大部分问题。 若问题仍无法解决，可<a href="./IssueAndContact.html">联系我们</a>，提供日志排查。 日志获取方式：</p><blockquote><p>菜单栏-微信开发者工具-调试-调试微信开发者工具，搜索关键字：extension host。可右键保存日志文件</p></blockquote><h2 id="changelog" tabindex="-1">Changelog <a class="header-anchor" href="#changelog" aria-label="Permalink to &quot;Changelog&quot;">​</a></h2><h3 id="v1-1-13" tabindex="-1">v1.1.13 <a class="header-anchor" href="#v1-1-13" aria-label="Permalink to &quot;v1.1.13&quot;">​</a></h3><h4 id="fixed" tabindex="-1">Fixed <a class="header-anchor" href="#fixed" aria-label="Permalink to &quot;Fixed&quot;">​</a></h4><ul><li>1.1.12无法安装、更新</li></ul><h3 id="v1-1-12" tabindex="-1">v1.1.12 <a class="header-anchor" href="#v1-1-12" aria-label="Permalink to &quot;v1.1.12&quot;">​</a></h3><h4 id="fixed-1" tabindex="-1">Fixed <a class="header-anchor" href="#fixed-1" aria-label="Permalink to &quot;Fixed&quot;">​</a></h4><ul><li>patch编译后未生效</li></ul><h3 id="v1-1-11" tabindex="-1">v1.1.11 <a class="header-anchor" href="#v1-1-11" aria-label="Permalink to &quot;v1.1.11&quot;">​</a></h3><h4 id="fixed-2" tabindex="-1">Fixed <a class="header-anchor" href="#fixed-2" aria-label="Permalink to &quot;Fixed&quot;">​</a></h4><ul><li>修复回退为旧分包方案的bug</li></ul><h3 id="v1-1-10" tabindex="-1">v1.1.10 <a class="header-anchor" href="#v1-1-10" aria-label="Permalink to &quot;v1.1.10&quot;">​</a></h3><h4 id="fixed-3" tabindex="-1">Fixed <a class="header-anchor" href="#fixed-3" aria-label="Permalink to &quot;Fixed&quot;">​</a></h4><ul><li>开发者工具插件偶现<code>下载wk_import包失败</code>错误</li></ul><h3 id="v1-1-9" tabindex="-1">v1.1.9 <a class="header-anchor" href="#v1-1-9" aria-label="Permalink to &quot;v1.1.9&quot;">​</a></h3><h4 id="feature" tabindex="-1">Feature <a class="header-anchor" href="#feature" aria-label="Permalink to &quot;Feature&quot;">​</a></h4><ul><li>选择增量更新时可查看首包个数、最后收集时间</li></ul><h3 id="v1-1-8" tabindex="-1">v1.1.8 <a class="header-anchor" href="#v1-1-8" aria-label="Permalink to &quot;v1.1.8&quot;">​</a></h3><h4 id="changed" tabindex="-1">Changed <a class="header-anchor" href="#changed" aria-label="Permalink to &quot;Changed&quot;">​</a></h4><ul><li>拉取分包时网络异常弹框提示</li></ul><h3 id="v1-1-6" tabindex="-1">v1.1.6 <a class="header-anchor" href="#v1-1-6" aria-label="Permalink to &quot;v1.1.6&quot;">​</a></h3><h4 id="changed-1" tabindex="-1">Changed <a class="header-anchor" href="#changed-1" aria-label="Permalink to &quot;Changed&quot;">​</a></h4><ul><li>移除无用代码</li></ul><h3 id="v1-1-5" tabindex="-1">v1.1.5 <a class="header-anchor" href="#v1-1-5" aria-label="Permalink to &quot;v1.1.5&quot;">​</a></h3><h4 id="fixed-4" tabindex="-1">Fixed <a class="header-anchor" href="#fixed-4" aria-label="Permalink to &quot;Fixed&quot;">​</a></h4><ul><li>iOS普通模式无法进入游戏</li><li>安卓微信客户端8.0.25无法进入游戏</li></ul><h3 id="v1-1-4" tabindex="-1">v1.1.4 <a class="header-anchor" href="#v1-1-4" aria-label="Permalink to &quot;v1.1.4&quot;">​</a></h3><h4 id="fixed-5" tabindex="-1">Fixed <a class="header-anchor" href="#fixed-5" aria-label="Permalink to &quot;Fixed&quot;">​</a></h4><ul><li>修复iOS profile版在高性能模式下卡与内存不足的问题</li><li>修复android偶现<code>null function or function signature mismatch</code>问题</li><li>修复iOS普通模式运行出错的问题</li></ul><h3 id="v1-1-2" tabindex="-1">v1.1.2 <a class="header-anchor" href="#v1-1-2" aria-label="Permalink to &quot;v1.1.2&quot;">​</a></h3><h4 id="changed-2" tabindex="-1">Changed <a class="header-anchor" href="#changed-2" aria-label="Permalink to &quot;Changed&quot;">​</a></h4><ul><li>插件新旧版本分包兼容</li></ul><h3 id="v1-1-0" tabindex="-1">v1.1.0 <a class="header-anchor" href="#v1-1-0" aria-label="Permalink to &quot;v1.1.0&quot;">​</a></h3><h4 id="added" tabindex="-1">Added <a class="header-anchor" href="#added" aria-label="Permalink to &quot;Added&quot;">​</a></h4><ul><li>iOS高性能内存优化： <ul><li>使用条件：<strong>转换插件版本高于202212070000</strong>且<strong>重新导出</strong></li></ul></li><li>分包插件交互优化 <ul><li>等待预处理提前到选择是否增量更新的界面，收集时可使用安卓和iOS同时进行</li><li>收集界面增加连接状态、appid信息展示</li></ul></li></ul><h3 id="v1-0-2" tabindex="-1">v1.0.2 <a class="header-anchor" href="#v1-0-2" aria-label="Permalink to &quot;v1.0.2&quot;">​</a></h3><h4 id="added-1" tabindex="-1">Added <a class="header-anchor" href="#added-1" aria-label="Permalink to &quot;Added&quot;">​</a></h4><ul><li>包体优化&amp;广告买量启动优化 <ul><li>使用条件：<strong>转换插件版本高于202212070000导出的包</strong></li></ul></li></ul>',226),v=[q];function k(x,P,y,_,w,C){return l(),e("div",null,v)}const j=i(f,[["render",k]]);export{F as __pageData,j as default};
